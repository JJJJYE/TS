[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Time Series Analysis",
    "section": "",
    "text": "About\nThis book serves as a comprehensive and practical guide for anyone working with time series data—from beginners seeking a solid foundation to experienced analysts aiming to build sophisticated forecasting models. It begins with classical statistical models such as AR, MA, ARMA, ARIMA, and SARIMA, providing both theoretical background and hands-on implementation using R.\nGoing beyond the basics, the book explores advanced modeling techniques including regression-based forecasting, Dynamic Harmonic Regression (DHR), and Seasonal-Trend decomposition with Loess (STLM). Each method is presented with clear explanations and practical R code examples, allowing readers to understand not only how the models work but also when and why to use them.\nIn addition, the book delves into modern approaches to time series forecasting using machine learning and deep learning. Techniques such as Random Forest, XGBoost, LSTM, and GRU are introduced in the context of time series applications, with detailed R implementations that bridge the gap between traditional methods and cutting-edge analytics.\nBy combining theory with real-world applications, this book equips readers with the tools to uncover patterns, model complex dynamics, and generate reliable forecasts. It is designed for data scientists, statisticians, economists, and researchers in any field where time-dependent data plays a critical role.\n※Download Example Data",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Welcome</span>"
    ]
  },
  {
    "objectID": "AR.html",
    "href": "AR.html",
    "title": "2  Autoregressive Process",
    "section": "",
    "text": "2.1 함수 설명",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Autoregressive Process</span>"
    ]
  },
  {
    "objectID": "AR.html#함수-설명",
    "href": "AR.html#함수-설명",
    "title": "2  Autoregressive Process",
    "section": "",
    "text": "관측된 시계열에 자기회귀모형(Autoregressive Model)을 구축하는 데 유용한 함수를 요약하면 다음과 같다.\n\n\n\n\n\n\n\n\n함수\n설명\n\n\n\n\narima()\nAR모형의 차수 \\(p\\)를 지정하여 모형 구축\n\n\nauto.arima()\n모형의 차수 지정없이 자동적으로 최적화된 모형 구축\n\n\nadf.test(), pp.test(), kpss.test()\n단위근 검정\n\n\nacf()\n상관도표그림\n\n\npacf()\n부분상관도표그림\n\n\nBox.test()\nLjung-Box Test\n\n\ncheckresiduals()\n잔차가 백색잡음과정의 가정을 만족하는지 확인할 때 사용\n\n\nforecast()\n예측",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Autoregressive Process</span>"
    ]
  },
  {
    "objectID": "AR.html#예제",
    "href": "AR.html#예제",
    "title": "2  Autoregressive Process",
    "section": "2.2 예제",
    "text": "2.2 예제\n\n2.2.1 BMW 데이터셋\n\nPackage \"evir\"에서 제공하는 BMW 데이터셋은 1973년 1월부터 1996년 7월 사이에 BMW 주식의 일별 로그 수익률에 대한 시계열 데이터셋이다.\n\n\n# 패키지 설치\npacman::p_load(\"evir\")\n\n# 데이터 불러오기\ndata(bmw, package = \"evir\")\n\n# 시계열 그림\nplot(bmw, type = \"l\")\n\n\n\n\n\n\n\n\nResult! 증가하거나 감소하는 추세가 없어서 시간의 흐름에 따라 평균이 일정하다.\n\n# 상관도표그림\nacf(bmw)\n\n\n\n\n\n\n\n\nResult! 시차 1에서 막대의 끝이 파란색 선을 넘어가므로 시차 1에 대해 유의한 자기상관관계가 존재한다.\n\n# 부분상관도표그림\npacf(bmw)\n\n\n\n\n\n\n\n\nResult! 시차 1에서 막대의 끝이 파란색 선을 넘어가므로 시차 1에 대해 유의한 부분자기상관관계가 존재한다.\nCaution! 큰 시차에서의 막대 끝이 파란색 선을 넘어가는 것은 우연 변동에 의한 가능성이 높다.\n\n# Ljung-Box Test\nBox.test(bmw, lag = 5,\n         type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  bmw\nX-squared = 44.987, df = 5, p-value = 1.46e-08\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(5)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0에 가까우므로 유의수준 0.05에서 귀무가설을 기각한다. 즉, 관측된 시계열에 대해 \\(\\rho(1), \\rho(2),\\cdots,\\rho(5)\\) 중 유의한 자기상관관계가 적어도 1개 존재한다.\n\n# Fit AR(1)\nAR.bmw &lt;- arima(bmw, \n                order = c(1, 0, 0)) \n\nCaution! 함수 arima()를 이용하여 AR(1) 모형을 구축하려면 옵션 order = c(1, 0, 0)을 입력한다. 만약, AR(\\(p\\)) 모형을 구축하려면 옵션 order = c(p, 0, 0)을 입력하면 된다.\n\n# 모형 추정 결과\nprint(AR.bmw)\n\n\nCall:\narima(x = bmw, order = c(1, 0, 0))\n\nCoefficients:\n         ar1  intercept\n      0.0811      3e-04\ns.e.  0.0127      2e-04\n\nsigma^2 estimated as 0.0002163:  log likelihood = 17212.34,  aic = -34418.68\n\n\nResult! 출력 결과를 요약하면 다음과 같다.\n1. 모수의 추정치는 \\(\\hat{\\mu}=0.0003\\), \\(\\hat{\\phi}=0.0811\\), \\(\\hat{\\sigma}^2_\\epsilon = 0.0002163\\)이다. 이를 이용하면 관측된 시계열에 대해 구축된 AR(1) 모형은 \\(Y_t-0.0003 = 0.0811(Y_{t-1}-0.0003)+\\epsilon_t\\)이다.\n2. \\({\\phi}\\)에 대한 유의성 검정을 수행하면, 검정통계량은 \\(t = (0.0811/0.0127) \\approx 6.39\\)이며 귀무가설(\\(H_0 : \\phi=0\\))하에서 자유도가 \\(6145\\) (관측값 \\(- 1\\))인 \\(t\\) 분포를 따르고 \\(p\\)값이 0에 가깝다. 이에 기반하여 유의수준 0.05에서 \\(p\\)값이 0.05보다 작기 때문에 귀무가설을 기각한다. 즉, \\(\\hat{\\phi}\\)의 값이 굉장히 작지만 \\({\\phi}\\)는 통계적으로 유의하다.\n3. \\(\\hat{\\phi}\\)의 값이 굉장히 작아 어제의 로그 수익률은 오늘의 로그 수익률에 큰 영향을 미치지 않는다. 다시 말해서, 오늘의 수익에서의 어떤 정보가 내일의 수익을 예측하는데 사용 가능하나 추정치가 너무 작아 예측이 그렇게 정확하지 않을 수 있다.\n\n# 진차를 이용한 모형 진단\nBox.test(residuals(AR.bmw), lag = 5,\n         type = \"Ljung-Box\",\n         fitdf = 1)                 # AR 모형의 추정한 회귀 모수 phi 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(AR.bmw)\nX-squared = 6.8669, df = 4, p-value = 0.1431\n\n\nCaution! 잔차는 함수 residuals()를 이용하여 추출할 수 있다.\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(5)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0.1431이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 5까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(5)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 해당 시계열에 대해 AR(1) 모형을 가정하는 것이 적절하다.\n\n# 잔차에 대한 상관도표그림\nacf(residuals(AR.bmw))\n\n\n\n\n\n\n\n\nResult! 시차 1 이상에서 막대의 끝이 파란색 선 밖에 나가지 않으므로 유의한 자기상관계수가 존재한다는 증거가 부족하다. 큰 시차(예를 들어, 시차 19)에서 막대의 끝이 파란색 선 밖에 나가는 것은 우연 변동에 의한 가능성이 높다.\nCaution! 관측된 시계열의 개수가 많은 경우, 큰 시차에서 유의한 자기상관계수가 존재할 수 있다.\n\n# 진차를 이용한 모형 진단\nBox.test(residuals(AR.bmw), lag = 15,\n         type = \"Ljung-Box\",\n         fitdf = 1)                 # AR 모형의 추정한 회귀 모수 phi 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(AR.bmw)\nX-squared = 24.099, df = 14, p-value = 0.04457\n\n\n\n# 진차를 이용한 모형 진단\nBox.test(residuals(AR.bmw), lag = 20,\n         type = \"Ljung-Box\",\n         fitdf = 1)                 # AR 모형의 추정한 회귀 모수 phi 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(AR.bmw)\nX-squared = 39.299, df = 19, p-value = 0.00404\n\n\n\n\n2.2.2 Mishkin 데이터셋\n\nPackage \"Ecdat\"에서 제공하는 Mishkin 데이터셋은 1950년 2월부터 1990년 12월 사이에 인플레이션율에 대한 시계열 데이터셋이다.\n\n\n# 패키지 설치\npacman::p_load(\"Ecdat\")\n\n# 데이터 불러오기\ndata(Mishkin, package = \"Ecdat\")\ny = as.vector(Mishkin[,1])             # 월별 인플레이션율 추출\n\ny\n\n  [1] -3.552289  5.247540  1.692860  5.064298  6.719322 11.668920  9.912501  8.346786  6.517766  4.865085 16.076321 19.154240 14.061910  4.650814  1.546310  4.627010 -1.540355  1.540355  0.000000\n [20]  7.672257  6.102576  6.209472  4.533152  0.000000 -7.564866  0.000000 19.570490 -1.494151  1.494151  0.000000 -1.494151  0.000000  1.494151  0.000000 -1.494151 -2.993894 -6.010291  3.008908\n [39]  1.501630  2.997634  4.482457  2.979029  2.971549  1.483071  2.960655 -4.443726 -1.484906  2.967978 -1.483071 -1.484906 -2.839906  2.839906  1.484906  0.000000 -1.484906 -2.839906 -2.982291\n [58]  2.982291 -2.982291  0.000000  0.000000  1.492020  0.000000  0.000000  0.000000  2.978693 -2.978693  4.330177  0.000000  1.484906 -2.836390  0.000000  0.000000  2.836390  1.483071  5.914023\n [77]  5.751562  8.774637 -1.457907  1.457907  5.682521  1.449363  2.893485  0.000000  2.886525  2.748830  2.873018  2.866156  7.006195  5.678584  1.415482  1.413814  0.000000  4.103441  0.000000\n [96]  7.020216  1.399128  6.844860  2.777502  0.000000  1.386248  1.384744  0.000000  0.000000  1.383148  1.381556 -1.381556  1.381556 -1.381556  0.000000  1.381556  1.254555  5.504627  2.742874\n[115] -1.370653  2.739743  3.973921  1.363010 -2.727571  1.364560  0.000000  6.799529  0.000000  2.586158  0.000000  0.000000  1.352397  5.394306  1.344819  0.000000  0.000000  1.343314 -1.343314\n[134]  1.343314  0.000000  1.341812  5.230890 -1.335972  2.670459  0.000000  0.000000  0.000000  0.000000  2.664529  2.658626  2.532271  0.000000  0.000000  2.647071  0.000000  6.592472 -1.315600\n[153]  0.000000 -1.317044  1.317044  1.315600  1.194725  0.000000  0.000000  5.242814  3.917133  0.000000  1.302875  1.183181  0.000000  2.598952  0.000000  0.000000 -1.298772  1.298772  2.593336\n[172]  0.000000  2.587653  1.291782 -1.291782  2.582175  1.171857  2.574118  1.284992 -1.284992  0.000000  1.284992  3.846739  2.557659  6.254851  1.270154 -2.541654  2.541654  0.000000  2.536194\n[191]  3.679570  0.000000  7.553715  2.393494  4.999561  0.000000  2.491991  2.486741  7.317456  1.233940  4.811423  0.000000  0.000000  0.000000  1.227743  2.451723  2.446724  3.549967  3.649961\n[210]  4.849325  2.307577  3.617287  3.606416  2.289339  3.588767  4.768305  3.456034  4.735883  3.539687  4.596686  3.515803  3.399432  3.495549  3.485477  5.681739  3.458990  2.300467  3.338259\n[229]  4.574945  6.726781  5.662605  3.282331  7.861482  3.252032  4.457231  4.339972  4.424734  5.408054  7.570396  2.182552  5.439077  3.153226  7.553640  4.197689  3.211568  5.236804  2.126986\n[248]  4.242622  6.240278  4.110415  5.237093  2.088382  5.110830  5.183215  6.096802  5.041712  6.133401  2.962434  1.016681  1.015820  2.029064  1.013247  3.952596  1.009064  5.945445  3.007194\n[267]  2.999539  2.901685  2.984980  2.977574  2.880218  4.934430  2.950948  3.834231  2.934329  5.758887  8.630559 11.440700  9.436906  6.536329  7.438794  3.659775 19.304211  1.838323  7.242186\n[286]  8.105994  8.051480  9.785962 15.814170 12.122030  6.883693 12.010690 10.111450  7.566704 13.394280 12.342670  9.006326  9.680984  7.246837  4.855838  6.371189  4.738003  4.719480  5.566699\n[305]  9.340268 12.388900  4.665991  5.350513  6.864336  6.061113  5.269925  3.040442  3.720887  3.778037  5.200997  6.673568  7.379198  5.857414  5.093520  5.072093  5.117023  3.575525  5.014266\n[324]  6.435108 12.054450  6.336976  9.123064  6.255971  7.616233  4.105433  4.782352  2.760079  4.065748  5.420399  4.033883  6.056223  7.374409  8.668254  9.873637 10.451070 11.012750  5.793180\n[343]  5.119508  7.025764  7.623123  6.306279  6.273224  9.946648 11.106510 10.389710 11.519510 13.766670 11.877010  9.987637  9.318593 10.410780  9.167216  6.281625  9.620259 14.005740 14.956960\n[362] 14.772750  8.707769 10.170030  8.572340  7.396264  9.999892 11.967070  7.265405  7.174647  7.693233 10.614180 15.060890  9.936591  6.880011  7.334265  6.843737  9.197388  8.644333  9.498251\n[381]  5.220479  4.722268  4.229963  6.531282  3.765132  1.835451  1.875277  8.318006 11.909480  8.179443  2.243804  5.880264  5.358331  1.808168  0.903063  2.664138  0.409372  0.818200  8.558391\n[400]  6.479959  4.032262  4.820824  4.002672  5.979086  3.176779  1.981179  1.582568  6.702875  5.491976  2.736532  5.843219  3.492417  3.868475  3.856044  4.994358  5.737063  3.048542  0.000000\n[419]  0.760985  2.279948  4.924980  5.281344  4.883469  4.490115  3.729027  1.860177  2.599458  3.703707  3.692311  4.048485  2.935736  3.659655 -3.293165 -5.508809 -2.579503  3.683244  5.869799\n[438]  0.365932  2.193139  5.828813  1.089709  1.088720  1.087844  7.226761  4.308729  5.364409  6.405601  4.251591  4.236581  3.167622  6.310269  6.277260  3.126359  1.040348  0.000000  3.115431\n[457]  3.107574  5.161263  6.164397  4.092111  5.095515  5.073969  5.052708  8.040197  3.999936  0.998057  1.993322  5.960278  4.944349  6.888122  7.823956  6.804426  2.904398  2.897386  1.927679\n[476]  3.846190  5.746220  2.862824  1.904730 12.307830  5.638225  6.544558  1.863323  2.789618  6.484031  4.610040 10.992540  9.988676  7.212614  2.693695  0.000000\n\n# 시계열 ts 객체로 변환\ny &lt;- ts(y, \n        frequency = 12,                # 1년에 12번 관측하는 월별 시계열열\n        start = c(1950, 2))            # 1950년 2월부터 관측\n\ny\n\n           Jan       Feb       Mar       Apr       May       Jun       Jul       Aug       Sep       Oct       Nov       Dec\n1950           -3.552289  5.247540  1.692860  5.064298  6.719322 11.668920  9.912501  8.346786  6.517766  4.865085 16.076321\n1951 19.154240 14.061910  4.650814  1.546310  4.627010 -1.540355  1.540355  0.000000  7.672257  6.102576  6.209472  4.533152\n1952  0.000000 -7.564866  0.000000 19.570490 -1.494151  1.494151  0.000000 -1.494151  0.000000  1.494151  0.000000 -1.494151\n1953 -2.993894 -6.010291  3.008908  1.501630  2.997634  4.482457  2.979029  2.971549  1.483071  2.960655 -4.443726 -1.484906\n1954  2.967978 -1.483071 -1.484906 -2.839906  2.839906  1.484906  0.000000 -1.484906 -2.839906 -2.982291  2.982291 -2.982291\n1955  0.000000  0.000000  1.492020  0.000000  0.000000  0.000000  2.978693 -2.978693  4.330177  0.000000  1.484906 -2.836390\n1956  0.000000  0.000000  2.836390  1.483071  5.914023  5.751562  8.774637 -1.457907  1.457907  5.682521  1.449363  2.893485\n1957  0.000000  2.886525  2.748830  2.873018  2.866156  7.006195  5.678584  1.415482  1.413814  0.000000  4.103441  0.000000\n1958  7.020216  1.399128  6.844860  2.777502  0.000000  1.386248  1.384744  0.000000  0.000000  1.383148  1.381556 -1.381556\n1959  1.381556 -1.381556  0.000000  1.381556  1.254555  5.504627  2.742874 -1.370653  2.739743  3.973921  1.363010 -2.727571\n1960  1.364560  0.000000  6.799529  0.000000  2.586158  0.000000  0.000000  1.352397  5.394306  1.344819  0.000000  0.000000\n1961  1.343314 -1.343314  1.343314  0.000000  1.341812  5.230890 -1.335972  2.670459  0.000000  0.000000  0.000000  0.000000\n1962  2.664529  2.658626  2.532271  0.000000  0.000000  2.647071  0.000000  6.592472 -1.315600  0.000000 -1.317044  1.317044\n1963  1.315600  1.194725  0.000000  0.000000  5.242814  3.917133  0.000000  1.302875  1.183181  0.000000  2.598952  0.000000\n1964  0.000000 -1.298772  1.298772  2.593336  0.000000  2.587653  1.291782 -1.291782  2.582175  1.171857  2.574118  1.284992\n1965 -1.284992  0.000000  1.284992  3.846739  2.557659  6.254851  1.270154 -2.541654  2.541654  0.000000  2.536194  3.679570\n1966  0.000000  7.553715  2.393494  4.999561  0.000000  2.491991  2.486741  7.317456  1.233940  4.811423  0.000000  0.000000\n1967  0.000000  1.227743  2.451723  2.446724  3.549967  3.649961  4.849325  2.307577  3.617287  3.606416  2.289339  3.588767\n1968  4.768305  3.456034  4.735883  3.539687  4.596686  3.515803  3.399432  3.495549  3.485477  5.681739  3.458990  2.300467\n1969  3.338259  4.574945  6.726781  5.662605  3.282331  7.861482  3.252032  4.457231  4.339972  4.424734  5.408054  7.570396\n1970  2.182552  5.439077  3.153226  7.553640  4.197689  3.211568  5.236804  2.126986  4.242622  6.240278  4.110415  5.237093\n1971  2.088382  5.110830  5.183215  6.096802  5.041712  6.133401  2.962434  1.016681  1.015820  2.029064  1.013247  3.952596\n1972  1.009064  5.945445  3.007194  2.999539  2.901685  2.984980  2.977574  2.880218  4.934430  2.950948  3.834231  2.934329\n1973  5.758887  8.630559 11.440700  9.436906  6.536329  7.438794  3.659775 19.304211  1.838323  7.242186  8.105994  8.051480\n1974  9.785962 15.814170 12.122030  6.883693 12.010690 10.111450  7.566704 13.394280 12.342670  9.006326  9.680984  7.246837\n1975  4.855838  6.371189  4.738003  4.719480  5.566699  9.340268 12.388900  4.665991  5.350513  6.864336  6.061113  5.269925\n1976  3.040442  3.720887  3.778037  5.200997  6.673568  7.379198  5.857414  5.093520  5.072093  5.117023  3.575525  5.014266\n1977  6.435108 12.054450  6.336976  9.123064  6.255971  7.616233  4.105433  4.782352  2.760079  4.065748  5.420399  4.033883\n1978  6.056223  7.374409  8.668254  9.873637 10.451070 11.012750  5.793180  5.119508  7.025764  7.623123  6.306279  6.273224\n1979  9.946648 11.106510 10.389710 11.519510 13.766670 11.877010  9.987637  9.318593 10.410780  9.167216  6.281625  9.620259\n1980 14.005740 14.956960 14.772750  8.707769 10.170030  8.572340  7.396264  9.999892 11.967070  7.265405  7.174647  7.693233\n1981 10.614180 15.060890  9.936591  6.880011  7.334265  6.843737  9.197388  8.644333  9.498251  5.220479  4.722268  4.229963\n1982  6.531282  3.765132  1.835451  1.875277  8.318006 11.909480  8.179443  2.243804  5.880264  5.358331  1.808168  0.903063\n1983  2.664138  0.409372  0.818200  8.558391  6.479959  4.032262  4.820824  4.002672  5.979086  3.176779  1.981179  1.582568\n1984  6.702875  5.491976  2.736532  5.843219  3.492417  3.868475  3.856044  4.994358  5.737063  3.048542  0.000000  0.760985\n1985  2.279948  4.924980  5.281344  4.883469  4.490115  3.729027  1.860177  2.599458  3.703707  3.692311  4.048485  2.935736\n1986  3.659655 -3.293165 -5.508809 -2.579503  3.683244  5.869799  0.365932  2.193139  5.828813  1.089709  1.088720  1.087844\n1987  7.226761  4.308729  5.364409  6.405601  4.251591  4.236581  3.167622  6.310269  6.277260  3.126359  1.040348  0.000000\n1988  3.115431  3.107574  5.161263  6.164397  4.092111  5.095515  5.073969  5.052708  8.040197  3.999936  0.998057  1.993322\n1989  5.960278  4.944349  6.888122  7.823956  6.804426  2.904398  2.897386  1.927679  3.846190  5.746220  2.862824  1.904730\n1990 12.307830  5.638225  6.544558  1.863323  2.789618  6.484031  4.610040 10.992540  9.988676  7.212614  2.693695  0.000000\n\n# 시계열 그림\nplot(y, type = \"l\")\n\n\n\n\n\n\n\n\n\n# 상관도표그림\nacf(y)\n\n\n\n\n\n\n\n\nResult! 대부분의 시차에서 막대의 끝이 파란색 선을 넘어가므로 시차 25까지 유의한 자기상관관계가 존재한다.\n\n# 부분상관도표그림\npacf(y)\n\n\n\n\n\n\n\n\nResult! 시차 7까지 막대의 끝이 파란색 선을 넘어가므로 시차 7까지 유의한 부분자기상관관계가 존재한다.\n\n# Ljung-Box Test\nBox.test(y, lag = 7,\n         type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  y\nX-squared = 774.34, df = 7, p-value &lt; 2.2e-16\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(7)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0에 가까우므로 유의수준 0.05에서 귀무가설을 기각한다. 즉, 관측된 시계열에 대해 \\(\\rho(1), \\rho(2),\\cdots,\\rho(7)\\) 중 유의한 자기상관관계가 적어도 1개 존재한다.\n\n# Fit AR(1)\nAR.y &lt;- arima(y, \n              order = c(1, 0, 0)) \n\n# 진차를 이용한 모형 진단\nBox.test(residuals(AR.y), lag = 5,\n         type = \"Ljung-Box\",\n         fitdf = 1)                 # AR 모형의 추정한 회귀 모수 phi 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(AR.y)\nX-squared = 29.187, df = 4, p-value = 7.163e-06\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(5)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0에 가깝기 때문에 유의수준 0.05에서 \\(p\\)값이 0.05보다 작아 귀무가설을 기각한다. 즉, 잔차에 대해 시차 5까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(5)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 것을 의미하며, 해당 시계열에 대해 AR(1) 모형을 가정하는 것은 적절하지 않다.\n\n# 잔차에 대한 상관도표그림\nacf(residuals(AR.y))\n\n\n\n\n\n\n\n\nResult! 시차 1, 2, 4, 5, 6, 7 등에서 막대의 끝이 파란색 선을 넘어가므로 해당 시차에서 자기상관계수는 통계적으로 유의하다.\nCaution! Package \"forecast\"에서 제공하는 함수 auto.arima()에 옵션 max.p = 20, max.q = 0, d = 0을 입력하여 최적의 AR(\\(p\\)) 모형을 찾을 수 있다.\n\n# 함수 auto.arima() 이용\npacman::p_load(\"forecast\")\n\nauto.ar.y &lt;- auto.arima(y, max.p = 20,        # AR(1) ~ AR(20) 모형을 후보로 둠\n                        max.q = 0, d = 0, \n                        max.P = 0,\n                        max.Q = 0,\n                        max.D = 0,\n                        ic = \"bic\")           # BIC 기준으로 BIC가 가장 작은 모형을 최적 모형으로 선택\n\nprint(auto.ar.y)\n\nSeries: y \nARIMA(2,0,0) with non-zero mean \n\nCoefficients:\n         ar1     ar2    mean\n      0.4584  0.2297  3.9549\ns.e.  0.0442  0.0442  0.4365\n\nsigma^2 = 9.262:  log likelihood = -1241.92\nAIC=2491.84   AICc=2491.92   BIC=2508.62\n\n\nResult! 관측된 시계열에 대해 BIC를 기준으로 최적의 모형은 AR(2) 모형이다. 모수 추정 결과에 따르면, \\(\\hat{\\mu} = 3.9549\\), \\(\\hat{\\phi}_1=0.4584\\), \\(\\hat{\\phi}_2=0.2297\\), \\(\\hat{\\sigma}^2_\\epsilon = 9.262\\)이다. 이를 이용하면 관측된 시계열에 대해 구축된 AR(2) 모형은 \\(Y_t-3.9549 = 0.4584(Y_{t-1}-3.9549)+0.2297(Y_{t-2}-3.9549)+\\epsilon_t\\)이다.\n\n# 진차를 이용한 모형 진단\nBox.test(residuals(auto.ar.y), lag = 10,\n         type = \"Ljung-Box\",\n         fitdf = 2)                 # AR 모형의 추정한 회귀 모수 phi 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(auto.ar.y)\nX-squared = 23.4, df = 8, p-value = 0.002887\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(10)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0.002887이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 작아 귀무가설을 기각한다. 즉, 잔차에 대해 시차 10까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(10)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 것을 의미하며, 해당 시계열에 대해 AR(2) 모형을 가정하는 것은 적절하지 않다.\n\n# 잔차에 대한 상관도표그림\nacf(residuals(auto.ar.y))\n\n\n\n\n\n\n\n\nResult! 시차 7에서 막대의 끝이 파란색 선을 넘어가므로 해당 시차에서 자기상관계수는 통계적으로 유의하다.\n\n# 함수 auto.arima() 이용\npacman::p_load(\"forecast\")\n\nauto.ar.y2 &lt;- auto.arima(y, max.p = 20,        # AR(1) ~ AR(20) 모형을 후보로 둠\n                        max.P = 0,\n                        max.Q = 0,\n                        max.D = 0,\n                        max.q = 0, d = 0, \n                        ic = \"aic\")           # AIC 기준으로 AIC가 가장 작은 모형을 최적 모형으로 선택\n\nprint(auto.ar.y2)\n\nSeries: y \nARIMA(7,0,0) with non-zero mean \n\nCoefficients:\n         ar1     ar2      ar3     ar4     ar5     ar6     ar7    mean\n      0.3655  0.1291  -0.0198  0.0986  0.0648  0.0798  0.1195  3.9868\ns.e.  0.0453  0.0481   0.0484  0.0482  0.0485  0.0484  0.0458  0.7841\n\nsigma^2 = 8.613:  log likelihood = -1221.77\nAIC=2461.55   AICc=2461.92   BIC=2499.32\n\n\nResult! 관측된 시계열에 대해 AIC를 기준으로 최적의 모형은 AR(7) 모형이다. 모수 추정 결과에 따르면, \\(\\hat{\\mu} = 3.9868\\), \\(\\hat{\\phi}_1=0.3655\\), \\(\\hat{\\phi}_2=0.1291\\), \\(\\hat{\\phi}_3=-0.0198\\), \\(\\hat{\\phi}_4=0.0986\\), \\(\\hat{\\phi}_5=0.0648\\), \\(\\hat{\\phi}_6=0.0798\\), \\(\\hat{\\phi}_7=0.1195\\), \\(\\hat{\\sigma}^2_\\epsilon = 8.613\\)이다. 이를 이용하면 관측된 시계열에 대해 구축된 AR(7) 모형은 \\[\n\\begin{align*}\nY_t-3.9868 = & \\; 0.3655(Y_{t-1}-3.9868)+0.1291(Y_{t-2}-3.9868)-0.0198(Y_{t-3}-3.9868)\\\\\n&+ 0.0986(Y_{t-4}-3.9868)+0.0648(Y_{t-5}-3.9868)+0.0798(Y_{t-6}-3.9868) \\\\\n&+0.1195(Y_{t-7}-3.9868)+\\epsilon_t\n\\end{align*}\n\\] 이다.\n\n# 진차를 이용한 모형 진단\nBox.test(residuals(auto.ar.y2), lag = 10,\n         type = \"Ljung-Box\",\n         fitdf = 7)                 # AR 모형의 추정한 회귀 모수 phi 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(auto.ar.y2)\nX-squared = 3.882, df = 3, p-value = 0.2745\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(10)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0.2745이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 10까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(10)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 해당 시계열에 대해 AR(7) 모형을 가정하는 것은 적절하다.\n\n# 잔차에 대한 상관도표그림\nacf(residuals(auto.ar.y2))\n\n\n\n\n\n\n\n\nResult! 시차 1에서 10까지 막대의 끝이 파란색 선 밖에 나가지 않으므로 유의한 자기상관계수가 존재한다는 증거가 부족하다.",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Autoregressive Process</span>"
    ]
  },
  {
    "objectID": "MA.html",
    "href": "MA.html",
    "title": "3  Moving Average Process",
    "section": "",
    "text": "3.1 함수 설명",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Moving Average Process</span>"
    ]
  },
  {
    "objectID": "MA.html#함수-설명",
    "href": "MA.html#함수-설명",
    "title": "3  Moving Average Process",
    "section": "",
    "text": "관측된 시계열에 이동평균모형(Moving Average Model)을 구축하는 데 유용한 함수를 요약하면 다음과 같다.\n\n\n\n\n\n\n\n\n함수\n설명\n\n\n\n\narima()\nMA모형의 차수 \\(q\\)를 지정하여 모형 구축\n\n\nauto.arima()\n모형의 차수 지정없이 자동적으로 최적화된 모형 구축\n\n\nacf()\n상관도표그림\n\n\npacf()\n부분상관도표그림\n\n\nBox.test()\nLjung-Box Test\n\n\ncheckresiduals()\n잔차가 백색잡음과정의 가정을 만족하는지 확인할 때 사용\n\n\nforecast()\n예측",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Moving Average Process</span>"
    ]
  },
  {
    "objectID": "MA.html#예제",
    "href": "MA.html#예제",
    "title": "3  Moving Average Process",
    "section": "3.2 예제",
    "text": "3.2 예제\n\n3.2.1 BMW 데이터셋\n\nPackage \"evir\"에서 제공하는 BMW 데이터셋은 1973년 1월부터 1996년 7월 사이에 BMW 주식의 일별 로그 수익률에 대한 시계열 데이터셋이다.\n\n\n# 패키지 설치\npacman::p_load(\"evir\")\n\n# 데이터 불러오기\ndata(bmw, package = \"evir\")\n\n# 시계열 그림\nplot(bmw, type = \"l\")\n\n\n\n\n\n\n\n\nResult! 증가하거나 감소하는 추세가 없어서 시간의 흐름에 따라 평균이 일정하다.\n\n# 상관도표그림\nacf(bmw)\n\n\n\n\n\n\n\n\nResult! 시차 1에서 막대의 끝이 파란색 선을 넘어가므로 시차 1에 대해 유의한 자기상관관계가 존재한다.\n\n# 부분상관도표그림\npacf(bmw)\n\n\n\n\n\n\n\n\nResult! 시차 1에서 막대의 끝이 파란색 선을 넘어가므로 시차 1에 대해 유의한 부분자기상관관계가 존재한다.\nCaution! 큰 시차에서의 막대 끝이 파란색 선을 넘어가는 것은 우연 변동에 의한 가능성이 높다.\n\n# Ljung-Box Test\nBox.test(bmw, lag = 5,\n         type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  bmw\nX-squared = 44.987, df = 5, p-value = 1.46e-08\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(5)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0에 가까우므로 유의수준 0.05에서 귀무가설을 기각한다. 즉, 관측된 시계열에 대해 \\(\\rho(1), \\rho(2),\\cdots,\\rho(5)\\) 중 유의한 자기상관관계가 적어도 1개 존재한다.\n\n# Fit MA(1)\nMA.bmw &lt;- arima(bmw, \n                order = c(0, 0, 1)) \n\nCaution! 함수 arima()를 이용하여 MA(1) 모형을 구축하려면 옵션 order = c(0, 0, 1)을 입력한다. 만약, MA(\\(q\\)) 모형을 구축하려면 옵션 order = c(0, 0, q)을 입력하면 된다.\n\n# 모형 추정 결과\nprint(MA.bmw)\n\n\nCall:\narima(x = bmw, order = c(0, 0, 1))\n\nCoefficients:\n         ma1  intercept\n      0.0853      3e-04\ns.e.  0.0130      2e-04\n\nsigma^2 estimated as 0.0002162:  log likelihood = 17213.39,  aic = -34420.79\n\n\nResult! 출력 결과를 요약하면 다음과 같다.\n1. 모수의 추정치는 \\(\\hat{\\mu}=0.0003\\), \\(\\hat{\\theta}=0.0853\\), \\(\\hat{\\sigma}^2_\\epsilon = 0.0002162\\)이다. 이를 이용하면 관측된 시계열에 대해 구축된 MA(1) 모형은 \\(Y_t-0.0003 = \\epsilon_t + 0.0853\\epsilon_{t-1}\\)이다.\n2. \\({\\theta}\\)에 대한 유의성 검정을 수행하면, 검정통계량은 \\(t = (0.0853/0.0130) \\approx 6.56\\)이며 귀무가설(\\(H_0 : \\theta=0\\))하에서 자유도가 \\(6145\\) (관측값 \\(- 1\\))인 \\(t\\) 분포를 따르고 \\(p\\)값이 0에 가깝다. 이에 기반하여 유의수준 0.05에서 \\(p\\)값이 0.05보다 작기 때문에 귀무가설을 기각한다. 즉, \\(\\hat{\\theta}\\)의 값이 굉장히 작지만 \\({\\theta}\\)는 통계적으로 유의하다.\n\n# 잔차를 이용한 모형 진단\nBox.test(residuals(MA.bmw), lag = 5,\n         type = \"Ljung-Box\",\n         fitdf = 1)                 # MA 모형의 추정한 회귀 모수 theta 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(MA.bmw)\nX-squared = 4.7355, df = 4, p-value = 0.3155\n\n\nCaution! 잔차는 함수 residuals()를 이용하여 추출할 수 있다.\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(5)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0.3155이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 5까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(5)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 해당 시계열에 대해 MA(1) 모형을 가정하는 것이 적절하다.\n\n# 잔차에 대한 상관도표그림\nacf(residuals(MA.bmw))\n\n\n\n\n\n\n\n\nResult! 시차 1 이상에서 막대의 끝이 파란색 선 밖에 나가지 않으므로 유의한 자기상관계수가 존재한다는 증거가 부족하다. 큰 시차(예를 들어, 시차 19)에서 막대의 끝이 파란색 선 밖에 나가는 것은 우연 변동에 의한 가능성이 높다.\nCaution! 관측된 시계열의 개수가 많은 경우, 큰 시차에서 유의한 자기상관계수가 존재할 수 있다.\n\n# 잔차를 이용한 모형 진단\nBox.test(residuals(MA.bmw), lag = 15,\n         type = \"Ljung-Box\",\n         fitdf = 1)                 # MA 모형의 추정한 회귀 모수 theta 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(MA.bmw)\nX-squared = 22.045, df = 14, p-value = 0.0777\n\n\n\n# 잔차를 이용한 모형 진단\nBox.test(residuals(MA.bmw), lag = 20,\n         type = \"Ljung-Box\",\n         fitdf = 1)                 # MA 모형의 추정한 회귀 모수 theta 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(MA.bmw)\nX-squared = 37.311, df = 19, p-value = 0.007254\n\n\n\n\n3.2.2 Mishkin 데이터셋\n\nPackage \"Ecdat\"에서 제공하는 Mishkin 데이터셋은 1950년 2월부터 1990년 12월 사이에 인플레이션율에 대한 시계열 데이터셋이다.\n\n\n# 패키지 설치\npacman::p_load(\"Ecdat\")\n\n# 데이터 불러오기\ndata(Mishkin, package = \"Ecdat\")\ny = as.vector(Mishkin[,1])             # 월별 인플레이션율 추출\ny\n\n  [1] -3.552289  5.247540  1.692860  5.064298  6.719322 11.668920  9.912501  8.346786  6.517766  4.865085 16.076321 19.154240 14.061910  4.650814  1.546310  4.627010 -1.540355  1.540355  0.000000\n [20]  7.672257  6.102576  6.209472  4.533152  0.000000 -7.564866  0.000000 19.570490 -1.494151  1.494151  0.000000 -1.494151  0.000000  1.494151  0.000000 -1.494151 -2.993894 -6.010291  3.008908\n [39]  1.501630  2.997634  4.482457  2.979029  2.971549  1.483071  2.960655 -4.443726 -1.484906  2.967978 -1.483071 -1.484906 -2.839906  2.839906  1.484906  0.000000 -1.484906 -2.839906 -2.982291\n [58]  2.982291 -2.982291  0.000000  0.000000  1.492020  0.000000  0.000000  0.000000  2.978693 -2.978693  4.330177  0.000000  1.484906 -2.836390  0.000000  0.000000  2.836390  1.483071  5.914023\n [77]  5.751562  8.774637 -1.457907  1.457907  5.682521  1.449363  2.893485  0.000000  2.886525  2.748830  2.873018  2.866156  7.006195  5.678584  1.415482  1.413814  0.000000  4.103441  0.000000\n [96]  7.020216  1.399128  6.844860  2.777502  0.000000  1.386248  1.384744  0.000000  0.000000  1.383148  1.381556 -1.381556  1.381556 -1.381556  0.000000  1.381556  1.254555  5.504627  2.742874\n[115] -1.370653  2.739743  3.973921  1.363010 -2.727571  1.364560  0.000000  6.799529  0.000000  2.586158  0.000000  0.000000  1.352397  5.394306  1.344819  0.000000  0.000000  1.343314 -1.343314\n[134]  1.343314  0.000000  1.341812  5.230890 -1.335972  2.670459  0.000000  0.000000  0.000000  0.000000  2.664529  2.658626  2.532271  0.000000  0.000000  2.647071  0.000000  6.592472 -1.315600\n[153]  0.000000 -1.317044  1.317044  1.315600  1.194725  0.000000  0.000000  5.242814  3.917133  0.000000  1.302875  1.183181  0.000000  2.598952  0.000000  0.000000 -1.298772  1.298772  2.593336\n[172]  0.000000  2.587653  1.291782 -1.291782  2.582175  1.171857  2.574118  1.284992 -1.284992  0.000000  1.284992  3.846739  2.557659  6.254851  1.270154 -2.541654  2.541654  0.000000  2.536194\n[191]  3.679570  0.000000  7.553715  2.393494  4.999561  0.000000  2.491991  2.486741  7.317456  1.233940  4.811423  0.000000  0.000000  0.000000  1.227743  2.451723  2.446724  3.549967  3.649961\n[210]  4.849325  2.307577  3.617287  3.606416  2.289339  3.588767  4.768305  3.456034  4.735883  3.539687  4.596686  3.515803  3.399432  3.495549  3.485477  5.681739  3.458990  2.300467  3.338259\n[229]  4.574945  6.726781  5.662605  3.282331  7.861482  3.252032  4.457231  4.339972  4.424734  5.408054  7.570396  2.182552  5.439077  3.153226  7.553640  4.197689  3.211568  5.236804  2.126986\n[248]  4.242622  6.240278  4.110415  5.237093  2.088382  5.110830  5.183215  6.096802  5.041712  6.133401  2.962434  1.016681  1.015820  2.029064  1.013247  3.952596  1.009064  5.945445  3.007194\n[267]  2.999539  2.901685  2.984980  2.977574  2.880218  4.934430  2.950948  3.834231  2.934329  5.758887  8.630559 11.440700  9.436906  6.536329  7.438794  3.659775 19.304211  1.838323  7.242186\n[286]  8.105994  8.051480  9.785962 15.814170 12.122030  6.883693 12.010690 10.111450  7.566704 13.394280 12.342670  9.006326  9.680984  7.246837  4.855838  6.371189  4.738003  4.719480  5.566699\n[305]  9.340268 12.388900  4.665991  5.350513  6.864336  6.061113  5.269925  3.040442  3.720887  3.778037  5.200997  6.673568  7.379198  5.857414  5.093520  5.072093  5.117023  3.575525  5.014266\n[324]  6.435108 12.054450  6.336976  9.123064  6.255971  7.616233  4.105433  4.782352  2.760079  4.065748  5.420399  4.033883  6.056223  7.374409  8.668254  9.873637 10.451070 11.012750  5.793180\n[343]  5.119508  7.025764  7.623123  6.306279  6.273224  9.946648 11.106510 10.389710 11.519510 13.766670 11.877010  9.987637  9.318593 10.410780  9.167216  6.281625  9.620259 14.005740 14.956960\n[362] 14.772750  8.707769 10.170030  8.572340  7.396264  9.999892 11.967070  7.265405  7.174647  7.693233 10.614180 15.060890  9.936591  6.880011  7.334265  6.843737  9.197388  8.644333  9.498251\n[381]  5.220479  4.722268  4.229963  6.531282  3.765132  1.835451  1.875277  8.318006 11.909480  8.179443  2.243804  5.880264  5.358331  1.808168  0.903063  2.664138  0.409372  0.818200  8.558391\n[400]  6.479959  4.032262  4.820824  4.002672  5.979086  3.176779  1.981179  1.582568  6.702875  5.491976  2.736532  5.843219  3.492417  3.868475  3.856044  4.994358  5.737063  3.048542  0.000000\n[419]  0.760985  2.279948  4.924980  5.281344  4.883469  4.490115  3.729027  1.860177  2.599458  3.703707  3.692311  4.048485  2.935736  3.659655 -3.293165 -5.508809 -2.579503  3.683244  5.869799\n[438]  0.365932  2.193139  5.828813  1.089709  1.088720  1.087844  7.226761  4.308729  5.364409  6.405601  4.251591  4.236581  3.167622  6.310269  6.277260  3.126359  1.040348  0.000000  3.115431\n[457]  3.107574  5.161263  6.164397  4.092111  5.095515  5.073969  5.052708  8.040197  3.999936  0.998057  1.993322  5.960278  4.944349  6.888122  7.823956  6.804426  2.904398  2.897386  1.927679\n[476]  3.846190  5.746220  2.862824  1.904730 12.307830  5.638225  6.544558  1.863323  2.789618  6.484031  4.610040 10.992540  9.988676  7.212614  2.693695  0.000000\n\n# 시계열 ts 객체로 변환\ny &lt;- ts(y, \n        frequency = 12,                # 1년에 12번 관측하는 월별 시계열열\n        start = c(1950, 2))            # 1950년 2월부터 관측\n\ny\n\n           Jan       Feb       Mar       Apr       May       Jun       Jul       Aug       Sep       Oct       Nov       Dec\n1950           -3.552289  5.247540  1.692860  5.064298  6.719322 11.668920  9.912501  8.346786  6.517766  4.865085 16.076321\n1951 19.154240 14.061910  4.650814  1.546310  4.627010 -1.540355  1.540355  0.000000  7.672257  6.102576  6.209472  4.533152\n1952  0.000000 -7.564866  0.000000 19.570490 -1.494151  1.494151  0.000000 -1.494151  0.000000  1.494151  0.000000 -1.494151\n1953 -2.993894 -6.010291  3.008908  1.501630  2.997634  4.482457  2.979029  2.971549  1.483071  2.960655 -4.443726 -1.484906\n1954  2.967978 -1.483071 -1.484906 -2.839906  2.839906  1.484906  0.000000 -1.484906 -2.839906 -2.982291  2.982291 -2.982291\n1955  0.000000  0.000000  1.492020  0.000000  0.000000  0.000000  2.978693 -2.978693  4.330177  0.000000  1.484906 -2.836390\n1956  0.000000  0.000000  2.836390  1.483071  5.914023  5.751562  8.774637 -1.457907  1.457907  5.682521  1.449363  2.893485\n1957  0.000000  2.886525  2.748830  2.873018  2.866156  7.006195  5.678584  1.415482  1.413814  0.000000  4.103441  0.000000\n1958  7.020216  1.399128  6.844860  2.777502  0.000000  1.386248  1.384744  0.000000  0.000000  1.383148  1.381556 -1.381556\n1959  1.381556 -1.381556  0.000000  1.381556  1.254555  5.504627  2.742874 -1.370653  2.739743  3.973921  1.363010 -2.727571\n1960  1.364560  0.000000  6.799529  0.000000  2.586158  0.000000  0.000000  1.352397  5.394306  1.344819  0.000000  0.000000\n1961  1.343314 -1.343314  1.343314  0.000000  1.341812  5.230890 -1.335972  2.670459  0.000000  0.000000  0.000000  0.000000\n1962  2.664529  2.658626  2.532271  0.000000  0.000000  2.647071  0.000000  6.592472 -1.315600  0.000000 -1.317044  1.317044\n1963  1.315600  1.194725  0.000000  0.000000  5.242814  3.917133  0.000000  1.302875  1.183181  0.000000  2.598952  0.000000\n1964  0.000000 -1.298772  1.298772  2.593336  0.000000  2.587653  1.291782 -1.291782  2.582175  1.171857  2.574118  1.284992\n1965 -1.284992  0.000000  1.284992  3.846739  2.557659  6.254851  1.270154 -2.541654  2.541654  0.000000  2.536194  3.679570\n1966  0.000000  7.553715  2.393494  4.999561  0.000000  2.491991  2.486741  7.317456  1.233940  4.811423  0.000000  0.000000\n1967  0.000000  1.227743  2.451723  2.446724  3.549967  3.649961  4.849325  2.307577  3.617287  3.606416  2.289339  3.588767\n1968  4.768305  3.456034  4.735883  3.539687  4.596686  3.515803  3.399432  3.495549  3.485477  5.681739  3.458990  2.300467\n1969  3.338259  4.574945  6.726781  5.662605  3.282331  7.861482  3.252032  4.457231  4.339972  4.424734  5.408054  7.570396\n1970  2.182552  5.439077  3.153226  7.553640  4.197689  3.211568  5.236804  2.126986  4.242622  6.240278  4.110415  5.237093\n1971  2.088382  5.110830  5.183215  6.096802  5.041712  6.133401  2.962434  1.016681  1.015820  2.029064  1.013247  3.952596\n1972  1.009064  5.945445  3.007194  2.999539  2.901685  2.984980  2.977574  2.880218  4.934430  2.950948  3.834231  2.934329\n1973  5.758887  8.630559 11.440700  9.436906  6.536329  7.438794  3.659775 19.304211  1.838323  7.242186  8.105994  8.051480\n1974  9.785962 15.814170 12.122030  6.883693 12.010690 10.111450  7.566704 13.394280 12.342670  9.006326  9.680984  7.246837\n1975  4.855838  6.371189  4.738003  4.719480  5.566699  9.340268 12.388900  4.665991  5.350513  6.864336  6.061113  5.269925\n1976  3.040442  3.720887  3.778037  5.200997  6.673568  7.379198  5.857414  5.093520  5.072093  5.117023  3.575525  5.014266\n1977  6.435108 12.054450  6.336976  9.123064  6.255971  7.616233  4.105433  4.782352  2.760079  4.065748  5.420399  4.033883\n1978  6.056223  7.374409  8.668254  9.873637 10.451070 11.012750  5.793180  5.119508  7.025764  7.623123  6.306279  6.273224\n1979  9.946648 11.106510 10.389710 11.519510 13.766670 11.877010  9.987637  9.318593 10.410780  9.167216  6.281625  9.620259\n1980 14.005740 14.956960 14.772750  8.707769 10.170030  8.572340  7.396264  9.999892 11.967070  7.265405  7.174647  7.693233\n1981 10.614180 15.060890  9.936591  6.880011  7.334265  6.843737  9.197388  8.644333  9.498251  5.220479  4.722268  4.229963\n1982  6.531282  3.765132  1.835451  1.875277  8.318006 11.909480  8.179443  2.243804  5.880264  5.358331  1.808168  0.903063\n1983  2.664138  0.409372  0.818200  8.558391  6.479959  4.032262  4.820824  4.002672  5.979086  3.176779  1.981179  1.582568\n1984  6.702875  5.491976  2.736532  5.843219  3.492417  3.868475  3.856044  4.994358  5.737063  3.048542  0.000000  0.760985\n1985  2.279948  4.924980  5.281344  4.883469  4.490115  3.729027  1.860177  2.599458  3.703707  3.692311  4.048485  2.935736\n1986  3.659655 -3.293165 -5.508809 -2.579503  3.683244  5.869799  0.365932  2.193139  5.828813  1.089709  1.088720  1.087844\n1987  7.226761  4.308729  5.364409  6.405601  4.251591  4.236581  3.167622  6.310269  6.277260  3.126359  1.040348  0.000000\n1988  3.115431  3.107574  5.161263  6.164397  4.092111  5.095515  5.073969  5.052708  8.040197  3.999936  0.998057  1.993322\n1989  5.960278  4.944349  6.888122  7.823956  6.804426  2.904398  2.897386  1.927679  3.846190  5.746220  2.862824  1.904730\n1990 12.307830  5.638225  6.544558  1.863323  2.789618  6.484031  4.610040 10.992540  9.988676  7.212614  2.693695  0.000000\n\n# 시계열 그림\nplot(y, type = \"l\")\n\n\n\n\n\n\n\n\n\n# 상관도표그림\nacf(y)\n\n\n\n\n\n\n\n\nResult! 대부분의 시차에서 막대의 끝이 파란색 선을 넘어가므로 시차 25까지 유의한 자기상관관계가 존재한다.\n\n# 부분상관도표그림\npacf(y)\n\n\n\n\n\n\n\n\nResult! 시차 7까지 막대의 끝이 파란색 선을 넘어가므로 시차 7까지 유의한 부분자기상관관계가 존재한다.\n\n# Ljung-Box Test\nBox.test(y, lag = 7,\n         type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  y\nX-squared = 774.34, df = 7, p-value &lt; 2.2e-16\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(7)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0에 가까우므로 유의수준 0.05에서 귀무가설을 기각한다. 즉, 관측된 시계열에 대해 \\(\\rho(1), \\rho(2),\\cdots,\\rho(7)\\) 중 유의한 자기상관관계가 적어도 1개 존재한다.\n\n# Fit MA(1)\nMA.y &lt;- arima(y, \n              order = c(0, 0, 1)) \n\n# 잔차를 이용한 모형 진단\nBox.test(residuals(MA.y), lag = 5,\n         type = \"Ljung-Box\",\n         fitdf = 1)                 # MA 모형의 추정한 회귀 모수 theta 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(MA.y)\nX-squared = 208.78, df = 4, p-value &lt; 2.2e-16\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(5)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0에 가깝기 때문에 유의수준 0.05에서 \\(p\\)값이 0.05보다 작아 귀무가설을 기각한다. 즉, 잔차에 대해 시차 5까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(5)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 것을 의미하며, 해당 시계열에 대해 MA(1) 모형을 가정하는 것은 적절하지 않다.\n\n# 잔차에 대한 상관도표그림\nacf(residuals(MA.y))\n\n\n\n\n\n\n\n\nResult! 모든 시차에서 막대의 끝이 파란색 선을 넘어가므로 모든 시차에서 자기상관계수는 통계적으로 유의하다.\nCaution! Package \"forecast\"에서 제공하는 함수 auto.arima()에 옵션 max.p = 0, max.q = 20, d = 0을 입력하여 최적의 MA(\\(q\\)) 모형을 찾을 수 있다.\n\n# 함수 auto.arima() 이용\npacman::p_load(\"forecast\")\n\nauto.ma.y &lt;- auto.arima(y, max.q = 20,        # MA(1) ~ MA(20) 모형을 후보로 둠\n                        max.p = 0, d = 0, \n                        max.P = 0,\n                        max.Q = 0,\n                        max.D = 0,\n                        ic = \"bic\")           # BIC 기준으로 BIC가 가장 작은 모형을 최적 모형으로 선택\n\nprint(auto.ma.y)\n\nSeries: y \nARIMA(0,0,4) with non-zero mean \n\nCoefficients:\n         ma1     ma2     ma3     ma4    mean\n      0.4717  0.3742  0.1882  0.1544  3.9772\ns.e.  0.0459  0.0489  0.0433  0.0424  0.3066\n\nsigma^2 = 9.777:  log likelihood = -1254.13\nAIC=2520.26   AICc=2520.44   BIC=2545.44\n\n\nResult! 관측된 시계열에 대해 BIC를 기준으로 최적의 모형은 MA(4) 모형이다. 모수 추정 결과에 따르면, \\(\\hat{\\mu} = 3.9772\\), \\(\\hat{\\theta}_1=0.4717\\), \\(\\hat{\\theta}_2=0.3742\\), \\(\\hat{\\theta}_3=0.1882\\), \\(\\hat{\\theta}_4=0.1544\\), \\(\\hat{\\sigma}^2_\\epsilon = 9.777\\)이다. 이를 이용하면 관측된 시계열에 대해 구축된 MA(4) 모형은 \\(Y_t-3.9772 = \\epsilon_t + 0.4717\\epsilon_{t-1}+0.3742\\epsilon_{t-2}+ 0.1882\\epsilon_{t-3} + 0.1544\\epsilon_{t-4}\\)이다.\n\n# 잔차를 이용한 모형 진단\nBox.test(residuals(auto.ma.y), lag = 10,\n         type = \"Ljung-Box\",\n         fitdf = 4)                 # MA 모형의 추정한 회귀 모수 theta 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(auto.ma.y)\nX-squared = 79.275, df = 6, p-value = 4.996e-15\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(10)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0에 가까우므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 작아 귀무가설을 기각한다. 즉, 잔차에 대해 시차 10까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(10)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 것을 의미하며, 해당 시계열에 대해 MA(4) 모형을 가정하는 것은 적절하지 않다.\n\n# 잔차에 대한 상관도표그림\nacf(residuals(auto.ma.y))\n\n\n\n\n\n\n\n\nResult! 시차 4부터 막대의 끝이 파란색 선을 넘어가므로 해당 시차들에서 자기상관계수는 통계적으로 유의하다.\n\n# 함수 auto.arima() 이용\npacman::p_load(\"forecast\")\n\nauto.ma.y2 &lt;- auto.arima(y, max.q = 20,        # MA(1) ~ MA(20) 모형을 후보로 둠\n                         max.p = 0, d = 0, \n                         max.P = 0,\n                         max.Q = 0,\n                         max.D = 0,\n                         ic = \"aic\")           # AIC 기준으로 AIC가 가장 작은 모형을 최적 모형으로 선택\n\nprint(auto.ma.y2)\n\nSeries: y \nARIMA(0,0,9) with non-zero mean \n\nCoefficients:\n         ma1     ma2     ma3     ma4     ma5     ma6     ma7     ma8     ma9    mean\n      0.4223  0.3228  0.1538  0.1779  0.1662  0.1815  0.1813  0.1314  0.1123  3.9686\ns.e.  0.0456  0.0504  0.0536  0.0541  0.0505  0.0436  0.0502  0.0448  0.0420  0.3843\n\nsigma^2 = 9.214:  log likelihood = -1237.11\nAIC=2496.22   AICc=2496.78   BIC=2542.39\n\n\nResult! 관측된 시계열에 대해 AIC를 기준으로 최적의 모형은 MA(9) 모형이다. 모수 추정 결과에 따르면, \\(\\hat{\\mu} = 3.9686\\), \\(\\hat{\\theta}_1=0.4223\\), \\(\\hat{\\theta}_2=0.3228\\), \\(\\hat{\\theta}_3=0.1538\\), \\(\\hat{\\theta}_4=0.1779\\), \\(\\hat{\\theta}_5=0.1662\\), \\(\\hat{\\theta}_6=0.1815\\), \\(\\hat{\\theta}_7=0.1813\\), \\(\\hat{\\theta}_8 = 0.1314\\), \\(\\hat{\\theta}_9=0.1123\\), \\(\\hat{\\sigma}^2_\\epsilon = 9.214\\)이다. 이를 이용하면 관측된 시계열에 대해 구축된 MA(9) 모형은 \\[\n\\begin{align*}\nY_t-3.9686 = & \\; \\epsilon_t + 0.4223\\epsilon_{t-1}+0.3228\\epsilon_{t-2}+0.1538\\epsilon_{t-3}\\\\\n&+ 0.1779\\epsilon_{t-4}+0.1662\\epsilon_{t-5}+0.1815\\epsilon_{t-6} \\\\\n&+0.1813\\epsilon_{t-7}+ 0.1314\\epsilon_{t-8} + 0.1123\\epsilon_{t-9}\n\\end{align*}\n\\] 이다.\n\n# 잔차를 이용한 모형 진단\nBox.test(residuals(auto.ma.y2), lag = 10,\n         type = \"Ljung-Box\",\n         fitdf = 9)                 # MA 모형의 추정한 회귀 모수 theta 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(auto.ma.y2)\nX-squared = 20.252, df = 1, p-value = 6.787e-06\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(10)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0에 가까우이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 작기 때문에 귀무가설을 기각한다. 즉, 잔차에 대해 시차 10까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(10)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 것을 의미하며, 해당 시계열에 대해 MA(9) 모형을 가정하는 것은 적절하지 않다.\n\n# 잔차에 대한 상관도표그림\nacf(residuals(auto.ma.y2))\n\n\n\n\n\n\n\n\nResult! 시차 10-12까지 막대의 끝이 파란색 선을 넘어가므로 해당 시차들에서 자기상관계수는 통계적으로 유의하다.",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Moving Average Process</span>"
    ]
  },
  {
    "objectID": "ARMA.html",
    "href": "ARMA.html",
    "title": "4  Autoregressive Moving Average Process",
    "section": "",
    "text": "4.1 함수 설명",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Autoregressive Moving Average Process</span>"
    ]
  },
  {
    "objectID": "ARMA.html#함수-설명",
    "href": "ARMA.html#함수-설명",
    "title": "4  Autoregressive Moving Average Process",
    "section": "",
    "text": "관측된 시계열에 자기회귀이동평균모형(Autoregressive Moving Average Model)을 구축하는 데 유용한 함수를 요약하면 다음과 같다.\n\n\n\n\n\n\n\n\n함수\n설명\n\n\n\n\narima()\nARMA모형의 차수 \\(p\\)와 \\(q\\)를 지정하여 모형 구축\n\n\nauto.arima()\n모형의 차수 지정없이 자동적으로 최적화된 모형 구축\n\n\nacf()\n상관도표그림\n\n\npacf()\n부분상관도표그림\n\n\nBox.test()\nLjung-Box Test\n\n\ncheckresiduals()\n잔차가 백색잡음과정의 가정을 만족하는지 확인할 때 사용\n\n\nforecast()\n예측",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Autoregressive Moving Average Process</span>"
    ]
  },
  {
    "objectID": "ARMA.html#예제",
    "href": "ARMA.html#예제",
    "title": "4  Autoregressive Moving Average Process",
    "section": "4.2 예제",
    "text": "4.2 예제\n\n4.2.1 BMW 데이터셋\n\nPackage \"evir\"에서 제공하는 BMW 데이터셋은 1973년 1월부터 1996년 7월 사이에 BMW 주식의 일별 로그 수익률에 대한 시계열 데이터셋이다.\n\n\n# 패키지 설치\npacman::p_load(\"evir\")\n\n# 데이터 불러오기\ndata(bmw, package = \"evir\")\n\n# 시계열 그림\nplot(bmw, type = \"l\")\n\n\n\n\n\n\n\n\nResult! 증가하거나 감소하는 추세가 없어서 시간의 흐름에 따라 평균이 일정하다.\n\n# 상관도표그림\nacf(bmw)\n\n\n\n\n\n\n\n\nResult! 시차 1에서 막대의 끝이 파란색 선을 넘어가므로 시차 1에 대해 유의한 자기상관관계가 존재한다.\n\n# 부분상관도표그림\npacf(bmw)\n\n\n\n\n\n\n\n\nResult! 시차 1에서 막대의 끝이 파란색 선을 넘어가므로 시차 1에 대해 유의한 부분자기상관관계가 존재한다.\nCaution! 큰 시차에서의 막대 끝이 파란색 선을 넘어가는 것은 우연 변동에 의한 가능성이 높다.\n\n# Ljung-Box Test\nBox.test(bmw, lag = 5,\n         type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  bmw\nX-squared = 44.987, df = 5, p-value = 1.46e-08\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(5)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0에 가까우므로 유의수준 0.05에서 귀무가설을 기각한다. 즉, 관측된 시계열에 대해 \\(\\rho(1), \\rho(2),\\cdots,\\rho(5)\\) 중 유의한 자기상관관계가 적어도 1개 존재한다.\n\n# Fit ARMA(1,1)\nARMA.bmw &lt;- arima(bmw, \n                  order = c(1, 0, 1)) \n\nCaution! 함수 arima()를 이용하여 ARMA(1,1) 모형을 구축하려면 옵션 order = c(1, 0, 1)을 입력한다. 만약, ARMA(\\(p,q\\)) 모형을 구축하려면 옵션 order = c(p, 0, q)을 입력하면 된다.\n\n# 모형 추정 결과\nprint(ARMA.bmw)\n\n\nCall:\narima(x = bmw, order = c(1, 0, 1))\n\nCoefficients:\n          ar1     ma1  intercept\n      -0.2278  0.3122      4e-04\ns.e.   0.1380  0.1349      2e-04\n\nsigma^2 estimated as 0.0002161:  log likelihood = 17214.87,  aic = -34421.74\n\n\nResult! 출력 결과를 요약하면 다음과 같다.\n1. 모수의 추정치는 \\(\\hat{\\mu}=0.0004\\), \\(\\hat{\\phi}=-0.2278\\), \\(\\hat{\\theta}=0.3122\\), \\(\\hat{\\sigma}^2_\\epsilon = 0.0002161\\)이다. 이를 이용하면 관측된 시계열에 대해 구축된 ARMA(1,1) 모형은 \\(Y_t-0.0004 = -0.2278(Y_{t-1}-0.0004)+ \\epsilon_t + 0.3122\\epsilon_{t-1}\\)이다.\n\n# 잔차를 이용한 백색잡음과정 체크\npacman::p_load(\"forecast\")\n\ncheckresiduals(ARMA.bmw)\n\n\n\n\n\n\n\n\n\n    Ljung-Box test\n\ndata:  Residuals from ARIMA(1,0,1) with non-zero mean\nQ* = 12.394, df = 8, p-value = 0.1345\n\nModel df: 2.   Total lags used: 10\n\n\nCaution! Package \"forecast\"의 함수 checkresiduals()를 이용하여 잔차에 대한 모형 진단을 수행할 수 있다.\nResult! 출력 그래프를 보면, 첫 번째 그래프는 잔차가 추세를 가지는지, 등분산성을 만족하는지 알 수 있다. ACF 그래프를 통해서는 잔차가 자기상관관계를 가지는지 알 수 있으며, 히스토그램을 통해 잔차가 좌우대칭 종 모양의 정규분포를 따르는지 알 수 있다.\n“Ljung-Box” 검정 결과에 따르면, 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(10)=0\\)에 대해 \\(p\\)값이 0.1345이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 10까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(10)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 해당 시계열에 대해 ARMA(1,1) 모형을 가정하는 것이 적절하다.\n\n\n4.2.2 Mishkin 데이터\n\nPackage \"Ecdat\"에서 제공하는 Mishkin 데이터셋은 1950년 2월부터 1990년 12월 사이에 인플레이션율에 대한 시계열 데이터셋이다.\n\n\n# 패키지 설치\npacman::p_load(\"Ecdat\")\n\n# 데이터 불러오기\ndata(Mishkin, package = \"Ecdat\")\ny = as.vector(Mishkin[,1])             # 월별 인플레이션율 추출\ny\n\n  [1] -3.552289  5.247540  1.692860  5.064298  6.719322 11.668920  9.912501  8.346786  6.517766  4.865085 16.076321 19.154240 14.061910  4.650814  1.546310  4.627010 -1.540355  1.540355  0.000000\n [20]  7.672257  6.102576  6.209472  4.533152  0.000000 -7.564866  0.000000 19.570490 -1.494151  1.494151  0.000000 -1.494151  0.000000  1.494151  0.000000 -1.494151 -2.993894 -6.010291  3.008908\n [39]  1.501630  2.997634  4.482457  2.979029  2.971549  1.483071  2.960655 -4.443726 -1.484906  2.967978 -1.483071 -1.484906 -2.839906  2.839906  1.484906  0.000000 -1.484906 -2.839906 -2.982291\n [58]  2.982291 -2.982291  0.000000  0.000000  1.492020  0.000000  0.000000  0.000000  2.978693 -2.978693  4.330177  0.000000  1.484906 -2.836390  0.000000  0.000000  2.836390  1.483071  5.914023\n [77]  5.751562  8.774637 -1.457907  1.457907  5.682521  1.449363  2.893485  0.000000  2.886525  2.748830  2.873018  2.866156  7.006195  5.678584  1.415482  1.413814  0.000000  4.103441  0.000000\n [96]  7.020216  1.399128  6.844860  2.777502  0.000000  1.386248  1.384744  0.000000  0.000000  1.383148  1.381556 -1.381556  1.381556 -1.381556  0.000000  1.381556  1.254555  5.504627  2.742874\n[115] -1.370653  2.739743  3.973921  1.363010 -2.727571  1.364560  0.000000  6.799529  0.000000  2.586158  0.000000  0.000000  1.352397  5.394306  1.344819  0.000000  0.000000  1.343314 -1.343314\n[134]  1.343314  0.000000  1.341812  5.230890 -1.335972  2.670459  0.000000  0.000000  0.000000  0.000000  2.664529  2.658626  2.532271  0.000000  0.000000  2.647071  0.000000  6.592472 -1.315600\n[153]  0.000000 -1.317044  1.317044  1.315600  1.194725  0.000000  0.000000  5.242814  3.917133  0.000000  1.302875  1.183181  0.000000  2.598952  0.000000  0.000000 -1.298772  1.298772  2.593336\n[172]  0.000000  2.587653  1.291782 -1.291782  2.582175  1.171857  2.574118  1.284992 -1.284992  0.000000  1.284992  3.846739  2.557659  6.254851  1.270154 -2.541654  2.541654  0.000000  2.536194\n[191]  3.679570  0.000000  7.553715  2.393494  4.999561  0.000000  2.491991  2.486741  7.317456  1.233940  4.811423  0.000000  0.000000  0.000000  1.227743  2.451723  2.446724  3.549967  3.649961\n[210]  4.849325  2.307577  3.617287  3.606416  2.289339  3.588767  4.768305  3.456034  4.735883  3.539687  4.596686  3.515803  3.399432  3.495549  3.485477  5.681739  3.458990  2.300467  3.338259\n[229]  4.574945  6.726781  5.662605  3.282331  7.861482  3.252032  4.457231  4.339972  4.424734  5.408054  7.570396  2.182552  5.439077  3.153226  7.553640  4.197689  3.211568  5.236804  2.126986\n[248]  4.242622  6.240278  4.110415  5.237093  2.088382  5.110830  5.183215  6.096802  5.041712  6.133401  2.962434  1.016681  1.015820  2.029064  1.013247  3.952596  1.009064  5.945445  3.007194\n[267]  2.999539  2.901685  2.984980  2.977574  2.880218  4.934430  2.950948  3.834231  2.934329  5.758887  8.630559 11.440700  9.436906  6.536329  7.438794  3.659775 19.304211  1.838323  7.242186\n[286]  8.105994  8.051480  9.785962 15.814170 12.122030  6.883693 12.010690 10.111450  7.566704 13.394280 12.342670  9.006326  9.680984  7.246837  4.855838  6.371189  4.738003  4.719480  5.566699\n[305]  9.340268 12.388900  4.665991  5.350513  6.864336  6.061113  5.269925  3.040442  3.720887  3.778037  5.200997  6.673568  7.379198  5.857414  5.093520  5.072093  5.117023  3.575525  5.014266\n[324]  6.435108 12.054450  6.336976  9.123064  6.255971  7.616233  4.105433  4.782352  2.760079  4.065748  5.420399  4.033883  6.056223  7.374409  8.668254  9.873637 10.451070 11.012750  5.793180\n[343]  5.119508  7.025764  7.623123  6.306279  6.273224  9.946648 11.106510 10.389710 11.519510 13.766670 11.877010  9.987637  9.318593 10.410780  9.167216  6.281625  9.620259 14.005740 14.956960\n[362] 14.772750  8.707769 10.170030  8.572340  7.396264  9.999892 11.967070  7.265405  7.174647  7.693233 10.614180 15.060890  9.936591  6.880011  7.334265  6.843737  9.197388  8.644333  9.498251\n[381]  5.220479  4.722268  4.229963  6.531282  3.765132  1.835451  1.875277  8.318006 11.909480  8.179443  2.243804  5.880264  5.358331  1.808168  0.903063  2.664138  0.409372  0.818200  8.558391\n[400]  6.479959  4.032262  4.820824  4.002672  5.979086  3.176779  1.981179  1.582568  6.702875  5.491976  2.736532  5.843219  3.492417  3.868475  3.856044  4.994358  5.737063  3.048542  0.000000\n[419]  0.760985  2.279948  4.924980  5.281344  4.883469  4.490115  3.729027  1.860177  2.599458  3.703707  3.692311  4.048485  2.935736  3.659655 -3.293165 -5.508809 -2.579503  3.683244  5.869799\n[438]  0.365932  2.193139  5.828813  1.089709  1.088720  1.087844  7.226761  4.308729  5.364409  6.405601  4.251591  4.236581  3.167622  6.310269  6.277260  3.126359  1.040348  0.000000  3.115431\n[457]  3.107574  5.161263  6.164397  4.092111  5.095515  5.073969  5.052708  8.040197  3.999936  0.998057  1.993322  5.960278  4.944349  6.888122  7.823956  6.804426  2.904398  2.897386  1.927679\n[476]  3.846190  5.746220  2.862824  1.904730 12.307830  5.638225  6.544558  1.863323  2.789618  6.484031  4.610040 10.992540  9.988676  7.212614  2.693695  0.000000\n\n# 시계열 그림\nplot(y, type = \"l\")\n\n\n\n\n\n\n\n\n\n# 상관도표그림\nacf(y)\n\n\n\n\n\n\n\n\nResult! 대부분의 시차에서 막대의 끝이 파란색 선을 넘어가므로 시차 25까지 유의한 자기상관관계가 존재한다.\n\n# 부분상관도표그림\npacf(y)\n\n\n\n\n\n\n\n\nResult! 시차 7까지 막대의 끝이 파란색 선을 넘어가므로 시차 7까지 유의한 부분자기상관관계가 존재한다.\n\n# Ljung-Box Test\nBox.test(y, lag = 7,\n         type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  y\nX-squared = 774.34, df = 7, p-value &lt; 2.2e-16\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(7)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0에 가까우므로 유의수준 0.05에서 귀무가설을 기각한다. 즉, 관측된 시계열에 대해 \\(\\rho(1), \\rho(2),\\cdots,\\rho(7)\\) 중 유의한 자기상관관계가 적어도 1개 존재한다.\n\n# Fit ARMA(1,1)\nARMA.y &lt;- arima(y, \n                order = c(1, 0, 1)) \n\n# 잔차를 이용한 백색잡음과정 체크\ncheckresiduals(ARMA.y)\n\n\n\n\n\n\n\n\n\n    Ljung-Box test\n\ndata:  Residuals from ARIMA(1,0,1) with non-zero mean\nQ* = 23.724, df = 8, p-value = 0.002549\n\nModel df: 2.   Total lags used: 10\n\n\nResult! ACF 그래프를 보면 시차 2에서 막대의 끝이 파란색 선을 넘어가므로 자기상관계수가 통계적으로 유의하다. 즉, 시차 2의 잔차들은 유의한 자기상관계수를 가지므로 백색잡음과정의 독립성 가정을 만족하지 않는다.\n게다가, “Ljung-Box” 검정 결과에 따르면, 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(10)=0\\)에 대해 \\(p\\)값이 0.002549이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 작아 귀무가설을 기각한다. 즉, 잔차에 대해 시차 10까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(10)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 것을 의미하며, 해당 시계열에 대해 ARMA(1,1) 모형을 가정하는 것은 적절하지 않다.\nCaution! Package \"forecast\"에서 제공하는 함수 auto.arima()에 옵션 max.p = 20, max.q = 20, d = 0을 입력하여 최적의 ARMA(\\(p,q\\)) 모형을 찾을 수 있다.\n\npacman::p_load(\"forecast\")\n\nauto.y2 &lt;- auto.arima(y, max.p = 20,        \n                      max.q = 20, d = 0, \n                      ic = \"aic\")           # AIC 기준으로 AIC가 가장 작은 모형을 최적 모형으로 선택\n\nprint(auto.y2)\n\nSeries: y \nARIMA(2,0,1) with non-zero mean \n\nCoefficients:\n         ar1      ar2      ma1    mean\n      1.2074  -0.2237  -0.8573  4.1068\ns.e.  0.0587   0.0551   0.0337  1.0692\n\nsigma^2 = 8.533:  log likelihood = -1221.52\nAIC=2453.03   AICc=2453.16   BIC=2474.02\n\n\nResult! 관측된 시계열에 대해 AIC를 기준으로 최적의 모형은 ARMA(2,1) 모형이다. 모수 추정 결과에 따르면, \\(\\hat{\\mu} = 4.1068\\), \\(\\hat{\\phi}_1=1.2074\\), \\(\\hat{\\phi}_2=-0.2237\\), \\(\\hat{\\theta}=-0.8573\\), \\(\\hat{\\sigma}^2_\\epsilon = 8.533\\)이다. 이를 이용하면 관측된 시계열에 대해 구축된 ARMA(2,1) 모형은 \\(Y_t-4.1068 = 1.2074(Y_{t-1}-4.1068)-0.2237(Y_{t-2}-4.1068)+\\epsilon_t -0.8573\\epsilon_{t-1}\\)이다.\n\n# 잔차를 이용한 백색잡음과정 체크\ncheckresiduals(auto.y2)\n\n\n\n\n\n\n\n\n\n    Ljung-Box test\n\ndata:  Residuals from ARIMA(2,0,1) with non-zero mean\nQ* = 6.9828, df = 7, p-value = 0.4307\n\nModel df: 3.   Total lags used: 10\n\n\nResult! 히스토그램을 살펴보면, 왼쪽으로 치우친 그래프 모양임을 알 수 있다.\n게다가, “Ljung-Box” 검정 결과에 따르면, 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(10)=0\\)에 대해 \\(p\\)값이 0.4307이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 10까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(10)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 해당 시계열에 대해 ARMA(2,1) 모형을 가정하는 것이 적절하다.",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Autoregressive Moving Average Process</span>"
    ]
  },
  {
    "objectID": "ARIMA.html",
    "href": "ARIMA.html",
    "title": "5  Autoregressive Integrated Moving Average Process",
    "section": "",
    "text": "5.1 함수 설명",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Autoregressive Integrated Moving Average Process</span>"
    ]
  },
  {
    "objectID": "ARIMA.html#함수-설명",
    "href": "ARIMA.html#함수-설명",
    "title": "5  Autoregressive Integrated Moving Average Process",
    "section": "",
    "text": "관측된 시계열에 자기회귀누적이동평균모형(Autoregressive Integrated Moving Average Model)을 구축하는 데 유용한 함수를 요약하면 다음과 같다.\n\n\n\n\n\n\n\n\n함수\n설명\n\n\n\n\narima()\nARIMA모형의 차수 \\(p\\)와 \\(q\\), 차분 수 \\(d\\)를 지정하여 모형 구축\n\n\nauto.arima()\n모형의 차수 지정없이 자동적으로 최적화된 모형 구축\n\n\nacf()\n상관도표그림\n\n\npacf()\n부분상관도표그림\n\n\nBox.test()\nLjung-Box Test\n\n\ncheckresiduals()\n잔차가 백색잡음과정의 가정을 만족하는지 확인할 때 사용\n\n\nforecast()\n예측",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Autoregressive Integrated Moving Average Process</span>"
    ]
  },
  {
    "objectID": "ARIMA.html#random-walk-and-momentum-plot",
    "href": "ARIMA.html#random-walk-and-momentum-plot",
    "title": "5  Autoregressive Integrated Moving Average Process",
    "section": "5.2 Random Walk and Momentum Plot",
    "text": "5.2 Random Walk and Momentum Plot\n\n# AR(1)과정을 따르는 시계열 생성\nset.seed(4631)\ny1 &lt;- arima.sim(n = 500,                 # 생성하고자하는 시계열 개수\n               list(ar = c(0.4)))        # AR(1)과정 : Y_t = 0.4Y_{t-1}\ny1\n\nTime Series:\nStart = 1 \nEnd = 500 \nFrequency = 1 \n  [1] -0.912343409 -1.701603284  1.309603454  0.691301009  0.832229499  0.555481039 -0.026684342 -0.362545410  0.693315964 -0.075195230  0.122254548 -0.370393783 -0.254577654  0.187517312 -1.708057556\n [16]  0.986697733 -0.640294098 -0.885591883 -0.993104578 -0.135172972 -0.194449428 -0.123467230 -1.216275158 -0.931739467  0.031253153 -1.499635290  1.319634259  2.398330132 -0.229766437  1.332681837\n [31]  0.157756638 -0.103097574 -0.102247983  2.536262232  3.218027097  0.445937187 -0.177490207 -1.602786627 -0.913088486 -1.406607759  0.099831368 -1.448052841  0.277834307  0.308540220  0.604106907\n [46]  0.372668105  1.287859364  1.821393863  3.624531543  0.972845982 -0.896416641 -1.777569846 -0.695491554 -1.375497500  1.007413097  1.142459616  0.721150425 -0.400368442 -0.961452076 -0.969140832\n [61] -1.968814756 -0.798978245 -1.022224506 -1.673391629 -0.705015657  0.731069223 -0.427970435  1.303036486  1.862548515  0.017150757  1.279744874  1.015345454  2.535688480  1.043884770  1.103283049\n [76]  2.050819678  0.166049018  1.325027055  0.982567526 -1.866691371 -1.395834381 -2.988217256 -0.158685151 -0.491788055 -0.277597713  1.604608492  0.982089512  0.125541809  0.635742936 -0.235507928\n [91]  0.132245190 -0.483377174  0.351436414  2.254957441 -0.203113635  1.751899755  1.201800038  2.079376478  1.641068416  0.012711375  0.455767972 -0.247430434 -0.419432042 -1.387682589 -0.806270199\n[106] -1.412385197 -1.392636594  1.346065579  0.313476772  0.845857651  0.029078760  0.054460112 -0.885253382 -0.146332643 -0.618382418 -0.920818943 -0.338097474 -0.752403660 -1.223742893  0.689190649\n[121]  0.539929591  1.258735015  0.022750117 -0.869336438 -0.828436846 -2.166858885  0.273965986 -1.037722970 -0.589593679  1.943031697  0.861840955 -0.520984536  0.770711156  1.101170054  0.846006091\n[136] -2.173509959 -1.102412181  0.596310901 -0.281340324  0.879172771 -0.409098649  1.747917946  0.444448222 -0.304067456 -0.970378141 -0.237309951 -0.342986461 -0.497046979 -0.938379568 -0.230699307\n[151] -0.696098707 -0.528535492  1.179030894  1.775753907  0.135886565  0.219726895  1.743976297  3.234301835  0.144757587 -1.026764175 -1.290638719 -0.293860740  0.213341896  0.656327137  0.115984113\n[166]  1.718136766  0.476141379 -0.987470475 -1.852852123 -2.641018085 -0.024482023  0.491991907  0.975704783 -0.002667929 -0.136539414 -0.081797455 -0.702349988 -0.149531603  0.467953220  0.075355046\n[181] -0.558518159  0.281974471 -0.899797597 -1.328805544 -0.027818037  0.802736204 -0.968890576 -0.312796925  0.867650846 -0.257391157  0.172430824 -0.313593354  1.450511226  0.445832929 -0.349042275\n[196] -2.148408416 -0.898881311  0.151759003 -2.266476419  0.117458198  1.766492454 -0.526284231  0.066299695 -0.566873492  0.965266585  1.037151790 -1.587680491  1.813497932  1.255998632  0.161051227\n[211]  3.054247824  0.952734586  0.452260141  0.203109914 -0.612809154 -1.421695279 -0.075559582 -0.150847637 -0.294898135 -0.191676540 -0.984143939 -0.954974484 -1.952447346 -0.407105502 -1.010789331\n[226] -0.376014894 -0.639076989 -1.140124930  0.607587073  0.094643343  1.277664446  1.289747945  0.765406149  0.965295215  0.768660214  2.119481591  1.975781515  1.218813681  0.168313822  0.299093643\n[241]  1.074462951  0.832784873  2.086258930  0.916655229 -0.164630750 -1.621972456 -1.146651373 -1.195654157 -0.949149364  0.278622989 -0.349154803 -0.063271529  0.487016245 -0.256592989 -0.198698480\n[256]  0.139972608 -1.401984577 -0.451456758  0.546480685 -0.118633637  0.834943293  1.232088158 -0.628640225 -1.307409713 -1.459409232 -0.035619335 -0.178265267  0.126249921 -1.136784165 -2.529288363\n[271]  0.386093595  0.625958961 -1.444598418 -0.757761283 -0.958362055 -1.367402052  0.002037527  0.624906595 -1.513101287  0.318593880  0.341663053  0.750263380 -1.475926277 -0.157797771 -0.245202005\n[286] -0.537848659  0.110833231 -1.759603329 -0.086328201 -0.127624951 -0.587355815 -2.306925358 -0.187697381 -1.456423114 -0.186679580 -0.190593254  0.446225486 -0.710882725  0.669572420 -1.652750327\n[301] -2.254961336 -0.242182465  0.667217541  0.935181469  1.634818270  0.312140714 -1.067727411  0.416256545  0.597315306 -2.083217594 -0.686914533  1.523376113 -0.589944868  0.809860833 -0.978598351\n[316] -2.291625802 -0.468682911 -1.008714414 -1.689834548 -0.417147451 -0.803271601 -0.832076120  0.065363742 -0.093893644 -1.049059664 -1.444510947 -1.076551021  0.159225511  0.899011492  0.495151288\n[331] -2.182210398 -0.704122441 -1.850799443 -0.911979956 -0.364270108  0.833332861  0.886993545  0.118737971 -0.608727843 -1.085932642  0.539806089  1.230683997  1.145261304  0.979793271  0.981000516\n[346]  0.858859490  0.425712618  1.451944450  1.040442611  1.270852691  0.001724409  0.104234966 -0.341138452 -1.138528598 -1.618354797 -1.699497595 -0.243076411 -0.651603385  1.343148562 -1.751853045\n[361] -2.139267445 -1.229228556  0.255161099  1.813250189  1.862858137  0.208573786  0.501641144 -1.252334702 -1.172962682 -1.129589843 -0.067739846 -0.062815505 -1.508314314 -0.335414905 -0.353518485\n[376]  0.208172483  0.262092705  0.531750971 -0.824122936  0.017032118 -1.015173764  0.365974862 -1.400376808 -1.443808435 -0.451407292  0.066326783 -0.895822894  0.900912062 -0.037442219 -0.456481687\n[391]  2.377575658  2.430206896 -1.619430146  0.987079742  0.281160126 -1.018931312 -0.794530108  1.494620796  1.388568007 -0.936099757 -1.617907620 -1.593275135 -0.836974326 -0.798359722 -1.113207216\n[406]  0.511917371 -1.735132035  0.177605755 -1.184768329  0.188680990 -0.878350456 -0.586789699 -0.784074820  0.617449054  2.593695064  0.547644160 -1.303269875  0.256800524 -0.885652387 -0.367378463\n[421] -0.458222229  0.632855057 -2.123028093 -0.601463044 -1.402681000 -1.015006105  0.672074035  0.441082153  0.108044662  1.241146031  0.182850562  0.532864396  2.021748358  1.453454116 -0.351721426\n[436] -0.760864939 -0.342109875  0.709747073  0.678984727 -0.345892776  1.049415015  1.099538689  0.931988534 -0.307293897  0.324674165  1.332195826  0.397157781  0.460074576  0.722534790  0.911401034\n[451]  1.052024961 -0.770966223 -1.270573476  0.567950193  0.663503429  1.895802731  0.792548728  0.743382531  0.966190659 -1.038656980 -0.638670844 -0.815864620  0.311205909  0.085439372  1.169179615\n[466]  0.045130403  1.334452836  2.056890984  0.061869779  0.993814932 -0.051180302  0.181854157 -0.867732369 -1.729196924 -1.068033410 -1.336379582 -2.486448663 -0.743950909 -0.780466420  0.422205583\n[481] -0.603969049 -1.086293175 -2.017387073 -2.463539252 -1.517367558 -1.439320711  0.757130325  1.029261284 -1.059658946 -0.542882678  0.053945454  0.336157628 -0.645807708  0.372731417  2.163157158\n[496]  1.349402356  0.636951690  1.163041710  2.250858491 -0.545616025\n\ny2 &lt;- cumsum(y1)                         # cumsum : 누적합\ny3 &lt;- cumsum(y2)\n\npar(mfrow=c(3, 1))                       # 3개의 그래프를 한 화면에 출력\nplot(y1, type = \"l\", \n     ylab = expression(y[1]),\n     lwd = 1, main = \"(a)\")\nplot(y2, type = \"l\",\n     xlab = \"Time\", ylab = expression(y[2]),\n     lwd = 1, main = \"(b)\")\nplot(y3, type = \"l\",\n     xlab = \"Time\", ylab = expression(y[3]),\n     lwd = 1, main = \"(c)\")\n\n\n\n\n\n\n\n\nResult! (a) 그래프는 평균 0 근처에서 무작위로 변하며, 정상시계열로 보인다.\n(b) 그래프는 Random Walk로 보인다. → 1차 차분 필요\n(c) 그래프는 Momentum (위 또는 아래로 움직이기 시작하면 그 방향으로 계속 움직이는 경향)으로 보인다. → 2차 차분 필요",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Autoregressive Integrated Moving Average Process</span>"
    ]
  },
  {
    "objectID": "ARIMA.html#cpi-데이터셋",
    "href": "ARIMA.html#cpi-데이터셋",
    "title": "5  Autoregressive Integrated Moving Average Process",
    "section": "5.3 CPI 데이터셋",
    "text": "5.3 CPI 데이터셋\nCSV 파일에 저장되어 있는 CPI (계절 조정된 미국의 소비자 물가 지수) 데이터셋은 1913년 1월 31일부터 2001년 11월 30일까지 월별 CPI가 기록되어져 있다.\n\n# 데이터 불러오기\nCPI.dat &lt;- read.csv(\".../CPI.dat.csv\")\nhead(CPI.dat)\n\n# 1977-01-31 ~ 1987-12-31 CPI만 추출\nCPI &lt;- as.matrix(CPI.dat$CPI)[769:900,]  \nhead(CPI)\n\n# log(CPI)를 차분\nCPI_diff1 &lt;- as.matrix(diff(log(CPI), \n                            diff = 1))           # 1번 차분\nhead(CPI_diff1)\n\nCPI_diff2 &lt;- as.matrix(diff(log(CPI), \n                            diff = 2))           # 2번 차분\nhead(CPI_diff2)\n\n\n\n   X.Y..m..d CPI\n1 1913-01-31 9.8\n2 1913-02-28 9.8\n3 1913-03-31 9.8\n4 1913-04-30 9.8\n5 1913-05-31 9.7\n6 1913-06-30 9.8\n\n\n[1] 58.7 59.3 59.6 60.0 60.2 60.5\n\n\n            [,1]\n[1,] 0.010169579\n[2,] 0.005046268\n[3,] 0.006688988\n[4,] 0.003327790\n[5,] 0.004971013\n[6,] 0.004946424\n\n\n              [,1]\n[1,] -5.123311e-03\n[2,]  1.642720e-03\n[3,] -3.361198e-03\n[4,]  1.643223e-03\n[5,] -2.458879e-05\n[6,] -2.434673e-05\n\n\nCaution! 함수 diff()를 이용하여 시계열을 차분할 수 있으며, 옵션 diff에 차분 횟수를 입력하면 된다.\n\npar(mfrow=c(3, 1))                               # 3개의 그래프를 한 화면에 출력\nplot(ts(log(CPI),                                # log(CPI)를 ts로 변환       \n        start = c(1977, 1),                      # 시계열의 시작 날짜 / c(1977, 1) : 1977년 1월\n        frequency = 12),                         # 주기 / 12 : 월별 시계열로 1년에 12번 관측\n     xlab = \"year\", ylab = \"log(CPI)\",           # 축 이름\n     type = \"b\",                                 # 점과 선을 함께 표시\n     main = \"(a)\")                               # 제목\nplot(ts(as.vector(CPI_diff1),                    # log(CPI)를 1번 차분한 시계열을 ts로 변환   \n        start = c(1977, 2),                      # 시계열의 시작 날짜 / c(1977, 2) : 1977년 2월\n        frequency = 12),                         \n     xlab = \"year\", ylab = expression(paste(Delta,\" log(CPI)\")),\n     type = \"b\",\n     main = \"(b)\")\nplot(ts(as.vector(CPI_diff2),                    # log(CPI)를 2번 차분한 시계열을 ts로 변환 \n        start = c(1977, 3),                      # 시계열의 시작 날짜 / c(1977, 3) : 1977년 3월\n        frequency = 12),  \n     xlab =\"year\", ylab = expression(paste(Delta^2,\" log(CPI)\")), \n     type = \"b\", \n     main = \"(c)\")\n\n\n\n\n\n\n\n\nCaution! 함수 ts()를 이용하여 시계열 객체로 변환할 수 있으며, 옵션 start에는 시계열의 시작 날짜, 옵션 frequency에는 주기를 입력한다.\nResult! (a) 그래프를 통해 원 시계열 log(CPI)는 Momentum 현상을 보인다는 것을 알 수 있다.\n(b) 그래프를 통해 1번 차분한 log(CPI)는 Momentum 현상은 보이지 않으나, 시간이 흐름에 따라 평균이 변한다는 것을 알 수 있다.\n(c) 그래프를 통해 2번 차분한 log(CPI)는 시간이 흐름에 따라 평균이 0에서 변하지 않는다는 것을 알 수 있다.\n\n5.3.1 ARIMA 모형\n\n# 2번 차분한 log(CPI)에 MA(2) 모형 구축\nfit_ma &lt;- arima(CPI_diff2,\n                order = c(0, 0, 2))              # (p, d, q)\n\nfit_ma\n\n\nCall:\narima(x = CPI_diff2, order = c(0, 0, 2))\n\nCoefficients:\n          ma1      ma2  intercept\n      -0.3433  -0.3694      0e+00\ns.e.   0.0831   0.0837      1e-04\n\nsigma^2 estimated as 5.062e-06:  log likelihood = 607.81,  aic = -1207.62\n\n\nResult! 2번 차분한 log(CPI)에 대해 구축된 MA(2) 모형, 즉, 원 시계열 log(CPI)에 대해 구축된 ARIMA(0,2,2) 모형은 \\((1-B)^2Y_t=\\epsilon_t-0.3433\\epsilon_{t-1}-0.3694\\epsilon_{t-2}\\)이다.\n\n# 잔차를 이용한 모형 진단\nBox.test(fit_ma$resid,                           # 잔차\n         lag = 20, \n         type = \"Ljung-Box\",\n         fitdf = 2)                              # 추정된 theta 개수\n\n\n    Box-Ljung test\n\ndata:  fit_ma$resid\nX-squared = 26.956, df = 18, p-value = 0.07983\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(20)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0.07983이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 20까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(20)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 2번 차분한 log(CPI)에 대해 MA(2) 모형을 가정하는 것이 적절하다.\n\npar(mfrow=c(2,2))                                # 1행에 2개의 그래프를 출력 -&gt; 총 2개의 행으로 4개의 그래프가 출력됨\nacf(log(CPI),main = \"(a) log(CPI)\")\nacf(CPI_diff1, main = expression(paste(\"(b) \",Delta,\" log(CPI)\")))\nacf(CPI_diff2, main = expression(paste(\"(c) \",Delta^2,\" log(CPI)\")))\nacf(fit_ma$resid, main = \"(d) residuals, ARIMA(0,2,2)\")\n\n\n\n\n\n\n\n\nResult! (a) 그래프를 통해 원 시계열 log(CPI)의 자기상관계수 ACF는 천천히 감소하고 있다는 것을 알 수 있으며, 이는 원 시계열이 비정상시계열임을 의미한다.\n(c) 그래프를 통해 2번 차분한 log(CPI)의 자기상관계수 ACF는 처음 2개의 시차에서 큰 자기상관을 가지고, 그 이후는 작은 자기상관을 가진다는 것을 알 수 있다.\n(d) 그래프를 통해 2번 차분한 log(CPI)에 구축된 MA(2) 모형의 잔차는 자기상관이 존재하지 않다는 것을 알 수 있다. 이는 2번 차분한 log(CPI)에 MA(2) 모형, 즉, 원 시계열 log(CPI)에 ARIMA(0,2,2) 모형을 가정하는 것이 적절하다는 것을 의미한다.",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Autoregressive Integrated Moving Average Process</span>"
    ]
  },
  {
    "objectID": "ARIMA.html#mishkin-데이터셋",
    "href": "ARIMA.html#mishkin-데이터셋",
    "title": "5  Autoregressive Integrated Moving Average Process",
    "section": "5.4 Mishkin 데이터셋",
    "text": "5.4 Mishkin 데이터셋\nPackage \"Ecdat\"에서 제공하는 Mishkin 데이터셋은 1950년 2월부터 1990년 12월 사이에 인플레이션율에 대한 시계열 데이터셋이다.\n\n# 패키지 설치\npacman::p_load(\"Ecdat\")\n\n# 데이터 불러오기\ndata(Mishkin, package = \"Ecdat\")\ny &lt;- as.vector(Mishkin[,1])             # 월별 인플레이션율 추출\ny\n\n  [1] -3.552289  5.247540  1.692860  5.064298  6.719322 11.668920  9.912501  8.346786  6.517766  4.865085 16.076321 19.154240 14.061910  4.650814  1.546310  4.627010 -1.540355  1.540355  0.000000\n [20]  7.672257  6.102576  6.209472  4.533152  0.000000 -7.564866  0.000000 19.570490 -1.494151  1.494151  0.000000 -1.494151  0.000000  1.494151  0.000000 -1.494151 -2.993894 -6.010291  3.008908\n [39]  1.501630  2.997634  4.482457  2.979029  2.971549  1.483071  2.960655 -4.443726 -1.484906  2.967978 -1.483071 -1.484906 -2.839906  2.839906  1.484906  0.000000 -1.484906 -2.839906 -2.982291\n [58]  2.982291 -2.982291  0.000000  0.000000  1.492020  0.000000  0.000000  0.000000  2.978693 -2.978693  4.330177  0.000000  1.484906 -2.836390  0.000000  0.000000  2.836390  1.483071  5.914023\n [77]  5.751562  8.774637 -1.457907  1.457907  5.682521  1.449363  2.893485  0.000000  2.886525  2.748830  2.873018  2.866156  7.006195  5.678584  1.415482  1.413814  0.000000  4.103441  0.000000\n [96]  7.020216  1.399128  6.844860  2.777502  0.000000  1.386248  1.384744  0.000000  0.000000  1.383148  1.381556 -1.381556  1.381556 -1.381556  0.000000  1.381556  1.254555  5.504627  2.742874\n[115] -1.370653  2.739743  3.973921  1.363010 -2.727571  1.364560  0.000000  6.799529  0.000000  2.586158  0.000000  0.000000  1.352397  5.394306  1.344819  0.000000  0.000000  1.343314 -1.343314\n[134]  1.343314  0.000000  1.341812  5.230890 -1.335972  2.670459  0.000000  0.000000  0.000000  0.000000  2.664529  2.658626  2.532271  0.000000  0.000000  2.647071  0.000000  6.592472 -1.315600\n[153]  0.000000 -1.317044  1.317044  1.315600  1.194725  0.000000  0.000000  5.242814  3.917133  0.000000  1.302875  1.183181  0.000000  2.598952  0.000000  0.000000 -1.298772  1.298772  2.593336\n[172]  0.000000  2.587653  1.291782 -1.291782  2.582175  1.171857  2.574118  1.284992 -1.284992  0.000000  1.284992  3.846739  2.557659  6.254851  1.270154 -2.541654  2.541654  0.000000  2.536194\n[191]  3.679570  0.000000  7.553715  2.393494  4.999561  0.000000  2.491991  2.486741  7.317456  1.233940  4.811423  0.000000  0.000000  0.000000  1.227743  2.451723  2.446724  3.549967  3.649961\n[210]  4.849325  2.307577  3.617287  3.606416  2.289339  3.588767  4.768305  3.456034  4.735883  3.539687  4.596686  3.515803  3.399432  3.495549  3.485477  5.681739  3.458990  2.300467  3.338259\n[229]  4.574945  6.726781  5.662605  3.282331  7.861482  3.252032  4.457231  4.339972  4.424734  5.408054  7.570396  2.182552  5.439077  3.153226  7.553640  4.197689  3.211568  5.236804  2.126986\n[248]  4.242622  6.240278  4.110415  5.237093  2.088382  5.110830  5.183215  6.096802  5.041712  6.133401  2.962434  1.016681  1.015820  2.029064  1.013247  3.952596  1.009064  5.945445  3.007194\n[267]  2.999539  2.901685  2.984980  2.977574  2.880218  4.934430  2.950948  3.834231  2.934329  5.758887  8.630559 11.440700  9.436906  6.536329  7.438794  3.659775 19.304211  1.838323  7.242186\n[286]  8.105994  8.051480  9.785962 15.814170 12.122030  6.883693 12.010690 10.111450  7.566704 13.394280 12.342670  9.006326  9.680984  7.246837  4.855838  6.371189  4.738003  4.719480  5.566699\n[305]  9.340268 12.388900  4.665991  5.350513  6.864336  6.061113  5.269925  3.040442  3.720887  3.778037  5.200997  6.673568  7.379198  5.857414  5.093520  5.072093  5.117023  3.575525  5.014266\n[324]  6.435108 12.054450  6.336976  9.123064  6.255971  7.616233  4.105433  4.782352  2.760079  4.065748  5.420399  4.033883  6.056223  7.374409  8.668254  9.873637 10.451070 11.012750  5.793180\n[343]  5.119508  7.025764  7.623123  6.306279  6.273224  9.946648 11.106510 10.389710 11.519510 13.766670 11.877010  9.987637  9.318593 10.410780  9.167216  6.281625  9.620259 14.005740 14.956960\n[362] 14.772750  8.707769 10.170030  8.572340  7.396264  9.999892 11.967070  7.265405  7.174647  7.693233 10.614180 15.060890  9.936591  6.880011  7.334265  6.843737  9.197388  8.644333  9.498251\n[381]  5.220479  4.722268  4.229963  6.531282  3.765132  1.835451  1.875277  8.318006 11.909480  8.179443  2.243804  5.880264  5.358331  1.808168  0.903063  2.664138  0.409372  0.818200  8.558391\n[400]  6.479959  4.032262  4.820824  4.002672  5.979086  3.176779  1.981179  1.582568  6.702875  5.491976  2.736532  5.843219  3.492417  3.868475  3.856044  4.994358  5.737063  3.048542  0.000000\n[419]  0.760985  2.279948  4.924980  5.281344  4.883469  4.490115  3.729027  1.860177  2.599458  3.703707  3.692311  4.048485  2.935736  3.659655 -3.293165 -5.508809 -2.579503  3.683244  5.869799\n[438]  0.365932  2.193139  5.828813  1.089709  1.088720  1.087844  7.226761  4.308729  5.364409  6.405601  4.251591  4.236581  3.167622  6.310269  6.277260  3.126359  1.040348  0.000000  3.115431\n[457]  3.107574  5.161263  6.164397  4.092111  5.095515  5.073969  5.052708  8.040197  3.999936  0.998057  1.993322  5.960278  4.944349  6.888122  7.823956  6.804426  2.904398  2.897386  1.927679\n[476]  3.846190  5.746220  2.862824  1.904730 12.307830  5.638225  6.544558  1.863323  2.789618  6.484031  4.610040 10.992540  9.988676  7.212614  2.693695  0.000000\n\n# 시계열 그림\nplot(y, type = \"l\")\n\n\n\n\n\n\n\n\nResult! 시간의 흐름에 따라 평균이 변하므로 원 시계열은 비정상시계열임이 의심된다.\n\n5.4.1 단위근 검정\n\n# 패키지 설치\npacman::p_load(\"tseries\")\n\n# Dickey-Fuller test\nadf.test(y)\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  y\nDickey-Fuller = -3.8651, Lag order = 7, p-value = 0.01576\nalternative hypothesis: stationary\n\n# Phillips-Perron test\npp.test(y)\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  y\nDickey-Fuller Z(alpha) = -248.75, Truncation lag parameter = 5, p-value = 0.01\nalternative hypothesis: stationary\n\n# KPSS test\nkpss.test(y)\n\n\n    KPSS Test for Level Stationarity\n\ndata:  y\nKPSS Level = 2.51, Truncation lag parameter = 5, p-value = 0.01\n\n\nCaution! 단위근 검정을 수행하기 위해 Package \"tseries\"에서 제공하는 함수 adf.test(), pp.test(), kpss.test()를 사용한다.\nResult! 1. Dickey-Fuller test를 수행했을 때, \\(p\\)값이 0.01576이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 작기 때문에 귀무가설을 기각한다. 즉, 관측된 시계열은 정상성을 만족한다.\n2. Phillips-Perron test를 수행했을 때, \\(p\\)값이 0.01이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 작기 때문에 귀무가설을 기각한다. 즉, 관측된 시계열은 정상성을 만족한다.\n3. KPSS test를 수행했을 때, \\(p\\)값이 0.01이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 작기 때문에 귀무가설을 기각한다. 즉, 단위근이 존재하므로 관측된 시계열은 비정상성을 가진다.\n\n\n5.4.2 ARIMA 모형\n\n# 패키지 설치\npacman::p_load(\"forecast\")\n\nauto.arima(y,\n           max.p = 5, max.q = 5, \n           ic = \"bic\")              # BIC 기준으로 BIC가 가장 작은 모형을 최적 모형으로 선택\n\nSeries: y \nARIMA(1,1,1) \n\nCoefficients:\n         ar1      ma1\n      0.2383  -0.8772\ns.e.  0.0550   0.0269\n\nsigma^2 = 8.587:  log likelihood = -1221.62\nAIC=2449.25   AICc=2449.29   BIC=2461.83\n\n# ARIMA(1,1,1) 모형 구축\nfitARIMA111 &lt;- arima(y, c(1, 1, 1))\n\nResult! 함수 auto.arima()를 이용하여 BIC 기준으로 최적의 모형을 판단했을 때, ARIMA(1,1,1) 모형이 선택되었다. 추정된 모수 결과를 이용하면 구축된 ARIMA(1,1,1) 모형은 \\((1-B)Y_t = 0.2383Y_{t-1}+\\epsilon_t -0.8772\\epsilon_{t-1}\\)이다.\n\n# 잔차를 이용한 모형 진단\npar(mfrow=c(1,1))\nacf(fitARIMA111$resid)            \n\n\n\n\n\n\n\nBox.test(fitARIMA111$resid,\n         lag = 15,\n         fitdf = 2)                # 추정한 phi와 theta 개수\n\n\n    Box-Pierce test\n\ndata:  fitARIMA111$resid\nX-squared = 14.442, df = 13, p-value = 0.3435\n\n\nResult! 잔차의 자기상관계수 ACF 그래프를 보면 시차 0을 제외하고 막대의 끝이 파란색 선을 넘어가지 않으므로 다른 시차에서 자기상관계수가 통계적으로 유의하다는 증거가 부족하다.\n“Ljung-Box” 검정 결과에 따르면, 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(15)=0\\)에 대해 \\(p\\)값이 0.3435이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 15까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(15)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 해당 시계열에 대해 ARIMA(1,1,1) 모형을 가정하는 것이 적절하다.\n\n\n5.4.3 예측\n\npred &lt;- forecast(fitARIMA111,\n                 h = 100)          # 미래 100시점까지 예측\npred\n\n    Point Forecast       Lo 80     Hi 80     Lo 95     Hi 95\n492       3.706101 -0.04167452  7.453876 -2.025627  9.437828\n493       4.589298  0.60462429  8.573972 -1.504735 10.683331\n494       4.799773  0.73892466  8.860620 -1.410758 11.010303\n495       4.849930  0.73788314  8.961978 -1.438903 11.138764\n496       4.861884  0.70417897  9.019588 -1.496777 11.220544\n497       4.864732  0.66298827  9.066476 -1.561281 11.290745\n498       4.865411  0.62034731  9.110475 -1.626854 11.357676\n499       4.865573  0.57768877  9.153457 -1.692180 11.423325\n500       4.865611  0.53534501  9.195878 -1.756959 11.488182\n501       4.865620  0.49338614  9.237855 -1.821135 11.552376\n502       4.865623  0.45182011  9.279425 -1.884706 11.615951\n503       4.865623  0.41064046  9.320606 -1.947685 11.678931\n504       4.865623  0.36983763  9.361409 -2.010088 11.741334\n505       4.865623  0.32940172  9.401845 -2.071929 11.803176\n506       4.865623  0.28932308  9.441924 -2.133224 11.864471\n507       4.865623  0.24959239  9.481654 -2.193987 11.925233\n508       4.865623  0.21020076  9.521046 -2.254231 11.985478\n509       4.865623  0.17113966  9.560107 -2.313970 12.045217\n510       4.865623  0.13240091  9.598846 -2.373216 12.104462\n511       4.865623  0.09397664  9.637270 -2.431981 12.163227\n512       4.865623  0.05585933  9.675387 -2.490276 12.221523\n513       4.865623  0.01804173  9.713205 -2.548113 12.279360\n514       4.865623 -0.01948312  9.750730 -2.605502 12.336749\n515       4.865623 -0.05672191  9.787969 -2.662454 12.393701\n516       4.865623 -0.09368109  9.824928 -2.718978 12.450225\n517       4.865623 -0.13036685  9.861614 -2.775084 12.506331\n518       4.865623 -0.16678519  9.898032 -2.830781 12.562028\n519       4.865623 -0.20294187  9.934189 -2.886078 12.617325\n520       4.865623 -0.23884244  9.970089 -2.940983 12.672230\n521       4.865623 -0.27449228 10.005739 -2.995505 12.726752\n522       4.865623 -0.30989655 10.041143 -3.049651 12.780898\n523       4.865623 -0.34506028 10.076307 -3.103430 12.834676\n524       4.865623 -0.37998830 10.111235 -3.156847 12.888094\n525       4.865623 -0.41468527 10.145932 -3.209912 12.941158\n526       4.865623 -0.44915574 10.180402 -3.262630 12.993876\n527       4.865623 -0.48340408 10.214651 -3.315008 13.046255\n528       4.865623 -0.51743452 10.248681 -3.367053 13.098300\n529       4.865623 -0.55125118 10.282498 -3.418771 13.150018\n530       4.865623 -0.58485803 10.316105 -3.470169 13.201415\n531       4.865623 -0.61825894 10.349506 -3.521251 13.252498\n532       4.865623 -0.65145763 10.382704 -3.572024 13.303271\n533       4.865623 -0.68445775 10.415704 -3.622493 13.353740\n534       4.865623 -0.71726281 10.448509 -3.672664 13.403911\n535       4.865623 -0.74987622 10.481123 -3.722542 13.453789\n536       4.865623 -0.78230132 10.513548 -3.772132 13.503379\n537       4.865623 -0.81454132 10.545788 -3.821439 13.552686\n538       4.865623 -0.84659937 10.577846 -3.870467 13.601714\n539       4.865623 -0.87847849 10.609725 -3.919222 13.650469\n540       4.865623 -0.91018167 10.641428 -3.967708 13.698955\n541       4.865623 -0.94171177 10.672958 -4.015929 13.747176\n542       4.865623 -0.97307161 10.704318 -4.063890 13.795137\n543       4.865623 -1.00426392 10.735511 -4.111595 13.842841\n544       4.865623 -1.03529134 10.766538 -4.159047 13.890294\n545       4.865623 -1.06615646 10.797403 -4.206251 13.937498\n546       4.865623 -1.09686182 10.828108 -4.253211 13.984457\n547       4.865623 -1.12740986 10.858657 -4.299930 14.031177\n548       4.865623 -1.15780297 10.889050 -4.346412 14.077659\n549       4.865623 -1.18804350 10.919290 -4.392661 14.123908\n550       4.865623 -1.21813371 10.949380 -4.438680 14.169927\n551       4.865623 -1.24807582 10.979322 -4.484473 14.215719\n552       4.865623 -1.27787201 11.009119 -4.530042 14.261289\n553       4.865623 -1.30752437 11.038771 -4.575391 14.306638\n554       4.865623 -1.33703499 11.068282 -4.620524 14.351771\n555       4.865623 -1.36640586 11.097653 -4.665443 14.396689\n556       4.865623 -1.39563896 11.126886 -4.710151 14.441398\n557       4.865623 -1.42473620 11.155983 -4.754651 14.485898\n558       4.865623 -1.45369947 11.184946 -4.798947 14.530194\n559       4.865623 -1.48253060 11.213777 -4.843040 14.574287\n560       4.865623 -1.51123138 11.242478 -4.886934 14.618181\n561       4.865623 -1.53980356 11.271050 -4.930632 14.661878\n562       4.865623 -1.56824885 11.299496 -4.974135 14.705382\n563       4.865623 -1.59656893 11.327816 -5.017447 14.748694\n564       4.865623 -1.62476545 11.356012 -5.060570 14.791816\n565       4.865623 -1.65283999 11.384087 -5.103506 14.834753\n566       4.865623 -1.68079414 11.412041 -5.146258 14.877505\n567       4.865623 -1.70862943 11.439876 -5.188829 14.920075\n568       4.865623 -1.73634736 11.467594 -5.231220 14.962466\n569       4.865623 -1.76394940 11.495196 -5.273433 15.004680\n570       4.865623 -1.79143700 11.522684 -5.315472 15.046719\n571       4.865623 -1.81881157 11.550058 -5.357338 15.088584\n572       4.865623 -1.84607448 11.577321 -5.399033 15.130279\n573       4.865623 -1.87322710 11.604474 -5.440559 15.171806\n574       4.865623 -1.90027075 11.631517 -5.481919 15.213165\n575       4.865623 -1.92720674 11.658453 -5.523114 15.254360\n576       4.865623 -1.95403634 11.685283 -5.564146 15.295393\n577       4.865623 -1.98076080 11.712007 -5.605018 15.336264\n578       4.865623 -2.00738135 11.738628 -5.645730 15.376977\n579       4.865623 -2.03389918 11.765146 -5.686286 15.417532\n580       4.865623 -2.06031549 11.791562 -5.726686 15.457933\n581       4.865623 -2.08663142 11.817878 -5.766933 15.498179\n582       4.865623 -2.11284812 11.844095 -5.807028 15.538274\n583       4.865623 -2.13896670 11.870213 -5.846973 15.578219\n584       4.865623 -2.16498824 11.896235 -5.886769 15.618016\n585       4.865623 -2.19091383 11.922160 -5.926419 15.657666\n586       4.865623 -2.21674452 11.947991 -5.965924 15.697170\n587       4.865623 -2.24248134 11.973728 -6.005285 15.736531\n588       4.865623 -2.26812530 11.999372 -6.044504 15.775750\n589       4.865623 -2.29367742 12.024924 -6.083582 15.814829\n590       4.865623 -2.31913866 12.050385 -6.122522 15.853769\n591       4.865623 -2.34450999 12.075757 -6.161324 15.892571\n\nplot(pred)\n\n\n\n\n\n\n\n\nCaution! 예측은 Package \"forecast\"에서 제공하는 함수 forecast()를 이용하여 수행할 수 있다.\nResult! 원 시계열은 비정상성을 가지기 때문에 예측 구간은 발산한다는 것을 알 수 있다.\n\n# 1번 차분한 시계열에 대한 예측\n## 시계열 그림\nplot(diff(y), type = \"l\")\n\n\n\n\n\n\n\n\nResult! 1번 차분한 시계열은 시간의 흐름에 따라 평균이 변하지 않고 분산도 일정해 보이므로 정상시계열로 보인다.\n\n# 1번 차분한 시계열에 MA(3) 모형 구축\nfit_diff &lt;- arima(diff(y),\n                  order = c(0, 0, 3))\n\n# 잔차를 이용한 모형 진단\nacf(fit_diff$resid)            \n\n\n\n\n\n\n\nBox.test(fit_diff$resid,\n         lag = 15,\n         fitdf = 3)  \n\n\n    Box-Pierce test\n\ndata:  fit_diff$resid\nX-squared = 13.346, df = 12, p-value = 0.3444\n\n\nResult! 잔차의 자기상관계수 ACF 그래프를 보면 시차 0을 제외하고 막대의 끝이 파란색 선을 넘어가지 않으므로 다른 시차에서 자기상관계수가 통계적으로 유의하다는 증거가 부족하다.\n“Ljung-Box” 검정 결과에 따르면, 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(15)=0\\)에 대해 \\(p\\)값이 0.3444이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 15까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(15)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 해당 시계열에 대해 MA(3) 모형을 가정하는 것이 적절하다. 이는 1번 차분한 시계열은 정상시계열임을 의미한다.\n\n# 예측\npred.diff &lt;- forecast(fit_diff,\n                      h = 100)          # 미래 100시점까지 예측\npred.diff\n\n    Point Forecast      Lo 80    Hi 80     Lo 95    Hi 95\n491   3.4279770957 -0.3093655 7.165320 -2.287795 9.143749\n492   0.8929253001 -3.5301468 5.315997 -5.871580 7.657430\n493   0.5146289502 -3.9250766 4.954335 -6.275315 7.304573\n494  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n495  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n496  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n497  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n498  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n499  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n500  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n501  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n502  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n503  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n504  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n505  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n506  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n507  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n508  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n509  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n510  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n511  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n512  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n513  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n514  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n515  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n516  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n517  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n518  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n519  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n520  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n521  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n522  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n523  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n524  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n525  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n526  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n527  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n528  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n529  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n530  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n531  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n532  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n533  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n534  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n535  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n536  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n537  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n538  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n539  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n540  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n541  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n542  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n543  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n544  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n545  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n546  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n547  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n548  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n549  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n550  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n551  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n552  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n553  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n554  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n555  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n556  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n557  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n558  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n559  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n560  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n561  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n562  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n563  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n564  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n565  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n566  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n567  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n568  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n569  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n570  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n571  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n572  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n573  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n574  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n575  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n576  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n577  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n578  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n579  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n580  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n581  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n582  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n583  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n584  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n585  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n586  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n587  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n588  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n589  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n590  -0.0001564659 -4.4582307 4.457918 -6.818193 6.817880\n\nplot(pred.diff)\n\n\n\n\n\n\n\n\nResult! 원 시계열을 1번 차분한 시계열은 정상성을 가지기 때문에 예측 구간은 수렴한다는 것을 알 수 있다.",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Autoregressive Integrated Moving Average Process</span>"
    ]
  },
  {
    "objectID": "SARIMA.html",
    "href": "SARIMA.html",
    "title": "6  Seasonal Autoregressive Integrated Moving Average Process",
    "section": "",
    "text": "6.1 Hstarts 데이터셋\nPackage \"Ecdat\"에서 제공하는 Hstarts 데이터셋은 1960년 1분기부터 2001년 4분기까지 캐나다의 분기별 도시 주택 착공 건수의 로그값이다.\n# 데이터 불러오기\ndata(Hstarts, package = \"Ecdat\")\nHstarts\n\n              hs    hssa\n1960 Q1  7.98933      NA\n1960 Q2  8.83961      NA\n1960 Q3  8.94841      NA\n1960 Q4  8.98907      NA\n1961 Q1  8.39087      NA\n1961 Q2  9.09204      NA\n1961 Q3  9.12005      NA\n1961 Q4  9.04617      NA\n1962 Q1  8.41013      NA\n1962 Q2  9.22375      NA\n1962 Q3  9.21443      NA\n1962 Q4  9.14145      NA\n1963 Q1  8.45105      NA\n1963 Q2  9.27685      NA\n1963 Q3  9.33756      NA\n1963 Q4  9.45561      NA\n1964 Q1  8.77976      NA\n1964 Q2  9.27263      NA\n1964 Q3  9.41833      NA\n1964 Q4  9.62011      NA\n1965 Q1  8.75794      NA\n1965 Q2  9.43931      NA\n1965 Q3  9.48390      NA\n1965 Q4  9.47211      NA\n1966 Q1  8.79664 9.27878\n1966 Q2  9.11291 8.91036\n1966 Q3  9.16440 9.04028\n1966 Q4  9.29422 9.16517\n1967 Q1  8.48501 9.02635\n1967 Q2  9.54072 9.39636\n1967 Q3  9.54173 9.46110\n1967 Q4  9.32963 9.28318\n1968 Q1  8.94546 9.45438\n1968 Q2  9.65637 9.51024\n1968 Q3  9.53218 9.41622\n1968 Q4  9.74087 9.65592\n1969 Q1  9.33424 9.81450\n1969 Q2  9.74377 9.58554\n1969 Q3  9.62086 9.44651\n1969 Q4  9.48319 9.30565\n1970 Q1  8.77168 9.23585\n1970 Q2  9.20780 9.13058\n1970 Q3  9.55310 9.47121\n1970 Q4  9.89450 9.79333\n1971 Q1  8.98494 9.45001\n1971 Q2  9.72167 9.65538\n1971 Q3  9.79269 9.67808\n1971 Q4  9.78452 9.68191\n1972 Q1  9.32732 9.77723\n1972 Q2  9.87133 9.76534\n1972 Q3  9.89598 9.76884\n1972 Q4  9.82695 9.71229\n1973 Q1  9.31671 9.77707\n1973 Q2  9.88422 9.77881\n1973 Q3  9.93495 9.80413\n1973 Q4  9.85924 9.74537\n1974 Q1  9.38782 9.80290\n1974 Q2  9.81992 9.65787\n1974 Q3  9.60643 9.45394\n1974 Q4  9.33082 9.20672\n1975 Q1  8.71970 9.21726\n1975 Q2  9.64702 9.55117\n1975 Q3  9.81971 9.75250\n1975 Q4  9.93424 9.87231\n1976 Q1  9.41461 9.83747\n1976 Q2  9.94131 9.81890\n1976 Q3  9.83033 9.70402\n1976 Q4  9.81435 9.69841\n1977 Q1  9.21837 9.63670\n1977 Q2  9.85179 9.76964\n1977 Q3  9.85837 9.77676\n1977 Q4  9.82785 9.70147\n1978 Q1  9.51044 9.84956\n1978 Q2  9.62183 9.50405\n1978 Q3  9.66669 9.52819\n1978 Q4  9.62811 9.50549\n1979 Q1  9.07376 9.43615\n1979 Q2  9.52627 9.41328\n1979 Q3  9.51131 9.41373\n1979 Q4  9.59028 9.51147\n1980 Q1  8.94841 9.23936\n1980 Q2  9.23204 9.11021\n1980 Q3  9.33353 9.26256\n1980 Q4  9.42907 9.37326\n1981 Q1  8.92435 9.27774\n1981 Q2  9.68676 9.56373\n1981 Q3  9.49022 9.44123\n1981 Q4  9.27191 9.20978\n1982 Q1  9.07742 9.27800\n1982 Q2  9.09152 8.93882\n1982 Q3  8.85756 8.80070\n1982 Q4  9.23682 9.20978\n1983 Q1  8.96946 9.36639\n1983 Q2  9.74730 9.53403\n1983 Q3  9.19638 9.16430\n1983 Q4  9.20100 9.17010\n1984 Q1  8.87905 9.22441\n1984 Q2  9.29149 9.06499\n1984 Q3  9.22674 9.17874\n1984 Q4  9.07879 9.05499\n1985 Q1  8.85371 9.21533\n1985 Q2  9.48976 9.29932\n1985 Q3  9.45644 9.39659\n1985 Q4  9.50711 9.50673\n1986 Q1  9.06678 9.45263\n1986 Q2  9.76025 9.56119\n1986 Q3  9.66453 9.59579\n1986 Q4  9.62982 9.63142\n1987 Q1  9.45355 9.81024\n1987 Q2 10.02330 9.82192\n1987 Q3  9.91106 9.83895\n1987 Q4  9.70070 9.70470\n1988 Q1  9.28863 9.63996\n1988 Q2  9.88458 9.68554\n1988 Q3  9.74936 9.66689\n1988 Q4  9.65686 9.67826\n1989 Q1  9.38154 9.72698\n1989 Q2  9.80212 9.58075\n1989 Q3  9.68537 9.58420\n1989 Q4  9.62163 9.63633\n1990 Q1  9.39831 9.72549\n1990 Q2  9.75700 9.53303\n1990 Q3  9.36826 9.27253\n1990 Q4  9.12187 9.11481\n1991 Q1  8.55282 8.94173\n1991 Q2  9.46640 9.26625\n1991 Q3  9.47698 9.42029\n1991 Q4  9.40996 9.45372\n1992 Q1  8.95299 9.34526\n1992 Q2  9.59927 9.39728\n1992 Q3  9.46392 9.35131\n1992 Q4  9.33586 9.35203\n1993 Q1  8.84304 9.25701\n1993 Q2  9.48154 9.26283\n1993 Q3  9.39041 9.29626\n1993 Q4  9.33388 9.34307\n1994 Q1  8.84029 9.25595\n1994 Q2  9.55185 9.34914\n1994 Q3  9.37407 9.28447\n1994 Q4  9.17906 9.17988\n1995 Q1  8.63498 9.08692\n1995 Q2  9.09193 8.88837\n1995 Q3  8.98369 8.85881\n1995 Q4  8.90404 8.89373\n1996 Q1  8.43822 8.87019\n1996 Q2  9.24975 9.04389\n1996 Q3  9.21207 9.08345\n1996 Q4  9.09324 9.10529\n1997 Q1  8.80297 9.25462\n1997 Q2  9.42889 9.22276\n1997 Q3  9.35262 9.24205\n1997 Q4  9.25417 9.25462\n1998 Q1  8.86733 9.25383\n1998 Q2  9.37656 9.17874\n1998 Q3  9.24503 9.13837\n1998 Q4  9.17713 9.18701\n1999 Q1  8.84626 9.22960\n1999 Q2  9.44296 9.25754\n1999 Q3  9.36823 9.25754\n1999 Q4  9.31380 9.30993\n2000 Q1  8.95635 9.32119\n2000 Q2  9.41121 9.23503\n2000 Q3  9.42392 9.34623\n2000 Q4  9.33444 9.31969\n2001 Q1  9.02091 9.36211\n2001 Q2  9.54631 9.38849\n2001 Q3  9.43065 9.34502\n2001 Q4  9.44894 9.44277\n\nx &lt;- ts(Hstarts[,1],                \n        start = 1960,               # 시계열 시작 날짜\n        frequency = 4)              # 분기별 시계열로 1년에 4번 관측\n\npar(mfrow=c(3,1))                   # 3개의 그래프를 한 화면에 출력\n# 시계열 그림\nplot(x,\n     xlab = \"year\", ylab = \"log(starts)\",\n     type = \"l\",                    # 선으로 표시\n     main=\"(a)\")\n# 자기상관계수 그림\nacf(x,   \n    main = \"(b)\",\n    xlab = \"lag\")\n# 분기별 상자그림\nquart = rep(1:4, 42)                # 분기 \nboxplot(x ~ quart,\n        xlab = \"quarter\", ylab = \"log(starts)\",\n        main = \"(c)\")\nResult! (a) 그래프를 통해 해당 시계열은 계절성이 강하다는 것을 알 수 있다.\n(b) 그래프를 통해 4의 배수인 시차에서는 자기상관이 크며, 다른 시차에서는 천천히 0으로 감소한다는 것을 알 수 있다.\n(c) 그래프를 통해 해당 시계열의 관측값은 1분기에 가장 낮으며, 2분기에는 높다는 것을 알 수 있다.\npar(mfrow=c(3,2))                      # 한 행에 2개의 그래프를 출력 -&gt; 총 3개 행으로 6개의 그래프가 출력됨\nplot(diff(x),                          # 1번 차분한 시계열 그림\n     xlab = \"year\",\n     type = \"l\",\n     main = \"(a) nonseasonal differencing\")\nacf(diff(x),                           # 1번 차분한 시계열의 자기상관계수 그림\n    main = \"(b) nonseasonal differencing\",\n    xlab = \"lag\")\n\nplot(diff(x, lag = 4),                 # 주기 4만큼 계절 차분한 시계열 그림\n     type = \"l\",\n     xlab = \"year\",\n     main = \"(c) seasonal differencing\")\nacf(diff(x, lag = 4),                  # 계절 차분한 시계열의 자기상관계수 그림\n    main = \"(d) seasonal differencing\",\n    xlab = \"lag\")\n\nplot(diff(diff(x, diff = 1), lag = 4), # 1번 차분한 후 주기 4만큼 계절 차분한 시계열 그림\n     type = \"l\", \n     xlab = \"year\",\n     main = \"(e) seasonal & nonseasonal differencing\")\nacf(diff(diff(x, diff = 1), lag = 4),  # 1번 차분한 후 주기 4만큼 계절 차분한 시계열의 자기상관계수 그림\n    main = \"(f) seasonal & nonseasonal differencing\",\n    xlab = \"lag\")\nCaution! 함수 diff()를 이용하여 차분을 수행할 수 있다. \\(k\\)번 차분 \\(\\Delta^kY_{t}\\)을 수행하고 싶으면 옵션 diff = k를 입력하면 되고, 주기 \\(s\\)만큼 계절차분 \\(\\Delta_sY_{t}\\)을 수행하고 싶으면 옵션 lag = s를 입력하면 된다.\nResult! (a)와 (b) 그래프를 통해 1번 차분한 시계열은 계절성을 보이며, 높은 자기상관을 가진다는 것을 알 수 있다.\n(c)와 (d) 그래프를 통해 원 시계열에 계절차분을 수행함으로써 계절성이 제거된 것을 알 수 있다.\n(e)와 (f) 그래프를 통해 원 시계열에 계절차분과 차분을 동시에 수행함으로써 계절성이 제거되고 시간의 흐름에 따라 평균이 변하지 않는다는 것을 알 수 있다.",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Seasonal Autoregressive Integrated Moving Average Process</span>"
    ]
  },
  {
    "objectID": "SARIMA.html#hstarts-데이터셋",
    "href": "SARIMA.html#hstarts-데이터셋",
    "title": "6  Seasonal Autoregressive Integrated Moving Average Process",
    "section": "",
    "text": "6.1.1 SARIMA 모형\n\npacman::p_load(\"forecast\")\n\n# 1. ARIMA(1,1,1)(1,1,1)[4] 모형 구축\npacman::p_load(\"forecast\")\nfit1 &lt;- arima(x, \n              c(1,1,1),                            # ARIMA(p,d,q)                     \n              seasonal = list(order = c(1,1,1),    # 계절성(P,D,Q)\n                              period = 4))         # 주기 s\nfit1\n\n\nCall:\narima(x = x, order = c(1, 1, 1), seasonal = list(order = c(1, 1, 1), period = 4))\n\nCoefficients:\n         ar1      ma1     sar1     sma1\n      0.6883  -0.8819  -0.1550  -0.7659\ns.e.  0.2386   0.1875   0.0974   0.0812\n\nsigma^2 estimated as 0.02573:  log likelihood = 64.13,  aic = -118.27\n\n\nCaution! 함수 arima()의 옵션 seasonal을 이용하여 SARIMA 모형을 구축할 수 있다.\nResult! 모형 추정 결과에 의하면, 구축된 ARIMA(1,1,1)(1,1,1)[4] 모형은 \\((1-0.6883B)(1+0.1550B^4)(1-B)(1-B^4)Y_t=(1-0.8819B)(1-0.7659B^4)\\epsilon_t\\)이다.\n\n# 잔차를 이용한 모형 진단\nBox.test(residuals(fit1), lag = 10,\n         type = \"Ljung-Box\",\n         fitdf = 4)                                # 추정한 phi, Phi, theta, Theta 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(fit1)\nX-squared = 5.8219, df = 6, p-value = 0.4434\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(10)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0.4434이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 10까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(10)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 해당 시계열에 대해 ARIMA(1,1,1)(1,1,1)[4] 모형을 가정하는 것이 적절하다.\n\n# 2. ARIMA(1,1,1)(0,1,1)[4] 모형 구축\nfit2 &lt;- arima(x, \n              c(1,1,1),                            # ARIMA(p,d,q)                     \n              seasonal = list(order = c(0,1,1),    # 계절성(P,D,Q)\n                              period = 4))         # 주기 s\nfit2\n\n\nCall:\narima(x = x, order = c(1, 1, 1), seasonal = list(order = c(0, 1, 1), period = 4))\n\nCoefficients:\n         ar1      ma1     sma1\n      0.6748  -0.8901  -0.8220\ns.e.  0.1419   0.1046   0.0512\n\nsigma^2 estimated as 0.02609:  log likelihood = 62.91,  aic = -117.82\n\n\nResult! 모형 추정 결과에 의하면, 구축된 ARIMA(1,1,1)(0,1,1)[4] 모형은 \\((1-0.6748B)(1-B)(1-B^4)Y_t=(1-0.8901B)(1-0.8220B^4)\\epsilon_t\\)이다.\n\n# 잔차를 이용한 모형 진단\nBox.test(residuals(fit2), lag = 10,\n         type = \"Ljung-Box\",\n         fitdf = 3)                                # 추정한 phi, Phi, theta, Theta 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(fit2)\nX-squared = 8.45, df = 7, p-value = 0.2946\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(10)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0.2946이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 10까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(10)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 해당 시계열에 대해 ARIMA(1,1,1)(0,1,1)[4] 모형을 가정하는 것이 적절하다.\n\n\n6.1.2 예측\nSARIMA 모형에서 구축한 ARIMA(1,1,1)(0,1,1)[4] 모형과 ARIMA(1,1,1)(0,1,1)[4] 모형은 적절한 것으로 판단되나, 두 번째 모형이 첫 번째 모형보다 모수 개수가 적기 때문에 두 번째 모형이 더 합리적으로 보인다(모형의 간결성). 두 번째 모형을 이용한 예측은 다음 코드를 통해 수행된다.\n\n# 예측\npred &lt;- forecast(fit2, h = 16)             # 미래 16시점까지 예측\npred\n\n        Point Forecast    Lo 80     Hi 80    Lo 95     Hi 95\n2002 Q1       9.036139 8.829131  9.243147 8.719547  9.352730\n2002 Q2       9.581109 9.317976  9.844241 9.178683  9.983535\n2002 Q3       9.475528 9.180979  9.770076 9.025055  9.926000\n2002 Q4       9.395209 9.080061  9.710357 8.913232  9.877186\n2003 Q1       9.004073 8.661140  9.347006 8.479602  9.528544\n2003 Q2       9.563662 9.200980  9.926344 9.008988 10.118336\n2003 Q3       9.467946 9.089962  9.845930 8.889869 10.046022\n2003 Q4       9.394284 9.003641  9.784926 8.796847  9.991720\n2004 Q1       9.007639 8.595867  9.419411 8.377888  9.637390\n2004 Q2       9.570259 9.141715  9.998803 8.914858 10.225660\n2004 Q3       9.476588 9.033912  9.919264 8.799574 10.153602\n2004 Q4       9.404306 8.949180  9.859432 8.708250 10.100361\n2005 Q1       9.018593 8.542702  9.494484 8.290780  9.746405\n2005 Q2       9.581841 9.088848 10.074834 8.827873 10.335809\n2005 Q3       9.488594 8.980786  9.996402 8.711969 10.265219\n2005 Q4       9.416598 8.895471  9.937725 8.619603 10.213593\n\npar(mfrow=c(1,1)) \nplot(pred)",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Seasonal Autoregressive Integrated Moving Average Process</span>"
    ]
  },
  {
    "objectID": "SARIMA.html#airpassengers-데이터셋",
    "href": "SARIMA.html#airpassengers-데이터셋",
    "title": "6  Seasonal Autoregressive Integrated Moving Average Process",
    "section": "6.2 AirPassengers 데이터셋",
    "text": "6.2 AirPassengers 데이터셋\nR에서 제공하는 AirPassengers 데이터셋은 1949년 1월부터 1960년 12월까지 월별 비행기 탑승객 수가 기록되어져 있다.\n\n# 데이터 불러오기\ndata(\"AirPassengers\")\n\nAirPassengers\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n1949 112 118 132 129 121 135 148 148 136 119 104 118\n1950 115 126 141 135 125 149 170 170 158 133 114 140\n1951 145 150 178 163 172 178 199 199 184 162 146 166\n1952 171 180 193 181 183 218 230 242 209 191 172 194\n1953 196 196 236 235 229 243 264 272 237 211 180 201\n1954 204 188 235 227 234 264 302 293 259 229 203 229\n1955 242 233 267 269 270 315 364 347 312 274 237 278\n1956 284 277 317 313 318 374 413 405 355 306 271 306\n1957 315 301 356 348 355 422 465 467 404 347 305 336\n1958 340 318 362 348 363 435 491 505 404 359 310 337\n1959 360 342 406 396 420 472 548 559 463 407 362 405\n1960 417 391 419 461 472 535 622 606 508 461 390 432\n\n\n\n# 시계열 그림\nplot(AirPassengers)\n\n\n\n\n\n\n\n\nResult! 해당 시계열은 추세와 계절성을 모두 가지고 있는 비정상시계열임을 알 수 있다.\n\n# 자기상관계수 그림\nacf(AirPassengers)\n\n\n\n\n\n\n\n\nResult! 자기상관계수 ACF는 천천히 감소하므로 비정상시계열임을 알 수 있다.\n\npar(mfrow = c(2,1))                                 # 2개의 그래프를 한 화면에 출력\nplot(diff(diff(AirPassengers, diff = 1), lag = 12), # 1번 차분한 후 주기 12만큼 계절 차분한 시계열 그림\n     type = \"l\")\n\n# 자기상관계수 그림\nacf(diff(diff(AirPassengers, diff = 1), lag = 12))\n\n\n\n\n\n\n\n\nResult! 계절차분과 차분을 수행한 AirPassengers 시계열은 정상시계열로 보인다.\n\n6.2.1 SARIMA 모형\n\n# 1. ARIMA(1,1,1)(1,1,1)[12] 모형 구축\nfit &lt;- arima(AirPassengers, \n              c(1,1,1),                            # ARIMA(p,d,q)                     \n              seasonal = list(order = c(1,1,1),    # 계절성(P,D,Q)\n                              period = 12))        # 주기 s\nfit\n\n\nCall:\narima(x = AirPassengers, order = c(1, 1, 1), seasonal = list(order = c(1, 1, \n    1), period = 12))\n\nCoefficients:\n          ar1      ma1     sar1    sma1\n      -0.1387  -0.2027  -0.9228  0.8329\ns.e.   0.5860   0.6123   0.2386  0.3519\n\nsigma^2 estimated as 130.8:  log likelihood = -506.15,  aic = 1022.3\n\n\nResult! 모형 추정 결과에 의하면, 구축된 ARIMA(1,1,1)(0,1,1)[12] 모형은 \\((1+0.1387B)(1+0.9228B^{12})(1-B)(1-B^{12})Y_t=(1-0.2027B)(1+0.8329B^{12})\\epsilon_t\\)이다.\n\n# 잔차를 이용한 모형 진단\nBox.test(residuals(fit), lag = 10,\n         type = \"Ljung-Box\",\n         fitdf = 4)                                # 추정한 phi, Phi, theta, Theta 개수\n\n\n    Box-Ljung test\n\ndata:  residuals(fit)\nX-squared = 10.476, df = 6, p-value = 0.106\n\n\nResult! 귀무가설 \\(H_0 : \\rho(1)=\\rho(2)=\\cdots=\\rho(10)=0\\)에 대한 검정 결과에 따르면, \\(p\\)값이 0.106이므로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 귀무가설을 기각하지 못한다. 즉, 잔차에 대해 시차 10까지의 자기상관계수 \\(\\rho(1), \\rho(2), \\cdots, \\rho(10)\\) 중 유의한 자기상관계수가 적어도 1개 존재한다는 증거가 부족하며, 해당 시계열에 대해 ARIMA(1,1,1)(0,1,1)[12] 모형을 가정하는 것이 적절하다.\n\n\n6.2.2 예측\n\n# 예측\npred &lt;- forecast(fit, h = 48)                      # 미래 48시점까지 예측\npred\n\n         Point Forecast    Lo 80    Hi 80    Lo 95     Hi 95\nJan 1961       449.2223 434.5545 463.8901 426.7899  471.6547\nFeb 1961       424.3072 406.7452 441.8691 397.4485  451.1658\nMar 1961       459.0023 438.6160 479.3886 427.8241  490.1805\nApr 1961       497.7220 474.9011 520.5430 462.8204  532.6237\nMay 1961       509.7462 484.7209 534.7715 471.4733  548.0190\nJun 1961       568.1989 541.1491 595.2488 526.8297  609.5681\nJul 1961       655.7364 626.8032 684.6696 611.4868  699.9859\nAug 1961       641.1725 610.4712 671.8737 594.2190  688.1259\nSep 1961       546.3741 514.0013 578.7470 496.8642  595.8841\nOct 1961       496.7500 462.7878 530.7123 444.8092  548.6908\nNov 1961       427.6964 392.2158 463.1769 373.4335  481.9592\nDec 1961       471.2915 434.3550 508.2281 414.8019  527.7811\nJan 1962       484.9196 441.0846 528.7546 417.8797  551.9595\nFeb 1962       458.8334 411.0374 506.6295 385.7356  531.9312\nMar 1962       487.3741 435.6837 539.0644 408.3205  566.4277\nApr 1962       529.1175 473.8375 584.3975 444.5741  613.6609\nMay 1962       540.1970 481.5427 598.8514 450.4929  629.9012\nJun 1962       602.8458 541.0014 664.6902 508.2629  697.4286\nJul 1962       689.8873 625.0095 754.7651 590.6652  789.1094\nAug 1962       673.9982 606.2226 741.7738 570.3443  777.6521\nSep 1962       576.2455 505.6910 646.8000 468.3417  684.1493\nOct 1962       529.0428 455.8148 602.2708 417.0502  641.0354\nNov 1962       458.1931 382.3859 534.0004 342.2559  574.1303\nDec 1962       500.3163 422.0147 578.6180 380.5643  620.0683\nJan 1963       517.2610 431.8276 602.6945 386.6018  647.9203\nFeb 1963       492.2555 401.9707 582.5402 354.1768  630.3341\nMar 1963       526.4753 431.3724 621.5782 381.0279  671.9226\nApr 1963       565.4285 465.7688 665.0883 413.0121  717.8450\nMay 1963       577.3797 473.3587 681.4007 418.2933  736.4661\nJun 1963       636.1565 527.9505 744.3626 470.6696  801.6435\nJul 1963       723.6557 611.4204 835.8910 552.0066  895.3047\nAug 1963       708.9894 592.8647 825.1142 531.3919  886.5869\nSep 1963       613.9629 494.0748 733.8511 430.6099  797.3160\nOct 1963       564.5258 440.9889 688.0627 375.5924  753.4592\nNov 1963       495.3334 368.2525 622.4144 300.9799  689.6870\nDec 1963       538.8149 408.2861 669.3437 339.1883  738.4415\nJan 1964       552.6991 415.1965 690.2018 342.4069  762.9914\nFeb 1964       526.6965 383.8656 669.5273 308.2555  745.1374\nMar 1964       555.6757 407.5409 703.8105 329.1231  782.2284\nApr 1964       597.2036 443.9709 750.4363 362.8545  831.5528\nMay 1964       608.3505 450.1811 766.5198 366.4513  850.2496\nJun 1964       670.7002 507.7441 833.6563 421.4803  919.9201\nJul 1964       757.7771 590.1707 925.3834 501.4453 1014.1088\nAug 1964       741.9824 569.8515 914.1133 478.7309 1005.2339\nSep 1964       644.4402 467.9006 820.9798 374.4462  914.4342\nOct 1964       597.0650 416.2242 777.9058 320.4928  873.6371\nNov 1964       526.3433 341.3012 711.3854 243.3459  809.3408\nDec 1964       568.5714 379.4213 757.7215 279.2913  857.8515\n\npar(mfrow=c(1,1)) \nplot(pred)",
    "crumbs": [
      "Statistical Model",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Seasonal Autoregressive Integrated Moving Average Process</span>"
    ]
  },
  {
    "objectID": "Regression.html",
    "href": "Regression.html",
    "title": "7  Regression-based Forecasting",
    "section": "",
    "text": "7.1 Amtrak\n예제 데이터로 사용하는 \"Amtrak.csv\"은 1991년 1월부터 2004년 3월까지 미국 철도 회사인 암트랙에서 제공한 월간 승객 수(단위 : 1,000명)가 기록되어져 있다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression-based Forecasting</span>"
    ]
  },
  {
    "objectID": "Regression.html#amtrak",
    "href": "Regression.html#amtrak",
    "title": "7  Regression-based Forecasting",
    "section": "",
    "text": "7.1.1 데이터 불러오기\n\npacman::p_load(\"forecast\",\n               \"dplyr\")\n\nAmtrak.data &lt;- read.csv(\".../Amtrak.csv\")          # 데이터 불러오기\n\nAmtrak.data %&gt;%\n  as_tibble\n\n\n\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n\n\n\n\n7.1.2 데이터 전처리\nCaution! CSV 파일로 불러온 데이터를 살펴보면 승객 수를 포함하는 변수 Ridership가 수치형임을 알 수 있다. 시계열 데이터 분석을 위해 함수 ts()를 이용하여 해당 변수를 시계열 객체로 변환해야 한다.\n\n# ts로 변환\nridership.ts &lt;- ts(Amtrak.data$Ridership, \n                   start = c(1991, 1),            # 시계열의 시작 연도 / c(1991, 1) : 1991년 1월\n                   frequency = 12)                # 주기 / 월별 시계열로 1년에 12번 관측\n\n\n# 시계열 그림\nplot(ridership.ts, \n     xlab = \"Time\", ylab = \"Ridership (in 000s)\",\n     ylim = c(1300, 2300))\n\n\n\n\n\n\n\n\nResult! 시계열 그림을 살펴보면 Amtrak 데이터는 U자 형태의 추세를 발견할 수 있으며, 여름(7월과 8월) 동안에 승객이 급증하는 뚜렷한 계절변동도 볼 수 있다.\n\n\n7.1.3 데이터 분할\nCaution! 시계열 데이터 분석 시 모형의 과적합을 피하고 미래 데이터에 대한 예측력을 계산하기 위해 Training Dataset과 Test Dataset으로 분할해야 한다. 시계열 데이터의 경우, 시간에 의존하기 때문에 시간 순서를 고려하여 데이터를 분할해야 한다. 즉, 앞 시점의 데이터를 Training Dataset로 사용하여 모형을 구축하고, 뒷 시점의 데이터를 Test Dataset로 사용하여 구축된 모형의 성능을 평가한다. 여기서는 데이터 분할을 위해 함수 window()를 사용한다.\n\n# Partition \ntrain.ts &lt;- window(ridership.ts, \n                   start = c(1991, 1),            # 분할하고자 하는 시계열의 시작 연도 / c(1991, 1) : 1991년 1월\n                   end = c(2001, 3))              # 분할하고자 하는 시계열의 마지막 연도 / c(2001, 3) : 2001년 3월\ntest.ts &lt;- window(ridership.ts,\n                   start = c(2001, 4))            # 분할하고자 하는 시계열의 시작 연도 / c(2001, 4) : 2001년 4월\nnTest   &lt;- length(test.ts)                        # Test Dataset의 데이터 포인트 개수\n\n\ntrain.ts \n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n1991 1708.917 1620.586 1972.715 1811.665 1974.964 1862.356 1939.860 2013.264 1595.657 1724.924 1675.667 1813.863\n1992 1614.827 1557.088 1891.223 1955.981 1884.714 1623.042 1903.309 1996.712 1703.897 1810.000 1861.601 1875.122\n1993 1705.259 1618.535 1836.709 1957.043 1917.185 1882.398 1933.009 1996.167 1672.841 1752.827 1720.377 1734.292\n1994 1563.365 1573.959 1902.639 1833.888 1831.049 1775.755 1867.508 1906.608 1685.632 1778.546 1775.995 1783.350\n1995 1548.415 1496.925 1798.316 1732.895 1772.345 1761.207 1791.655 1874.820 1571.309 1646.948 1672.631 1656.845\n1996 1381.758 1360.852 1558.575 1608.420 1696.696 1693.183 1835.516 1942.573 1551.401 1686.508 1576.204 1700.433\n1997 1396.588 1371.690 1707.522 1654.604 1762.903 1775.800 1934.219 2008.055 1615.924 1773.910 1732.368 1796.626\n1998 1570.330 1412.691 1754.641 1824.932 1843.289 1825.964 1968.172 1921.645 1669.597 1791.474 1816.714 1846.754\n1999 1599.427 1548.804 1832.333 1839.720 1846.498 1864.852 1965.743 1949.002 1607.373 1803.664 1850.309 1836.435\n2000 1541.660 1616.928 1919.538 1971.493 1992.301 2009.763 2053.996 2097.471 1823.706 1976.997 1981.408 2000.153\n2001 1683.148 1663.404 2007.928                                                                                 \n\ntest.ts\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n2001                            2023.792 2047.008 2072.913 2126.717 2202.638 1707.693 1950.716 1973.614 1984.729\n2002 1759.629 1770.595 2019.912 2048.398 2068.763 1994.267 2075.258 2026.560 1734.155 1916.771 1858.345 1996.352\n2003 1778.033 1749.489 2066.466 2098.899 2104.911 2129.671 2223.349 2174.360 1931.406 2121.470 2076.054 2140.677\n2004 1831.508 1838.006 2132.446                                                                                 \n\nnTest\n\n[1] 36",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression-based Forecasting</span>"
    ]
  },
  {
    "objectID": "Regression.html#model-with-trend",
    "href": "Regression.html#model-with-trend",
    "title": "7  Regression-based Forecasting",
    "section": "7.2 Model with Trend",
    "text": "7.2 Model with Trend\n예제 데이터 Amtrak은 전반적인 추세가 선형인 것 같지 않지만 선형 추세가 어떻게 구축되는지 설명하기 위해서 먼저 가장 간단한 선형 추세를 고려해본다.\n\n\n7.2.1 선형 추세\n\n가장 간단한 선형추세모형은 \\(Y_{t}=\\beta_{0}+\\beta_{1}t+\\epsilon_t\\)이다.\n\n\\(Y_{t}\\) : 시점 \\(t\\)에서의 관측값\n\\(t\\) : 시간인덱스로써 \\(1, 2, \\ldots, n\\)\n\\(\\beta_{0}\\) : 수준(Level)\n\\(\\beta_{1}\\) : 추세(Trend)에 대한 회귀계수\n\\(\\epsilon_t\\) : 잡음(Noise)\n\n\n\nCaution! Package \"forecast\"에서 제공하는 함수 tslm()를 이용하여 쉽게 시계열에 회귀모형을 적용할 수 있다. 선형추세를 가지는 모형은 함수 tslm()에 Target ~ trend를 해주면 된다.\n\n# 선형 추세를 반영한 회귀모형\ntrain.lm  &lt;- tslm(train.ts ~ trend)\n\nsummary(train.lm)                                 # 모형 구축 결과\n\n\nCall:\ntslm(formula = train.ts ~ trend)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-411.29 -114.02   16.06  129.28  306.35 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 1750.3595    29.0729  60.206   &lt;2e-16 ***\ntrend          0.3514     0.4069   0.864     0.39    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 160.2 on 121 degrees of freedom\nMultiple R-squared:  0.006125,  Adjusted R-squared:  -0.002089 \nF-statistic: 0.7456 on 1 and 121 DF,  p-value: 0.3896\n\n\nResult! 모형 구축 결과에 따르면, \\(p\\)값이 0.3896으로 유의수준 0.05에서 \\(p\\)값이 0.05보다 크기 때문에 추정된 회귀식이 시계열에 적절하다는 증거가 부족하다.\nCaution! 구축된 모형을 이용하여 예측을 수행하기 위해 Package \"forecast\"에서 제공하는 함수 forecast()를 이용하면 된다. 옵션 h에는 미래 몇 시점까지 예측할 것인지를 입력한다.\n\n# 선형추세모형을 이용한 예측\ntrain.lm.pred &lt;- forecast(train.lm, \n                          h = nTest,             # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                          level = 0)             # 예측 구간은 계산 X\n\ntrain.lm.pred\n\n         Point Forecast     Lo 0     Hi 0\nApr 2001       1793.930 1793.930 1793.930\nMay 2001       1794.281 1794.281 1794.281\nJun 2001       1794.632 1794.632 1794.632\nJul 2001       1794.984 1794.984 1794.984\nAug 2001       1795.335 1795.335 1795.335\nSep 2001       1795.687 1795.687 1795.687\nOct 2001       1796.038 1796.038 1796.038\nNov 2001       1796.389 1796.389 1796.389\nDec 2001       1796.741 1796.741 1796.741\nJan 2002       1797.092 1797.092 1797.092\nFeb 2002       1797.443 1797.443 1797.443\nMar 2002       1797.795 1797.795 1797.795\nApr 2002       1798.146 1798.146 1798.146\nMay 2002       1798.498 1798.498 1798.498\nJun 2002       1798.849 1798.849 1798.849\nJul 2002       1799.200 1799.200 1799.200\nAug 2002       1799.552 1799.552 1799.552\nSep 2002       1799.903 1799.903 1799.903\nOct 2002       1800.254 1800.254 1800.254\nNov 2002       1800.606 1800.606 1800.606\nDec 2002       1800.957 1800.957 1800.957\nJan 2003       1801.308 1801.308 1801.308\nFeb 2003       1801.660 1801.660 1801.660\nMar 2003       1802.011 1802.011 1802.011\nApr 2003       1802.363 1802.363 1802.363\nMay 2003       1802.714 1802.714 1802.714\nJun 2003       1803.065 1803.065 1803.065\nJul 2003       1803.417 1803.417 1803.417\nAug 2003       1803.768 1803.768 1803.768\nSep 2003       1804.119 1804.119 1804.119\nOct 2003       1804.471 1804.471 1804.471\nNov 2003       1804.822 1804.822 1804.822\nDec 2003       1805.174 1805.174 1805.174\nJan 2004       1805.525 1805.525 1805.525\nFeb 2004       1805.876 1805.876 1805.876\nMar 2004       1806.228 1806.228 1806.228\n\n\n\npar(mfrow = c(2, 1))\n# 시계열 그림\nplot(train.lm.pred, \n     ylim = c(1300, 2600), xlim = c(1991, 2006.25), # 축 범위\n     ylab = \"Ridership\", xlab = \"Time\",             # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\",                                     # 제목 제거\n     flty = 2)                                      # 선 종류 / 2 : 점선\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# 구축된 모형을 이용하여 계산된 Training Dataset 데이터 포인트의 예측값 \nlines(train.lm.pred$fitted, \n      lwd = 2,                                      # 선 굵기\n      col = \"blue\")                                 # 선 색깔\n# Test Dataset 데이터 포인트  \nlines(test.ts)       \n\n\n# 잔차에 대한 시계열 그림\nplot(train.lm$residuals,                            # 잔차\n     ylim = c(-420, 500), xlim = c(1991, 2006.25),  # 축 범위\n     ylab = \"Residual\", xlab = \"Time\",              # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\")                                     # 제목 제거\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# Test Dataset 데이터 포인트에 대한 잔차 예측값\nlines(test.ts - train.lm.pred$mean)     \n\n\n\n\n\n\n\n\nResult! 첫 번째 그래프는 구축된 선형추세모형으로부터 계산된 Training Dataset의 데이터 포인트에 대한 값과 예측값을 파란색 선으로 나타내고 있으며, 검은색 선은 실제값을 의미한다. 두 번째 그래프는 잔차에 대한 그래프이다. 이 두 그래프를 보면 추정값과 예측값이 실제값과 얼마나 차이가 나는지 볼 수 있으며, 잔차 그래프를 보면 잔차에 여전히 추세와 계절성이 남아있다는 것을 알 수 있다.\n\n\n7.2.2 지수 추세\n\n지수 추세는 시간에 따라서 시계열이 지수적으로 증가/감소하며 비선형 추세의 형태 중 하나이다.\n모형식은 \\(\\log{Y_{t}}=\\beta_{0}+\\beta_{1}t+\\epsilon_ t\\)로 \\(Y_{t}=ce^{\\beta_{1}t+\\epsilon}\\)의 양변에 \\(\\log\\)를 취하여 비선형을 선형으로 변환하여 분석한다.\n\n\nCaution! 지수 추세를 반영하기 위해서는 함수 tslm()에서 옵션 lambda = 0을 입력하면 된다. 옵션 lambda는 Box-Cox 변환을 적용하는데 사용되며, lambda = 0이면 \\(\\log{Y_{t}}\\)를 이용한다. 예측의 경우, lambda = 0을 입력해도 자동으로 원래 Scale로 변환된 결과를 출력한다.\n\n# 지수 추세를 반영한 회귀모형\ntrain.lm.expo.trend      &lt;- tslm(train.ts ~ trend, \n                                 lambda = 0)\n\nsummary(train.lm.expo.trend)                                 # 모형 구축 결과\n\n\nCall:\ntslm(formula = train.ts ~ trend, lambda = 0)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.25989 -0.06184  0.01299  0.07457  0.16310 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 7.4646979  0.0168680 442.535   &lt;2e-16 ***\ntrend       0.0001783  0.0002361   0.755    0.451    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.09297 on 121 degrees of freedom\nMultiple R-squared:  0.004694,  Adjusted R-squared:  -0.003532 \nF-statistic: 0.5707 on 1 and 121 DF,  p-value: 0.4515\n\n\n\n# 지수추세모형을 이용한 예측\ntrain.lm.expo.trend.pred &lt;- forecast(train.lm.expo.trend, \n                                     h = nTest,             # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                                     level = 0)             # 예측 구간은 계산 X\n\ntrain.lm.expo.trend.pred\n\n         Point Forecast     Lo 0     Hi 0\nApr 2001       1784.356 1784.356 1784.356\nMay 2001       1784.674 1784.674 1784.674\nJun 2001       1784.993 1784.993 1784.993\nJul 2001       1785.311 1785.311 1785.311\nAug 2001       1785.629 1785.629 1785.629\nSep 2001       1785.948 1785.948 1785.948\nOct 2001       1786.266 1786.266 1786.266\nNov 2001       1786.585 1786.585 1786.585\nDec 2001       1786.904 1786.904 1786.904\nJan 2002       1787.222 1787.222 1787.222\nFeb 2002       1787.541 1787.541 1787.541\nMar 2002       1787.860 1787.860 1787.860\nApr 2002       1788.179 1788.179 1788.179\nMay 2002       1788.498 1788.498 1788.498\nJun 2002       1788.817 1788.817 1788.817\nJul 2002       1789.136 1789.136 1789.136\nAug 2002       1789.455 1789.455 1789.455\nSep 2002       1789.774 1789.774 1789.774\nOct 2002       1790.093 1790.093 1790.093\nNov 2002       1790.413 1790.413 1790.413\nDec 2002       1790.732 1790.732 1790.732\nJan 2003       1791.052 1791.052 1791.052\nFeb 2003       1791.371 1791.371 1791.371\nMar 2003       1791.690 1791.690 1791.690\nApr 2003       1792.010 1792.010 1792.010\nMay 2003       1792.330 1792.330 1792.330\nJun 2003       1792.649 1792.649 1792.649\nJul 2003       1792.969 1792.969 1792.969\nAug 2003       1793.289 1793.289 1793.289\nSep 2003       1793.609 1793.609 1793.609\nOct 2003       1793.929 1793.929 1793.929\nNov 2003       1794.249 1794.249 1794.249\nDec 2003       1794.569 1794.569 1794.569\nJan 2004       1794.889 1794.889 1794.889\nFeb 2004       1795.209 1795.209 1795.209\nMar 2004       1795.529 1795.529 1795.529\n\n\nResult! 예측값은 원래 Scale로 변환된 결과를 출력한다.\n\npar(mfrow = c(1, 1))\n# 시계열 그림\nplot(train.lm.expo.trend.pred, \n     ylim = c(1300, 2600), xlim = c(1991, 2006.25), # 축 범위\n     ylab = \"Ridership\", xlab = \"Time\",             # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\",                                     # 제목 제거\n     flty = 2)                                      # 선 종류 / 2 : 점선\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# 구축된 모형을 이용하여 계산된 Training Dataset 데이터 포인트의 예측값 \nlines(train.lm.expo.trend.pred$fitted, \n      lwd = 2,                                      # 선 굵기\n      col = \"blue\")                                 # 선 색깔\n# Test Dataset 데이터 포인트  \nlines(test.ts)       \n\n\n\n\n\n\n\n\n\n\n7.2.3 다항 추세\n\n다항 추세는 비선형 추세의 또 다른 형태이다.\n예제 데이터 Amtrak은 U자 형태의 추세를 가지므로 2차 함수 형태를 고려하였으며 모형식은 \\(Y_{t}=\\beta_{0}+\\beta_{1}t+\\beta_{2}t^2+\\epsilon_t\\)이다.\n\n\nCaution! 다항 추세를 반영하기 위해 함수 I()를 이용한다.\n\n# 다항 추세를 반영한 회귀모형\ntrain.lm.poly.trend      &lt;- tslm(train.ts ~ trend +  I(trend^2))\n\nsummary(train.lm.poly.trend)                                # 모형 구축 결과\n\n\nCall:\ntslm(formula = train.ts ~ trend + I(trend^2))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-344.79 -101.86   40.89   98.54  279.81 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 1888.88401   40.91521  46.166  &lt; 2e-16 ***\ntrend         -6.29780    1.52327  -4.134 6.63e-05 ***\nI(trend^2)     0.05362    0.01190   4.506 1.55e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 148.8 on 120 degrees of freedom\nMultiple R-squared:  0.1499,    Adjusted R-squared:  0.1358 \nF-statistic: 10.58 on 2 and 120 DF,  p-value: 5.844e-05\n\n\n\n# 다항추세모형을 이용한 예측\ntrain.lm.poly.trend.pred &lt;- forecast(train.lm.poly.trend, \n                                     h = nTest,             # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                                     level = 0)             # 예측 구간은 계산 X\n\ntrain.lm.poly.trend.pred\n\n         Point Forecast     Lo 0     Hi 0\nApr 2001       1932.454 1932.454 1932.454\nMay 2001       1939.508 1939.508 1939.508\nJun 2001       1946.670 1946.670 1946.670\nJul 2001       1953.938 1953.938 1953.938\nAug 2001       1961.314 1961.314 1961.314\nSep 2001       1968.797 1968.797 1968.797\nOct 2001       1976.388 1976.388 1976.388\nNov 2001       1984.085 1984.085 1984.085\nDec 2001       1991.890 1991.890 1991.890\nJan 2002       1999.803 1999.803 1999.803\nFeb 2002       2007.822 2007.822 2007.822\nMar 2002       2015.949 2015.949 2015.949\nApr 2002       2024.182 2024.182 2024.182\nMay 2002       2032.523 2032.523 2032.523\nJun 2002       2040.972 2040.972 2040.972\nJul 2002       2049.527 2049.527 2049.527\nAug 2002       2058.190 2058.190 2058.190\nSep 2002       2066.960 2066.960 2066.960\nOct 2002       2075.838 2075.838 2075.838\nNov 2002       2084.822 2084.822 2084.822\nDec 2002       2093.914 2093.914 2093.914\nJan 2003       2103.113 2103.113 2103.113\nFeb 2003       2112.419 2112.419 2112.419\nMar 2003       2121.833 2121.833 2121.833\nApr 2003       2131.354 2131.354 2131.354\nMay 2003       2140.982 2140.982 2140.982\nJun 2003       2150.717 2150.717 2150.717\nJul 2003       2160.560 2160.560 2160.560\nAug 2003       2170.509 2170.509 2170.509\nSep 2003       2180.566 2180.566 2180.566\nOct 2003       2190.731 2190.731 2190.731\nNov 2003       2201.002 2201.002 2201.002\nDec 2003       2211.381 2211.381 2211.381\nJan 2004       2221.867 2221.867 2221.867\nFeb 2004       2232.460 2232.460 2232.460\nMar 2004       2243.161 2243.161 2243.161\n\n\n\npar(mfrow = c(2, 1))\n# 시계열 그림\nplot(train.lm.poly.trend.pred, \n     ylim = c(1300, 2600), xlim = c(1991, 2006.25), # 축 범위\n     ylab = \"Ridership\", xlab = \"Time\",             # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\",                                     # 제목 제거\n     flty = 2)                                      # 선 종류 / 2 : 점선\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# 구축된 모형을 이용하여 계산된 Training Dataset 데이터 포인트의 예측값 \nlines(train.lm.poly.trend.pred$fitted, \n      lwd = 2,                                      # 선 굵기\n      col = \"blue\")                                 # 선 색깔\n# Test Dataset 데이터 포인트  \nlines(test.ts)       \n\n\n# 잔차에 대한 시계열 그림\nplot(train.lm.poly.trend$residuals,                 # 잔차\n     ylim = c(-420, 500), xlim = c(1991, 2006.25),  # 축 범위\n     ylab = \"Residual\", xlab = \"Time\",              # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\")                                     # 제목 제거\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# Test Dataset 데이터 포인트에 대한 잔차 예측값\nlines(test.ts - train.lm.poly.trend.pred$mean)     \n\n\n\n\n\n\n\n\nResult! 첫 번째 그래프를 보면 앞선 선형 추세와 지수 추세보다 추세를 잘 잡아내고 있다는 것을 알 수 있다. 게다가, 두 번째 그래프를 보면 잔차에 대해 추세는 없으며 오직 계절성만 존재한다는 것을 알 수 있다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression-based Forecasting</span>"
    ]
  },
  {
    "objectID": "Regression.html#model-with-seasonality",
    "href": "Regression.html#model-with-seasonality",
    "title": "7  Regression-based Forecasting",
    "section": "7.3 Model with Seasonality",
    "text": "7.3 Model with Seasonality\n\n계절 패턴은 시계열 패턴이 동일한 형태로 반복되는 현상을 의미한다.\n계절성만 가지는 모형은 함수 tslm()에 Target ~ season을 입력하면 된다.\n\n변수 season은 “0”과 “1” 값을 가지는 더미변수로 자동적으로 변환된다.\n예를 들어, 예제 데이터 Amtrak은 변수 Season에 12개의 계절을 가지며, 분석을 위해 11개의 더미변수가 생성된다.\n\n\n\n\n\n\n7.3.1 Additive 계절성\n\ntrain.lm.season      &lt;- tslm(train.ts ~  season)     # 참조변수 = Season 1\n\nsummary(train.lm.season)                             # 모형 구축 결과\n\n\nCall:\ntslm(formula = train.ts ~ season)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-276.165  -52.934    5.868   54.544  215.081 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  1573.97      30.58  51.475  &lt; 2e-16 ***\nseason2       -42.93      43.24  -0.993   0.3230    \nseason3       260.77      43.24   6.030 2.19e-08 ***\nseason4       245.09      44.31   5.531 2.14e-07 ***\nseason5       278.22      44.31   6.279 6.81e-09 ***\nseason6       233.46      44.31   5.269 6.82e-07 ***\nseason7       345.33      44.31   7.793 3.79e-12 ***\nseason8       396.66      44.31   8.952 9.19e-15 ***\nseason9        75.76      44.31   1.710   0.0901 .  \nseason10      200.61      44.31   4.527 1.51e-05 ***\nseason11      192.36      44.31   4.341 3.14e-05 ***\nseason12      230.42      44.31   5.200 9.18e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 101.4 on 111 degrees of freedom\nMultiple R-squared:  0.6348,    Adjusted R-squared:  0.5986 \nF-statistic: 17.54 on 11 and 111 DF,  p-value: &lt; 2.2e-16\n\n\nResult! season8의 회귀계수는 396.66으로 8월의 평균 승객 수는 1월의 평균 승객 수보다 396.66배 높다.\n\n# 계절변동을 반영한 회귀모형을 이용한 예측\ntrain.lm.season.pred &lt;- forecast(train.lm.season, \n                                 h = nTest,          # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                                 level = 0)          # 예측 구간은 계산 X\n\ntrain.lm.season.pred\n\n         Point Forecast     Lo 0     Hi 0\nApr 2001       1819.064 1819.064 1819.064\nMay 2001       1852.194 1852.194 1852.194\nJun 2001       1807.432 1807.432 1807.432\nJul 2001       1919.299 1919.299 1919.299\nAug 2001       1970.632 1970.632 1970.632\nSep 2001       1649.734 1649.734 1649.734\nOct 2001       1774.580 1774.580 1774.580\nNov 2001       1766.327 1766.327 1766.327\nDec 2001       1804.387 1804.387 1804.387\nJan 2002       1573.972 1573.972 1573.972\nFeb 2002       1531.042 1531.042 1531.042\nMar 2002       1834.740 1834.740 1834.740\nApr 2002       1819.064 1819.064 1819.064\nMay 2002       1852.194 1852.194 1852.194\nJun 2002       1807.432 1807.432 1807.432\nJul 2002       1919.299 1919.299 1919.299\nAug 2002       1970.632 1970.632 1970.632\nSep 2002       1649.734 1649.734 1649.734\nOct 2002       1774.580 1774.580 1774.580\nNov 2002       1766.327 1766.327 1766.327\nDec 2002       1804.387 1804.387 1804.387\nJan 2003       1573.972 1573.972 1573.972\nFeb 2003       1531.042 1531.042 1531.042\nMar 2003       1834.740 1834.740 1834.740\nApr 2003       1819.064 1819.064 1819.064\nMay 2003       1852.194 1852.194 1852.194\nJun 2003       1807.432 1807.432 1807.432\nJul 2003       1919.299 1919.299 1919.299\nAug 2003       1970.632 1970.632 1970.632\nSep 2003       1649.734 1649.734 1649.734\nOct 2003       1774.580 1774.580 1774.580\nNov 2003       1766.327 1766.327 1766.327\nDec 2003       1804.387 1804.387 1804.387\nJan 2004       1573.972 1573.972 1573.972\nFeb 2004       1531.042 1531.042 1531.042\nMar 2004       1834.740 1834.740 1834.740\n\n\n\npar(mfrow = c(2, 1))\n# 시계열 그림\nplot(train.lm.season.pred, \n     ylim = c(1300, 2600), xlim = c(1991, 2006.25), # 축 범위\n     ylab = \"Ridership\", xlab = \"Time\",             # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\",                                     # 제목 제거\n     flty = 2)                                      # 선 종류 / 2 : 점선\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# 구축된 모형을 이용하여 계산된 Training Dataset 데이터 포인트의 예측값 \nlines(train.lm.season.pred$fitted, \n      lwd = 2,                                      # 선 굵기\n      col = \"blue\")                                 # 선 색깔\n# Test Dataset 데이터 포인트  \nlines(test.ts)       \n\n\n# 잔차에 대한 시계열 그림\nplot(train.lm.season$residuals,                     # 잔차\n     ylim = c(-420, 500), xlim = c(1991, 2006.25),  # 축 범위\n     ylab = \"Residual\", xlab = \"Time\",              # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\")                                     # 제목 제거\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# Test Dataset 데이터 포인트에 대한 잔차 예측값\nlines(test.ts - train.lm.season.pred$mean)  \n\n\n\n\n\n\n\n\nResult! 두 번째 그래프를 보면 잔차에 대해 계절변동은 제거되었지만 추세는 여전히 U자 형태로 남아있음을 알 수 있다.\n\n\n7.3.2 Multiplicative 계절성\n\n회귀모형을 통하여 특정 월이 기준 월에 비해 몇 % 증가(혹은 감소)했는지와 같은 비율을 알아보기 위해서는 계절변동의 곱을 반영하는 모형을 이용해야 한다.\n계절변동의 곱을 반영하는 회귀모형의 구축방법은 Target을 \\(\\log{Y_t}\\)로 사용하는 점을 제외하고는 Additive 계절성 방법과 동일하다.\n\n이를 구현하기 위해 함수 tslm()에서 옵션 lambda = 0을 입력한다.\n\n\n\ntrain.expo.lm.season      &lt;- tslm(train.ts ~  season, \n                                  lambda = 0)\n\nsummary(train.expo.lm.season)                       # 모형 구축 결과            \n\n\nCall:\ntslm(formula = train.ts ~ season, lambda = 0)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.160824 -0.029798  0.005386  0.032081  0.116843 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  7.35909    0.01765 416.839  &lt; 2e-16 ***\nseason2     -0.02764    0.02497  -1.107   0.2706    \nseason3      0.15326    0.02497   6.138 1.32e-08 ***\nseason4      0.14482    0.02558   5.661 1.20e-07 ***\nseason5      0.16388    0.02558   6.405 3.73e-09 ***\nseason6      0.13897    0.02558   5.432 3.33e-07 ***\nseason7      0.19994    0.02558   7.815 3.38e-12 ***\nseason8      0.22654    0.02558   8.855 1.53e-14 ***\nseason9      0.04825    0.02558   1.886   0.0619 .  \nseason10     0.12114    0.02558   4.735 6.52e-06 ***\nseason11     0.11563    0.02558   4.520 1.56e-05 ***\nseason12     0.13760    0.02558   5.379 4.21e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.05855 on 111 degrees of freedom\nMultiple R-squared:  0.6378,    Adjusted R-squared:  0.6019 \nF-statistic: 17.77 on 11 and 111 DF,  p-value: &lt; 2.2e-16\n\n\n\n# Multiplicative 계절변동을 반영한 회귀모형을 이용한 예측\ntrain.expo.lm.season.pred &lt;- forecast(train.expo.lm.season, \n                                      h = nTest,    # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                                      level = 0)    # 예측 구간은 계산 X\n\ntrain.expo.lm.season.pred\n\n         Point Forecast     Lo 0     Hi 0\nApr 2001       1815.129 1815.129 1815.129\nMay 2001       1850.055 1850.055 1850.055\nJun 2001       1804.545 1804.545 1804.545\nJul 2001       1917.999 1917.999 1917.999\nAug 2001       1969.685 1969.685 1969.685\nSep 2001       1648.045 1648.045 1648.045\nOct 2001       1772.648 1772.648 1772.648\nNov 2001       1762.908 1762.908 1762.908\nDec 2001       1802.080 1802.080 1802.080\nJan 2002       1570.413 1570.413 1570.413\nFeb 2002       1527.598 1527.598 1527.598\nMar 2002       1830.513 1830.513 1830.513\nApr 2002       1815.129 1815.129 1815.129\nMay 2002       1850.055 1850.055 1850.055\nJun 2002       1804.545 1804.545 1804.545\nJul 2002       1917.999 1917.999 1917.999\nAug 2002       1969.685 1969.685 1969.685\nSep 2002       1648.045 1648.045 1648.045\nOct 2002       1772.648 1772.648 1772.648\nNov 2002       1762.908 1762.908 1762.908\nDec 2002       1802.080 1802.080 1802.080\nJan 2003       1570.413 1570.413 1570.413\nFeb 2003       1527.598 1527.598 1527.598\nMar 2003       1830.513 1830.513 1830.513\nApr 2003       1815.129 1815.129 1815.129\nMay 2003       1850.055 1850.055 1850.055\nJun 2003       1804.545 1804.545 1804.545\nJul 2003       1917.999 1917.999 1917.999\nAug 2003       1969.685 1969.685 1969.685\nSep 2003       1648.045 1648.045 1648.045\nOct 2003       1772.648 1772.648 1772.648\nNov 2003       1762.908 1762.908 1762.908\nDec 2003       1802.080 1802.080 1802.080\nJan 2004       1570.413 1570.413 1570.413\nFeb 2004       1527.598 1527.598 1527.598\nMar 2004       1830.513 1830.513 1830.513\n\n\n\npar(mfrow = c(1, 1))\n# 시계열 그림\nplot(train.expo.lm.season.pred, \n     ylim = c(1300, 2600), xlim = c(1991, 2006.25), # 축 범위\n     ylab = \"Ridership\", xlab = \"Time\",             # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\",                                     # 제목 제거\n     flty = 2)                                      # 선 종류 / 2 : 점선\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# 구축된 모형을 이용하여 계산된 Training Dataset 데이터 포인트의 예측값 \nlines(train.expo.lm.season.pred$fitted, \n      lwd = 2,                                      # 선 굵기\n      col = \"blue\")                                 # 선 색깔\n# Test Dataset 데이터 포인트  \nlines(test.ts)",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression-based Forecasting</span>"
    ]
  },
  {
    "objectID": "Regression.html#model-with-trend-and-seasonality",
    "href": "Regression.html#model-with-trend-and-seasonality",
    "title": "7  Regression-based Forecasting",
    "section": "7.4 Model with Trend and Seasonality",
    "text": "7.4 Model with Trend and Seasonality\n\n추세와 계절변동을 동시에 가지는 시계열 모형은 함수 tslm()에서 옵션 Target ~ trend + season을 입력하면 된다.\n예제 데이터 Amtrak은 U자 형태의 추세를 가지므로 이차 함수 추세와 계절변동을 동시에 반영하는 모형을 구축한다.\n\n\n# 이차 함수 추세와 계절변동을 동시에 반영하는 모형 구축\ntrain.lm.trend.season      &lt;- tslm(train.ts ~ trend + I(trend^2) + season)\n\nsummary(train.lm.trend.season)                      # 모형 구축 결과\n\n\nCall:\ntslm(formula = train.ts ~ trend + I(trend^2) + season)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-213.775  -39.363    9.711   42.422  152.187 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  1.697e+03  2.768e+01  61.318  &lt; 2e-16 ***\ntrend       -7.156e+00  7.293e-01  -9.812  &lt; 2e-16 ***\nI(trend^2)   6.074e-02  5.698e-03  10.660  &lt; 2e-16 ***\nseason2     -4.325e+01  3.024e+01  -1.430  0.15556    \nseason3      2.600e+02  3.024e+01   8.598 6.60e-14 ***\nseason4      2.606e+02  3.102e+01   8.401 1.83e-13 ***\nseason5      2.938e+02  3.102e+01   9.471 6.89e-16 ***\nseason6      2.490e+02  3.102e+01   8.026 1.26e-12 ***\nseason7      3.606e+02  3.102e+01  11.626  &lt; 2e-16 ***\nseason8      4.117e+02  3.102e+01  13.270  &lt; 2e-16 ***\nseason9      9.032e+01  3.102e+01   2.911  0.00437 ** \nseason10     2.146e+02  3.102e+01   6.917 3.29e-10 ***\nseason11     2.057e+02  3.103e+01   6.629 1.34e-09 ***\nseason12     2.429e+02  3.103e+01   7.829 3.44e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 70.92 on 109 degrees of freedom\nMultiple R-squared:  0.8246,    Adjusted R-squared:  0.8037 \nF-statistic: 39.42 on 13 and 109 DF,  p-value: &lt; 2.2e-16\n\n\n\n# 이차 함수 추세와 계절변동을 동시에 반영한 모형을 이용한 예측\ntrain.lm.trend.season.pred &lt;- forecast(train.lm.trend.season, \n                                       h = nTest,   # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                                       level = 0)   # 예측 구간은 계산 X\n\ntrain.lm.trend.season.pred\n\n         Point Forecast     Lo 0     Hi 0\nApr 2001       2004.271 2004.271 2004.271\nMay 2001       2045.419 2045.419 2045.419\nJun 2001       2008.675 2008.675 2008.675\nJul 2001       2128.560 2128.560 2128.560\nAug 2001       2187.911 2187.911 2187.911\nSep 2001       1875.032 1875.032 1875.032\nOct 2001       2007.896 2007.896 2007.896\nNov 2001       2007.662 2007.662 2007.662\nDec 2001       2053.740 2053.740 2053.740\nJan 2002       1819.752 1819.752 1819.752\nFeb 2002       1785.569 1785.569 1785.569\nMar 2002       2098.014 2098.014 2098.014\nApr 2002       2107.922 2107.922 2107.922\nMay 2002       2150.528 2150.528 2150.528\nJun 2002       2115.242 2115.242 2115.242\nJul 2002       2236.585 2236.585 2236.585\nAug 2002       2297.394 2297.394 2297.394\nSep 2002       1985.972 1985.972 1985.972\nOct 2002       2120.294 2120.294 2120.294\nNov 2002       2121.518 2121.518 2121.518\nDec 2002       2169.054 2169.054 2169.054\nJan 2003       1936.523 1936.523 1936.523\nFeb 2003       1903.798 1903.798 1903.798\nMar 2003       2217.701 2217.701 2217.701\nApr 2003       2229.067 2229.067 2229.067\nMay 2003       2273.131 2273.131 2273.131\nJun 2003       2239.303 2239.303 2239.303\nJul 2003       2362.104 2362.104 2362.104\nAug 2003       2424.371 2424.371 2424.371\nSep 2003       2114.406 2114.406 2114.406\nOct 2003       2250.186 2250.186 2250.186\nNov 2003       2252.868 2252.868 2252.868\nDec 2003       2301.862 2301.862 2301.862\nJan 2004       2070.789 2070.789 2070.789\nFeb 2004       2039.522 2039.522 2039.522\nMar 2004       2354.883 2354.883 2354.883\n\n\n\npar(mfrow = c(2, 1))\n# 시계열 그림\nplot(train.lm.trend.season.pred, \n     ylim = c(1300, 2600), xlim = c(1991, 2006.25), # 축 범위\n     ylab = \"Ridership\", xlab = \"Time\",             # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\",                                     # 제목 제거\n     flty = 2)                                      # 선 종류 / 2 : 점선\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# 구축된 모형을 이용하여 계산된 Training Dataset 데이터 포인트의 예측값 \nlines(train.lm.trend.season.pred$fitted, \n      lwd = 2,                                      # 선 굵기\n      col = \"blue\")                                 # 선 색깔\n# Test Dataset 데이터 포인트  \nlines(test.ts)       \n\n\n# 잔차에 대한 시계열 그림\nplot(train.lm.trend.season$residuals,               # 잔차\n     ylim = c(-420, 500), xlim = c(1991, 2006.25),  # 축 범위\n     ylab = \"Residual\", xlab = \"Time\",              # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\")                                     # 제목 제거\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# Test Dataset 데이터 포인트에 대한 잔차 예측값\nlines(test.ts - train.lm.trend.season.pred$mean) \n\n\n\n\n\n\n\n\nResult! 첫 번째 그래프를 보면 모형 구축과 예측이 잘 된 것을 알 수 있으며, 두 번째 그래프를 통해 잔차의 추세와 계절성이 모두 제거된 것을 알 수 있다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression-based Forecasting</span>"
    ]
  },
  {
    "objectID": "Regression.html#autocorrelation-and-arima-model",
    "href": "Regression.html#autocorrelation-and-arima-model",
    "title": "7  Regression-based Forecasting",
    "section": "7.5 Autocorrelation and ARIMA Model",
    "text": "7.5 Autocorrelation and ARIMA Model\n\n7.5.1 Autocorrelation\n\n전통적인 회귀모형은 관측값 간에 서로 독립을 가정한다.\n하지만 시계열 관측값들은 대부분 서로 상관관계(자기상관관계)를 가지고 있다.\n\n자기상관관계를 활용하면 보다 더 정확한 예측을 할 수 있다.\n\n\n\n\n\n\n\n자기상관은 현재 시점(\\(t\\))과 미래의 하나 또는 그 이상의 시점(\\(t+k\\), \\(k\\)&gt;0)에서 관측된 시계열들의 상관관계를 의미한다.\n\n\\(k&gt;1\\)에 대하여, 강한 자기상관은 전형적인 주기변동을 의미한다.\n\n예를 들어, 월별로 구성된 시계열에서 시차 12일 때 강한 양의 자기상관은 12개월을 주기로 비슷한 패턴이 반복됨을 의미한다.\n\n\\(k=1\\)에 대하여, 강한 양의 상관은 강한 선형추세를 의미한다.\n\\(k=1\\)에 대하여, 강한 음의 상관은 강한 스윙을 의미한다.\n\n자기 상관은 계절성 패턴을 파악하는 데 유용하며 함수 Acf() 함수를 자기상관계수 그래프를 출력할 수 있다.\n\n\nAcf(train.ts,\n    lag.max = 12, \n    main = \"\")\n\n\n\n\n\n\n\n\nResult! 예제 데이터 Amtrak의 자기상관계수 그래프를 보면 시차 6에서 강한 음의 자기상관을 보여준다. 즉, 6개월 단위로 높아지다가 낮아지는 것을 의미한다. (여름에는 높고 겨울에는 낮음을 의미)\n\n7.5.1.1 잔차의 자기상관\n\n추가적으로 잔차의 자기상관을 살펴보는 것도 매우 유용하다.\n\n잔차는 백색잡음과정(white noise)을 가정하기 때문에 독립이어야한다.\n즉, 잔차의 자기상관계수 그래프는 막대가 모두 선 안에 있어야한다.\n\n예를 들어 계절성이 잘 모형화되었다면, 잔차는 주기에서 자기상관이 0이다. 즉, 막대가 선 안에 있다.\n\n\n다음 그래프는 이차 함수 추세와 계절변동을 반영한 회귀모형의 잔차의 자기상관계수 그래프이다.\n\n\nAcf(train.lm.trend.season$residuals, \n    lag.max = 12,\n    main = \"\")\n\n\n\n\n\n\n\n\nResult! 계절변동이 있는 시계열을 잘 모형화했기 때문에 주기인 12에서 막대가 선 안에 있다. 이는 시차 12에서 자기상관계수는 통계적으로 유의하다는 증거가 부족함을 의미한다. 그러나 시차 1에서 강한 양의 자기상관을 보이며 전반적으로 자기상관계수는 지수적으로 감소하는 것을 알 수 있다.\n\n\n\n7.5.2 잔차에 대한 2차 예측모형 구축\n\n잔차에 예측모형을 구축함으로써 짧은 기간에 대한 예측을 향상시킬 수 있으며, 그 절차는 다음과 같다.\n\n회귀모형을 이용하여 미래 \\(k\\)시점의 예측값(\\(F_{t+k}\\))을 생성한다.\nAR 모형 또는 다른 모형을 이용하여 미래 \\(k\\)시점의 잔차에 대한 예측값(\\(E_{t+k}\\))을 생성한다.\n예측모형을 이용하여 구한 예측값과 잔차에 대한 예측값을 더하여 향상된 예측값(\\(F_{t+k}+E_{t+k}\\))을 얻는다.\n\n예제 데이터 Amtrak은 잔차의 자기상관이 시차 1에서 강한 양의 자기상관을 보이며 지수적으로 감소하기에 잔차에 AR(1) 모형을 구축할 수 있다.\n\n잔차에 대한 AR(1) 모형식은 \\(E_{t}=\\beta_{0}+\\beta_{1}E_{t-1}+\\epsilon_t\\)이다.\n\n\\(E_{t}\\) : 시점 \\(t\\)에서 잔차\n\n일반적으로 AR(1) 모형을 구축하기 위해서 시계열은 정상성을 만족해야 하지만, 잔차는 백색잡음과정을 가정하기 때문에 자기상관 외에 어떠한 추세나 주기적 행동을 포함하지 않아 정상성 확인이 따로 필요하지 않는다.\n\n\n\n# 1. 추세와 계절변동을 반영하는 회귀모형을 이용한 모형 구축\ntrain.lm.trend.season &lt;- tslm(train.ts ~ trend + I(trend^2) + season)    \n\nsummary(train.lm.trend.season)                      # 모형 구축 결과\n\n\nCall:\ntslm(formula = train.ts ~ trend + I(trend^2) + season)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-213.775  -39.363    9.711   42.422  152.187 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  1.697e+03  2.768e+01  61.318  &lt; 2e-16 ***\ntrend       -7.156e+00  7.293e-01  -9.812  &lt; 2e-16 ***\nI(trend^2)   6.074e-02  5.698e-03  10.660  &lt; 2e-16 ***\nseason2     -4.325e+01  3.024e+01  -1.430  0.15556    \nseason3      2.600e+02  3.024e+01   8.598 6.60e-14 ***\nseason4      2.606e+02  3.102e+01   8.401 1.83e-13 ***\nseason5      2.938e+02  3.102e+01   9.471 6.89e-16 ***\nseason6      2.490e+02  3.102e+01   8.026 1.26e-12 ***\nseason7      3.606e+02  3.102e+01  11.626  &lt; 2e-16 ***\nseason8      4.117e+02  3.102e+01  13.270  &lt; 2e-16 ***\nseason9      9.032e+01  3.102e+01   2.911  0.00437 ** \nseason10     2.146e+02  3.102e+01   6.917 3.29e-10 ***\nseason11     2.057e+02  3.103e+01   6.629 1.34e-09 ***\nseason12     2.429e+02  3.103e+01   7.829 3.44e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 70.92 on 109 degrees of freedom\nMultiple R-squared:  0.8246,    Adjusted R-squared:  0.8037 \nF-statistic: 39.42 on 13 and 109 DF,  p-value: &lt; 2.2e-16\n\n\n\n# 1-1. 회귀모형을 이용한 미래 k시점에 대한 예측값\ntrain.lm.trend.season.pred &lt;- forecast(train.lm.trend.season, \n                                       h = nTest,   # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                                       level = 0)   # 예측 구간은 계산 X\n\ntrain.lm.trend.season.pred\n\n         Point Forecast     Lo 0     Hi 0\nApr 2001       2004.271 2004.271 2004.271\nMay 2001       2045.419 2045.419 2045.419\nJun 2001       2008.675 2008.675 2008.675\nJul 2001       2128.560 2128.560 2128.560\nAug 2001       2187.911 2187.911 2187.911\nSep 2001       1875.032 1875.032 1875.032\nOct 2001       2007.896 2007.896 2007.896\nNov 2001       2007.662 2007.662 2007.662\nDec 2001       2053.740 2053.740 2053.740\nJan 2002       1819.752 1819.752 1819.752\nFeb 2002       1785.569 1785.569 1785.569\nMar 2002       2098.014 2098.014 2098.014\nApr 2002       2107.922 2107.922 2107.922\nMay 2002       2150.528 2150.528 2150.528\nJun 2002       2115.242 2115.242 2115.242\nJul 2002       2236.585 2236.585 2236.585\nAug 2002       2297.394 2297.394 2297.394\nSep 2002       1985.972 1985.972 1985.972\nOct 2002       2120.294 2120.294 2120.294\nNov 2002       2121.518 2121.518 2121.518\nDec 2002       2169.054 2169.054 2169.054\nJan 2003       1936.523 1936.523 1936.523\nFeb 2003       1903.798 1903.798 1903.798\nMar 2003       2217.701 2217.701 2217.701\nApr 2003       2229.067 2229.067 2229.067\nMay 2003       2273.131 2273.131 2273.131\nJun 2003       2239.303 2239.303 2239.303\nJul 2003       2362.104 2362.104 2362.104\nAug 2003       2424.371 2424.371 2424.371\nSep 2003       2114.406 2114.406 2114.406\nOct 2003       2250.186 2250.186 2250.186\nNov 2003       2252.868 2252.868 2252.868\nDec 2003       2301.862 2301.862 2301.862\nJan 2004       2070.789 2070.789 2070.789\nFeb 2004       2039.522 2039.522 2039.522\nMar 2004       2354.883 2354.883 2354.883\n\n\n\n# 2. 잔차에 AR(1) 모형 구축\ntrain.res.arima      &lt;- arima(train.lm.trend.season$residuals,\n                              order = c(1,0,0))   \n\nsummary(train.res.arima)                            # 모형 구축 결과\n\n\nCall:\narima(x = train.lm.trend.season$residuals, order = c(1, 0, 0))\n\nCoefficients:\n         ar1  intercept\n      0.5998     0.3728\ns.e.  0.0712    11.8408\n\nsigma^2 estimated as 2829:  log likelihood = -663.54,  aic = 1333.08\n\nTraining set error measures:\n                     ME     RMSE     MAE      MPE     MAPE      MASE        ACF1\nTraining set -0.1223159 53.19141 39.8277 103.3885 175.2219 0.8492545 -0.07509305\n\n\nResult! 잔차에 AR(1) 모형에 대한 추정된 회귀식은 \\({E}_{t}=0.3728+0.5998(E_{t-1}-0.3728)+\\epsilon_t\\)이다. 게다가, AR(1) 회귀 계수 0.5998와 시차가 1일 때 잔차의 자기상관 0.6041은 비슷하다.\n\n# 2-1. 미래 k시점에 대한 잔차의 예측값 \ntrain.res.arima.pred &lt;- forecast(train.res.arima, \n                                 h = nTest,         # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                                 level = 0)         # 예측 구간은 계산 X\n\ntrain.res.arima.pred\n\n         Point Forecast      Lo 0      Hi 0\nApr 2001      7.4111098 7.4111098 7.4111098\nMay 2001      4.5942671 4.5942671 4.5942671\nJun 2001      2.9047772 2.9047772 2.9047772\nJul 2001      1.8914526 1.8914526 1.8914526\nAug 2001      1.2836792 1.2836792 1.2836792\nSep 2001      0.9191481 0.9191481 0.9191481\nOct 2001      0.7005091 0.7005091 0.7005091\nNov 2001      0.5693735 0.5693735 0.5693735\nDec 2001      0.4907208 0.4907208 0.4907208\nJan 2002      0.4435463 0.4435463 0.4435463\nFeb 2002      0.4152520 0.4152520 0.4152520\nMar 2002      0.3982816 0.3982816 0.3982816\nApr 2002      0.3881030 0.3881030 0.3881030\nMay 2002      0.3819981 0.3819981 0.3819981\nJun 2002      0.3783365 0.3783365 0.3783365\nJul 2002      0.3761403 0.3761403 0.3761403\nAug 2002      0.3748231 0.3748231 0.3748231\nSep 2002      0.3740331 0.3740331 0.3740331\nOct 2002      0.3735592 0.3735592 0.3735592\nNov 2002      0.3732750 0.3732750 0.3732750\nDec 2002      0.3731045 0.3731045 0.3731045\nJan 2003      0.3730023 0.3730023 0.3730023\nFeb 2003      0.3729410 0.3729410 0.3729410\nMar 2003      0.3729042 0.3729042 0.3729042\nApr 2003      0.3728821 0.3728821 0.3728821\nMay 2003      0.3728689 0.3728689 0.3728689\nJun 2003      0.3728610 0.3728610 0.3728610\nJul 2003      0.3728562 0.3728562 0.3728562\nAug 2003      0.3728534 0.3728534 0.3728534\nSep 2003      0.3728517 0.3728517 0.3728517\nOct 2003      0.3728506 0.3728506 0.3728506\nNov 2003      0.3728500 0.3728500 0.3728500\nDec 2003      0.3728496 0.3728496 0.3728496\nJan 2004      0.3728494 0.3728494 0.3728494\nFeb 2004      0.3728493 0.3728493 0.3728493\nMar 2004      0.3728492 0.3728492 0.3728492\n\n\nResult! 미래 1시점에서 잔차 예측값은 \\(0.3728+0.5998*(12.108-0.3728)=7.411\\)이다.\n\npar(mfrow = c(2,1))\n# 잔차에 대한 시계열 그림\nplot(train.lm.trend.season$residuals,               # 잔차\n     ylim = c(-250, 250),  xlim = c(1991, 2006.25), # 축 범위\n     ylab = \"Residual\", xlab = \"Time\",              # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\")                                     # 제목 제거\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n# Test Dataset 데이터 포인트에 대한 잔차 예측값\nlines(train.res.arima.pred$fitted,\n      lwd = 2,                                      # 선 굵기\n      col = \"blue\")                                 # 선 색깔\n\n# AR(1) 모형에 대한 잔차의 자기상관계수 그림\nAcf(train.res.arima$residuals, lag.max = 12)\n\n\n\n\n\n\n\n\nResult! 첫 번째 그래프를 보면 회귀모형에 대한 잔차와 AR(1) 모형에 의해 추정된 잔차는 서로 비슷한 것을 알 수 있다. 두 번째 그래프를 보면 AR(1) 모형에 의해 추정된 잔차의 자기상관계수는 막대가 모두 선 안에 있으므로 독립성을 만족한다는 것을 알 수 있다.\n\n# 3. 최종 예측 = 회귀모형에 의한 예측 + AR(1) 모형에 의한 예측\nImproved_forecast &lt;- data.frame(pred.y   = train.lm.trend.season.pred$mean,   # 회귀모형에 의한 예측값\n                                pred.res = train.res.arima.pred$mean) %&gt;%     # AR(1) 모형에 의한 잔차 예측값\n  mutate(Imp.pred = pred.y + pred.res)                                        # 두 예측값을 더한 최종 예측값\n\nImproved_forecast$Imp.pred\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n2001                            2011.682 2050.014 2011.580 2130.452 2189.195 1875.951 2008.596 2008.231 2054.230\n2002 1820.195 1785.984 2098.412 2108.310 2150.910 2115.620 2236.961 2297.769 1986.346 2120.668 2121.891 2169.427\n2003 1936.896 1904.171 2218.074 2229.440 2273.504 2239.676 2362.476 2424.743 2114.779 2250.559 2253.241 2302.235\n2004 2071.162 2039.895 2355.256                                                                                 \n\n\nResult! 미래 1시점에 대해 향상된 예측값은 \\(2004.271+7.411=2011.682\\)로 기존의 예측값 2004.271보다 실제값 2023.792에 더 가깝다.\n\n# 정확도\nforecast::accuracy(Improved_forecast$Imp.pred, test.ts)      \n\n                ME     RMSE      MAE       MPE     MAPE     ACF1 Theil's U\nTest set -127.0267 153.5331 131.8537 -6.474276 6.705803 0.705547 0.8978628\n\n\n\npar(mfrow = c(1,1))\n# 추세와 계절변동을 반영한 회귀모형에 대한 예측값\nplot(train.lm.trend.season.pred, \n     ylim = c(1300, 2600), xlim = c(1991, 2006.25), # 축 범위\n     ylab = \"Ridership\", xlab = \"Time\",             # 축 이름\n     bty = \"l\",                                     # 선으로 표시\n     xaxt = \"n\",                                    # X축 눈금 제거\n     main = \"\")                                     # 제목 제거\n\n# For X축 눈금 표시\naxis(1, at = seq(1991, 2006, 1),                    \n     labels = format(seq(1991, 2006, 1)))\n\n# Test Dataset 데이터 포인트에 대한 향상된 예측값\nlines(Improved_forecast$Imp.pred, \n      lwd = 1,                                      # 선 굵기\n      col = \"orange\")                               # 선 색깔\n\n# Test Dataset 데이터 포인트  \nlines(test.ts)",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Regression-based Forecasting</span>"
    ]
  },
  {
    "objectID": "DHR.html",
    "href": "DHR.html",
    "title": "8  Dynamic Harmonic Regression",
    "section": "",
    "text": "8.1 Amtrak\n예제 데이터로 사용하는 \"Amtrak.csv\"은 1991년 1월부터 2004년 3월까지 미국 철도 회사인 암트랙에서 제공한 월간 승객 수(단위 : 1,000명)가 기록되어져 있다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Dynamic Harmonic Regression</span>"
    ]
  },
  {
    "objectID": "DHR.html#amtrak",
    "href": "DHR.html#amtrak",
    "title": "8  Dynamic Harmonic Regression",
    "section": "",
    "text": "8.1.1 데이터 불러오기\n\npacman::p_load(\"forecast\",\n               \"dplyr\")\n\nAmtrak.data &lt;- read.csv(\".../Amtrak.csv\")          # 데이터 불러오기\n\nAmtrak.data %&gt;%\n  as_tibble\n\n\n\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n\n\n\n\n8.1.2 데이터 전처리\n\n# 1. Create Predictor Variable\nridership.df &lt;- Amtrak.data %&gt;%\n  dplyr::mutate(Lag1 = dplyr::lag(Ridership, \n                                  n = 1)) %&gt;%      # 바로 이전 과거에 관측된 값을 예측 변수로 생성\n  na.omit()                                        # 결측치 NA가 포함된 행 제거 -&gt; 첫 번째 시계열은 과거 관측값이 없기 때문에 변수 Lag1에 NA 생성 \n  \nridership.df %&gt;%\n    as_tibble\n\n# A tibble: 158 × 3\n   Month      Ridership  Lag1\n   &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt;\n 1 01/02/1991     1621. 1709.\n 2 01/03/1991     1973. 1621.\n 3 01/04/1991     1812. 1973.\n 4 01/05/1991     1975. 1812.\n 5 01/06/1991     1862. 1975.\n 6 01/07/1991     1940. 1862.\n 7 01/08/1991     2013. 1940.\n 8 01/09/1991     1596. 2013.\n 9 01/10/1991     1725. 1596.\n10 01/11/1991     1676. 1725.\n# ℹ 148 more rows\n\n# 2. Convert to ts for Target\nridership.ts &lt;- ts(ridership.df$Ridership, \n                   start = c(1991, 2),            # 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   frequency = 12)                # 주기 / 월별 시계열로 1년에 12번 관측\n\n\n# 시계열 그림\nplot(ridership.ts, \n     xlab = \"Time\", ylab = \"Ridership (in 000s)\",\n     ylim = c(1300, 2300))\n\n\n\n\n\n\n\n\nCaution! CSV 파일로 불러온 데이터를 살펴보면 승객 수를 포함하는 변수 Ridership가 수치형임을 알 수 있다. 시계열 데이터 분석을 위해 함수 ts()를 이용하여 해당 변수를 시계열 객체로 변환해야 한다.\nResult! 시계열 그림을 살펴보면 Amtrak 데이터는 U자 형태의 추세를 발견할 수 있으며, 여름(7월과 8월) 동안에 승객이 급증하는 뚜렷한 계절변동도 볼 수 있다.\n\n\n8.1.3 데이터 분할\nCaution! 시계열 데이터 분석 시 모형의 과적합을 피하고 미래 데이터에 대한 예측력을 계산하기 위해 Training Dataset과 Test Dataset으로 분할해야 한다. 시계열 데이터의 경우, 시간에 의존하기 때문에 시간 순서를 고려하여 데이터를 분할해야 한다. 즉, 앞 시점의 데이터를 Training Dataset로 사용하여 모형을 구축하고, 뒷 시점의 데이터를 Test Dataset로 사용하여 구축된 모형의 성능을 평가한다. 여기서는 데이터 분할을 위해 함수 window()를 사용한다.\n\n# Partition for Target\ntrain.ts &lt;- window(ridership.ts, \n                   start = c(1991, 2),            # 분할하고자 하는 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   end = c(2001, 3))              # 분할하고자 하는 시계열의 마지막 연도 / c(2001, 3) : 2001년 3월\n\ntest.ts &lt;- window(ridership.ts,\n                   start = c(2001, 4))            # 분할하고자 하는 시계열의 시작 연도 / c(2001, 4) : 2001년 4월\n\nnTrain   &lt;- length(train.ts)                      # Training Dataset의 데이터 포인트 개수\n\nnTest   &lt;- length(test.ts)                        # Test Dataset의 데이터 포인트 개수\n\ntrain.ts %&gt;%\n  as_tibble\n\n# A tibble: 122 × 1\n       x\n   &lt;dbl&gt;\n 1 1621.\n 2 1973.\n 3 1812.\n 4 1975.\n 5 1862.\n 6 1940.\n 7 2013.\n 8 1596.\n 9 1725.\n10 1676.\n# ℹ 112 more rows\n\ntest.ts %&gt;%\n  as_tibble\n\n# A tibble: 36 × 1\n       x\n   &lt;dbl&gt;\n 1 2024.\n 2 2047.\n 3 2073.\n 4 2127.\n 5 2203.\n 6 1708.\n 7 1951.\n 8 1974.\n 9 1985.\n10 1760.\n# ℹ 26 more rows\n\nnTrain\n\n[1] 122\n\nnTest\n\n[1] 36",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Dynamic Harmonic Regression</span>"
    ]
  },
  {
    "objectID": "DHR.html#regression-model",
    "href": "DHR.html#regression-model",
    "title": "8  Dynamic Harmonic Regression",
    "section": "8.2 Regression Model",
    "text": "8.2 Regression Model\n\n\\(j\\)개의 예측 변수를 포함한 회귀모형은 다음과 같이 표현할 수 있다. \\[\n\\begin{align*}\nY_t = \\beta_0 +\\beta_1 X_{1,t} +\\cdots + \\beta_j X_{j, t} + \\epsilon_t\n\\end{align*}\n\\]\n\n\\(Y_t\\) : 시점 \\(t\\)에서의 시계열\n\\(X_{i,t}\\) : 시점 \\(t\\)에서의 \\(i\\)번째 예측 변수\n\\(\\beta_0\\) : 절편\n\\(\\beta_i\\) : \\(X_{i,t}\\)의 회귀계수\n\\(\\epsilon_t\\) : ARIMA 모형 가정하는 오차항\n\n\\((1-\\phi_1B-\\cdots-\\phi_pB^p)(1-B)^d\\epsilon_t=(1+\\theta_1B+\\cdots+\\theta_qB^q)e_t\\)\n\n\\(\\phi_1, \\ldots, \\phi_p, \\theta_1, \\ldots, \\theta_q\\) : 추정해야하는 모수\n\\(e_t\\) : 평균이 0이고 분산이 \\(\\sigma^2_e\\)인 백색잡음과정\n\n\n\n\nCaution! Package \"forecast\"에서 제공하는 함수 auto.arima()를 이용하면 예측 변수를 포함한 회귀모형을 구축할 수 있다. 예측 변수의 경우 옵션 xreg에 입력하면 된다.\n\nregres &lt;- auto.arima(train.ts,                                              # Target : 시계열\n                     xreg = ridership.df$Lag1[1:nTrain])                    # 예측 변수 in 1-2\n\nsummary(regres)                                                             # 모형 구축 결과\n\nSeries: train.ts \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \n\nCoefficients:\n          ma1     sma1    xreg\n      -0.7482  -0.7136  0.3209\ns.e.   0.1148   0.1066  0.1604\n\nsigma^2 = 4023:  log likelihood = -610.18\nAIC=1228.35   AICc=1228.74   BIC=1239.12\n\nTraining set error measures:\n                   ME     RMSE      MAE       MPE     MAPE      MASE        ACF1\nTraining set 5.605564 59.12303 45.82698 0.2300602 2.608721 0.5562436 -0.02117107\n\n\nResult! 모형 추정 결과에 따르면, 예제 데이터 Amtrak에 대하여 다음과 같은 모형이 추정되었다. \\[\n\\begin{align*}\nY_t &= 0.3214X_{\\text{lag}, t} + \\epsilon_t,\\\\\n(1-B)(1-B^{12})\\epsilon_t &= (1-0.7484B)(1-0.7140B^{12})e_t\n\\end{align*}\n\\]\n\n# 두 오차항 epsilon_t와 e_t에 대한 시계열 그림\ncbind(\"Regression Errors\" = residuals(regres, type = \"regression\"),         # 회귀모형으로부터의 오차항 epsilon_t\n      \"ARIMA errors\" = residuals(regres, type = \"innovation\")) %&gt;%          # ARIMA 모형으로부터의 오차항 e_t\n  autoplot(facets=TRUE)                                                     # Plot\n\n\n\n\n\n\n\n\n\n# ARIMA 모형으로부터의 오차항 e_t의 백색잡음과정 확인\ncheckresiduals(regres)\n\n\n\n\n\n\n\n\n\n    Ljung-Box test\n\ndata:  Residuals from Regression with ARIMA(0,1,1)(0,1,1)[12] errors\nQ* = 13.323, df = 22, p-value = 0.9237\n\nModel df: 2.   Total lags used: 24\n\n\n\n# Test Dataset에 대한 예측 수행\npred.regres &lt;- forecast(regres,                                            \n                        h = nTest,                                          # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                        xreg = ridership.df$Lag1[-(1:nTrain)])              # Test Dataset의 예측 변수\n\npred.regres %&gt;%\n  as_tibble\n\n# A tibble: 36 × 5\n   `Point Forecast` `Lo 80` `Hi 80` `Lo 95` `Hi 95`\n              &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1            2019.   1937.   2100.   1894.   2143.\n 2            2048.   1964.   2132.   1920.   2177.\n 3            2040.   1953.   2126.   1908.   2172.\n 4            2148.   2059.   2237.   2012.   2284.\n 5            2164.   2073.   2256.   2025.   2304.\n 6            1868.   1775.   1961.   1725.   2011.\n 7            1955.   1859.   2050.   1809.   2101.\n 8            1988.   1890.   2086.   1839.   2138.\n 9            2021.   1922.   2121.   1869.   2174.\n10            1742.   1640.   1844.   1586.   1898.\n# ℹ 26 more rows\n\nplot(pred.regres)",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Dynamic Harmonic Regression</span>"
    ]
  },
  {
    "objectID": "DHR.html#dynamic-harmonic-regression",
    "href": "DHR.html#dynamic-harmonic-regression",
    "title": "8  Dynamic Harmonic Regression",
    "section": "8.3 Dynamic Harmonic Regression",
    "text": "8.3 Dynamic Harmonic Regression\n\n기술이 점점 발달함에 따라 시계열은 시간당, 분당, 초당으로 관측 가능해지며, 이렇게 관측된 시계열은 종종 긴 계절 주기를 가진다.\n계절 주기가 길 때, 계절성 ARIMA보다 선호되는 모델이 Dynamic Harmonic Regression (DHR)이다.\n게다가, 다중 계절성을 가진 시계열에도 DHR은 유용하다.\nDHR은 sine과 cosine 함수의 선형 조합으로써 계절성을 설명하는 푸리에 항(Fourier Term)을 가진 회귀모형이다.\n계절 주기가 \\(m\\)인 시계열 \\(Y_{t}\\)에 대한 DHR 모형식은 다음과 같다. \\[\n\\begin{align*}\n         Y_t = \\beta_0 +\\beta_1 X_{1,t} +\\cdots + \\beta_j X_{j, t} + \\sum^{K}_{i=1} \\left[\\alpha_{i} sin\\left(\\frac{2πit}{m} \\right) + \\gamma_{i} cos\\left(\\frac{2πit}{m} \\right)   \\right] + \\epsilon_t,   \n\\end{align*}\n\\]\n\n\\(Y_t\\) : 시점 \\(t\\)에서의 시계열\n\\(X_{i,t}\\) : 시점 \\(t\\)에서의 \\(i\\)번째 예측 변수\n\\(\\beta_0\\) : 절편\n\\(\\beta_i\\) : \\(X_{i,t}\\)의 회귀계수\n\\(\\alpha_{i}\\) & \\(\\gamma_{i}\\) : 추정해야할 모수\n\\(K\\) : 사인과 코사인 쌍의 개수로써 \\(m/2\\) 이하의 고정된 값\n\\(sin\\left(\\frac{2πit}{m} \\right)\\), \\(cos\\left(\\frac{2πit}{m} \\right)\\) : 푸리에 항\n\\(\\epsilon_t\\) : ARIMA 모형 가정하는 오차항\n\n\\((1-\\phi_1B-\\cdots-\\phi_pB^p)(1-B)^d\\epsilon_t=(1+\\theta_1B+\\cdots+\\theta_qB^q)e_t\\)\n\n\\(\\phi_1, \\ldots, \\phi_p, \\theta_1, \\ldots, \\theta_q\\) : 추정해야하는 모수\n\\(e_t\\) : 평균이 0이고 분산이 \\(\\sigma^2_e\\)인 백색잡음과정\n\n\n\n\n\nCaution! 푸리에 항은 package \"forecast\"에서 제공하는 함수 fourier()를 이용하여 생성할 수 있다.\n\nfourier(x, K, h)\n\n\nx : 주기를 가지는 시계열\nK : 사인과 코사인 쌍의 개수\n\n시계열이 다중 계절성을 가질 때 각 주기마다 K 설정\n예를 들어, 시계열이 2개의 계절성을 가지면, K = c(첫 번째 주기를 이용하여 생성하는 개수, 두 번째 주기를 이용하여 생성하는 개수)로 입력\n\nh : 예측하고자 하는 시점 개수\n\nTest Dataset에 대한 푸리에 항을 계산할 때 사용\n\n\n\nDHR.fit &lt;- auto.arima(train.ts,                                            # Target : 시계열\n                      xreg = cbind(Lag1 = ridership.df$Lag1[1:nTrain],     # Lag 1 Var. in 1-2\n                                   fourier(train.ts, K = 2)),              # 푸리에 항 \n                      seasonal = FALSE)                                    # 회귀모형의 오차에 SARIMA 모형은 고려 X\nsummary(DHR.fit)                                                           # 모형 구축 결과\n\nSeries: train.ts \nRegression with ARIMA(1,1,5) errors \n\nCoefficients:\n          ar1     ma1      ma2      ma3     ma4     ma5     Lag1     S1-12      C1-12     S2-12     C2-12\n      -0.4195  0.2130  -0.6252  -0.6185  0.0814  0.5288  -0.4579  -11.1957  -173.8855  -54.6805  -15.1761\ns.e.   0.1863  0.1455   0.1083   0.0805  0.0881  0.0930   0.1875   18.0561    25.9078   26.1408   25.4836\n\nsigma^2 = 11728:  log likelihood = -733.98\nAIC=1491.96   AICc=1494.85   BIC=1525.51\n\nTraining set error measures:\n                   ME     RMSE     MAE        MPE     MAPE     MASE        ACF1\nTraining set 4.995877 102.8321 83.6292 -0.0307368 4.755063 1.015083 -0.06433778\n\n\nResult! 주기 12를 가지는 예제 데이터 Amtrak에 DHR 모형을 적용하기 위해 함수 fourier()에 옵션 K = 2를 입력함으로써 푸리에 항 \\(\\left[ sin\\left(\\frac{2πt}{12}\\right), cos\\left(\\frac{2πt}{12}\\right)\\right]\\)와 \\(\\left[ sin\\left(\\frac{4πt}{12}\\right), cos\\left(\\frac{4πt}{12}\\right)\\right]\\)을 사용하였다. 모형 추정 결과에 따르면, 예제 데이터 Amtrak에 대하여 다음과 같은 모형이 추정되었다. \\[\n\\begin{align*}\nY_t =& -0.4737X_{\\text{lag}, t} -13.0529 \\times sin\\left(\\frac{2πt}{12} \\right) -175.5142 \\times  cos\\left(\\frac{2πt}{12} \\right)\\\\\n    & -54.6605 \\times sin\\left(\\frac{4πt}{12}\\right) -13.3815 \\times cos\\left(\\frac{4πt}{12}\\right) + \\epsilon_t,\\\\\n(1+0.4347B)(1-B)\\epsilon_t =& (1+0.2354B-0.6354B^2-0.6173B^3+0.0837B^4+0.5173B^5)e_t\n\\end{align*}\n\\]\n\n# ARIMA 모형으로부터의 오차항 e_t의 백색잡음과정 확인\ncheckresiduals(DHR.fit)\n\n\n\n\n\n\n\n\n\n    Ljung-Box test\n\ndata:  Residuals from Regression with ARIMA(1,1,5) errors\nQ* = 184.85, df = 18, p-value &lt; 2.2e-16\n\nModel df: 6.   Total lags used: 24\n\n\n\n# Test Dataset에 대한 예측 수행\npred.DHR &lt;- forecast(DHR.fit,                                            \n                     h = nTest,                                            # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                     xreg = cbind(Lag1 = ridership.df$Lag1[-(1:nTrain)],   # Test Dataset의 예측 변수\n                                  fourier(train.ts, K = 2, h = nTest))) \n\npred.DHR %&gt;%\n  as_tibble\n\n# A tibble: 36 × 5\n   `Point Forecast` `Lo 80` `Hi 80` `Lo 95` `Hi 95`\n              &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1            2081.   1942.   2220.   1869.   2293.\n 2            2160.   1983.   2337.   1889.   2431.\n 3            2067.   1886.   2248.   1791.   2343.\n 4            2067.   1885.   2249.   1789.   2345.\n 5            2024.   1842.   2206.   1745.   2303.\n 6            1929.   1732.   2125.   1628.   2230.\n 7            2132.   1929.   2334.   1821.   2442.\n 8            1969.   1757.   2180.   1645.   2292.\n 9            1877.   1658.   2095.   1542.   2211.\n10            1787.   1561.   2013.   1442.   2133.\n# ℹ 26 more rows\n\nplot(pred.DHR)\n\n\n\n\n\n\n\n\n\n# 정확도 비교\nforecast::accuracy(pred.regres$mean, test.ts)                             # Regression Model에 대한 예측 정확도\n\n                ME     RMSE      MAE       MPE     MAPE      ACF1 Theil's U\nTest set -29.46246 59.70142 40.45216 -1.536698 2.087479 0.2322672  0.342284\n\nforecast::accuracy(pred.DHR$mean, test.ts)                                # DHR에 대한 예측 정확도\n\n               ME     RMSE      MAE      MPE     MAPE      ACF1 Theil's U\nTest set 16.50118 134.5848 107.5043 0.496811 5.412356 0.3881301 0.7861543",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Dynamic Harmonic Regression</span>"
    ]
  },
  {
    "objectID": "STLM.html",
    "href": "STLM.html",
    "title": "9  STLM",
    "section": "",
    "text": "9.1 Amtrak\n예제 데이터로 사용하는 \"Amtrak.csv\"은 1991년 1월부터 2004년 3월까지 미국 철도 회사인 암트랙에서 제공한 월간 승객 수(단위 : 1,000명)가 기록되어져 있다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>STLM</span>"
    ]
  },
  {
    "objectID": "STLM.html#amtrak",
    "href": "STLM.html#amtrak",
    "title": "9  STLM",
    "section": "",
    "text": "9.1.1 데이터 불러오기\n\npacman::p_load(\"forecast\",\n               \"dplyr\")\n\nAmtrak.data &lt;- read.csv(\".../Amtrak.csv\")          # 데이터 불러오기\n\nAmtrak.data %&gt;%\n  as_tibble\n\n\n\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n\n\n\n\n9.1.2 데이터 전처리\n\n# 1. Create Predictor Variable\nridership.df &lt;- Amtrak.data %&gt;%\n  dplyr::mutate(Lag1 = dplyr::lag(Ridership, \n                                  n = 1)) %&gt;%      # 바로 이전 과거에 관측된 값을 예측 변수로 생성\n  na.omit()                                        # 결측치 NA가 포함된 행 제거 -&gt; 첫 번째 시계열은 과거 관측값이 없기 때문에 변수 Lag1에 NA 생성 \n  \nridership.df %&gt;%\n    as_tibble\n\n# A tibble: 158 × 3\n   Month      Ridership  Lag1\n   &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt;\n 1 01/02/1991     1621. 1709.\n 2 01/03/1991     1973. 1621.\n 3 01/04/1991     1812. 1973.\n 4 01/05/1991     1975. 1812.\n 5 01/06/1991     1862. 1975.\n 6 01/07/1991     1940. 1862.\n 7 01/08/1991     2013. 1940.\n 8 01/09/1991     1596. 2013.\n 9 01/10/1991     1725. 1596.\n10 01/11/1991     1676. 1725.\n# ℹ 148 more rows\n\n# 2. Convert to ts for Target\nridership.ts &lt;- ts(ridership.df$Ridership, \n                   start = c(1991, 2),            # 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   frequency = 12)                # 주기 / 월별 시계열로 1년에 12번 관측\n\n\n# 시계열 그림\nplot(ridership.ts, \n     xlab = \"Time\", ylab = \"Ridership (in 000s)\",\n     ylim = c(1300, 2300))\n\n\n\n\n\n\n\n\nCaution! CSV 파일로 불러온 데이터를 살펴보면 승객 수를 포함하는 변수 Ridership가 수치형임을 알 수 있다. 시계열 데이터 분석을 위해 함수 ts()를 이용하여 해당 변수를 시계열 객체로 변환해야 한다.\nResult! 시계열 그림을 살펴보면 Amtrak 데이터는 U자 형태의 추세를 발견할 수 있으며, 여름(7월과 8월) 동안에 승객이 급증하는 뚜렷한 계절변동도 볼 수 있다.\n\n\n9.1.3 데이터 분할\nCaution! 시계열 데이터 분석 시 모형의 과적합을 피하고 미래 데이터에 대한 예측력을 계산하기 위해 Training Dataset과 Test Dataset으로 분할해야 한다. 시계열 데이터의 경우, 시간에 의존하기 때문에 시간 순서를 고려하여 데이터를 분할해야 한다. 즉, 앞 시점의 데이터를 Training Dataset로 사용하여 모형을 구축하고, 뒷 시점의 데이터를 Test Dataset로 사용하여 구축된 모형의 성능을 평가한다. 여기서는 데이터 분할을 위해 함수 window()를 사용한다.\n\n# Partition for Target\ntrain.ts &lt;- window(ridership.ts, \n                   start = c(1991, 2),            # 분할하고자 하는 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   end = c(2001, 3))              # 분할하고자 하는 시계열의 마지막 연도 / c(2001, 3) : 2001년 3월\n\ntest.ts &lt;- window(ridership.ts,\n                   start = c(2001, 4))            # 분할하고자 하는 시계열의 시작 연도 / c(2001, 4) : 2001년 4월\n\nnTrain   &lt;- length(train.ts)                      # Training Dataset의 데이터 포인트 개수\n\nnTest   &lt;- length(test.ts)                        # Test Dataset의 데이터 포인트 개수\n\ntrain.ts %&gt;%\n  as_tibble\n\n# A tibble: 122 × 1\n       x\n   &lt;dbl&gt;\n 1 1621.\n 2 1973.\n 3 1812.\n 4 1975.\n 5 1862.\n 6 1940.\n 7 2013.\n 8 1596.\n 9 1725.\n10 1676.\n# ℹ 112 more rows\n\ntest.ts %&gt;%\n  as_tibble\n\n# A tibble: 36 × 1\n       x\n   &lt;dbl&gt;\n 1 2024.\n 2 2047.\n 3 2073.\n 4 2127.\n 5 2203.\n 6 1708.\n 7 1951.\n 8 1974.\n 9 1985.\n10 1760.\n# ℹ 26 more rows\n\nnTrain\n\n[1] 122\n\nnTest\n\n[1] 36",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>STLM</span>"
    ]
  },
  {
    "objectID": "STLM.html#decomposition",
    "href": "STLM.html#decomposition",
    "title": "9  STLM",
    "section": "9.2 Decomposition",
    "text": "9.2 Decomposition\n\n시계열은 추세(Trend), 계절(Seasonal), 나머지(Remainder) 성분으로 분해할 수 있다. \\[\n\\begin{align*}\nY_t = T_t + S_t +R_t\n\\end{align*}\n\\]\n\n\\(T_t\\) : 추세 성분\n\\(S_t\\) : 계절 성분\n\\(R_t\\) : 나머지(오차) 성분\n\n비정상성인 추세와 계절성을 제거했으므로 정상 시계열 형태\n\n\n분해는 시계열을 이해하는 데 도움이 되며, 시간에 따른 변화를 살펴볼 때 유용하다.\n특히, Seasonal and Trend decomposition using Loess (STL) 분해는 다양한 상황에서 사용할 수 있는 강력한 시계열 분해 기법이다.\n\nSTL이 가지는 장점은 다음과 같다.\n\n어떤 종류의 계절성도 다룰 수 있다.\n계절성이 시간에 따라 변화해도 잘 분해할 수 있다.\n추세의 매끄러운 정도를 사용자가 조절할 수 있다.\n이상치가 추세와 계절 성분에 영향을 주지 않게 만들 수 있다.\n\n\n\n\nCaution! 시계열에 STL 분해를 적용하기 위해서는 함수 stl()를 이용하면 되고, 자세한 옵션은 여기를 참고한다. 만약, 시계열이 다중 계절성(계절 주기가 2개 이상인 경우)을 가진다면, 함수 mstl()을 이용한다.\n\nstl(x, s.window, t.window, ...)\n\n\nx : 시계열\ns.window : 계절 성분의 값을 추정할 때 사용할 연이은 시계열 관측값의 개수\n\n해당 옵션을 통해 시간의 흐름에 따라 계절 성분이 얼마나 급격하게 변하는 지 조절할 수 있다.\n계절 패턴이 시간의 흐름에 따라 일정하면 \"periodic\"을 입력한다.\n\n\"periodic\"을 입력하면 같은 계절의 추정된 성분값은 동일하다.\n예를 들어, 주기가 12인 월별 시계열 데이터에 대해 2012년 1월과 2013년 1월의 추정된 계절 성분값이 동일하다.\n\n계절 패턴이 느리게 변하는 경우, 즉, 계절 패턴이 긴 주기로 변하는 경우 큰 값을 입력한다.\n\n예를 들어, 주식 데이터의 경우, 일반적으로 연간으로 반복되는 계절 패턴이 있을 수 있다.\n즉, 일일 시계열 데이터가 연 단위 계절성을 가진다면 s.window값을 크게 설정하여 보다 긴 시간 동안의 데이터를 고려하여야 한다.\n\n계절 패턴이 빠르게 변하는 경우, 즉, 계절 패턴이 짧은 주기로 변하는 경우 작은 값을 입력한다.\n\n예를 들어, 일별 기온 데이터의 경우, 계절 주기는 연 단위보다는 한 주 또는 한 달 단위로 더 빠르게 변화할 수 있다.\n이러한 데이터에 대해 s.window값을 작게 설정하여 최근의 변화와 세부적인 계절 패턴을 더 잘 반영할 수 있게 한다.\n\n\nt.window : 추세를 추정할 때 사용할 연이은 시계열 관측값의 개수\n\n값이 커질수록 추세를 평활하게(스무스하게) 추정한다.\n\n\n\n# 옵션 s.window에 \"periodic\" 입력\ntrain.ts %&gt;%\n  stl( s.window = \"periodic\", robust = TRUE) %&gt;%\n  autoplot()\n\n\n\n\n\n\n\n\n\n# 옵션 s.window에 큰 값 입력\ntrain.ts %&gt;%\n  stl( s.window = 20, robust = TRUE) %&gt;%\n  autoplot()\n\n\n\n\n\n\n\n\n\n# 옵션 s.window에 작은 값 입력\ntrain.ts %&gt;%\n  stl( s.window = 2, robust = TRUE) %&gt;%\n  autoplot()\n\n\n\n\n\n\n\n\nResult! s.window에 \"periodic\" 또는 20과 같이 큰 값을 입력하면 추정된 계절 성분의 값은 시간의 흐름에 따라 일정한 패턴을 가진다. 반면, 2와 같이 작은 값을 입력하면 최근의 변화와 세부적인 계절 패턴을 포착함으로써 시간의 흐름에 따라 추정치의 변동이 일정하지 않다.\n\n# 옵션 t.window에 큰 값 입력\ntrain.ts %&gt;%\n  stl( s.window = \"periodic\", t.window = 20, robust = TRUE) %&gt;%\n  autoplot()\n\n\n\n\n\n\n\n\n\n# 옵션 t.window에 작은 값 입력\ntrain.ts %&gt;%\n  stl( s.window = \"periodic\", t.window = 5, robust = TRUE) %&gt;%\n  autoplot()\n\n\n\n\n\n\n\n\nResult! t.window에 20과 같이 큰 값을 입력하면 추정된 추세 성분은 스무스하게 변화한다. 반면, 5와 같이 작은 값을 입력하면 추세 성분이 더 민감하게 데이터의 최근 변동을 반영하게 만들어 빠르게 변화하는 추세를 더 잘 잡아낼 수 있다.\nCaution! t.window에 너무 작은 값을 입력하면 빠른 추세 변동을 감지할 수 있지만, 잡음에 민감해질 수 있다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>STLM</span>"
    ]
  },
  {
    "objectID": "STLM.html#stlm",
    "href": "STLM.html#stlm",
    "title": "9  STLM",
    "section": "9.3 STLM",
    "text": "9.3 STLM\n\n분해는 시계열을 연구하거나 시간에 따른 변화를 살펴볼 때 유용하지만, 예측에도 사용할 수 있다.\nSTL Model (STLM)은 STL 분해를 이용하여 시계열을 \\(Y_{t} = S_{t} + T_{t}+R_t\\)로 분해한 후 \\(S_{t}\\)와 \\(A_{t}=T_{t}+R_t\\)를 각각 예측하고, 두 예측값을 더한 것을 최종 예측값으로 사용한다.\n\n\\(S_{t}\\) : 계절 성분(Seasonal Component)\n\n\\(S_{t}\\)는 계절 성분이 변하지 않거나 엄청 느리고 변하는 상황을 가정하고 Seasonal Naive Method을 이용하여 예측한다.\n\n\\(A_{t}\\) : 추세 + 나머지 성분\n\n\\(A_{t}\\)는 시계열 모형을 이용하여 예측한다.\n\n\n\n\n\n\n\n\n9.3.1 Seasonal Naive Method\n\nSeasonal Naive Method은 계절성이 아주 뚜렷한 데이터를 다룰 때 유용한 방법이다.\n해당 방법은 각 예측값을 같은 계절의 마지막 관측값으로 계산한다.\n\n\\(\\hat{y}_{T+h|T}=y_{T+h-m(k+1)}\\)\n\n\\(m\\) : 계절성의 주기 (Seasonal Period)\n\\(k\\) : \\((h-1)/m+1\\)의 정수 부분\n\n\n아래 그림은 \\(m=5\\)일 때 예측값을 나타낸 예제이다.\n\n\n\n\n\n\n\n9.3.2 STLM without 예측 변수\n\nSTLM은 package \"forecast\"에서 제공하는 함수 stlm()을 이용하여 수행할 수 있으며, 자세한 옵션은 여기를 참고한다.\n\n\nstlm(y, s.window, method = c(\"ets\", \"arima\"),  modelfunction, xreg )\n\n\ny : 시계열\ns.window : STL 분해를 위한 옵션으로 계절 성분의 값을 추정할 때 사용할 연이은 시계열 관측값의 개수\nmethod : \\(A_{t}\\) (추세 + 나머지 성분)을 분석하기 위해 적용할 시계열 모형\nmodelfunction : \"ets\", \"arima\" 외에 적용하고자 하는 시계열 모형에 대한 함수 형태\nxreg : method = \"arima\" 일 때, 함수 auto.arima()에 사용할 예측 변수\n\n\nSTLM.fit &lt;- train.ts %&gt;%\n  stlm(method = \"arima\")                            # 시계열을 분해하고 추세 + 나머지 성분에 ARIMA 모형 구축\n\nSTLM.fit\n\n$stl\n             Data    Trend   Seasonal12   Remainder\nFeb 1991 1620.586 1845.589 -235.4352725   10.432658\nMar 1991 1972.715 1838.570   64.8009914   69.343831\nApr 1991 1811.665 1831.552   59.1927972  -79.079538\nMay 1991 1974.964 1824.533   91.0722464   59.358450\nJun 1991 1862.356 1818.607   11.6781199   32.071141\nJul 1991 1939.860 1812.680  131.1191784   -3.939353\nAug 1991 2013.264 1806.754  204.0037365    2.506654\nSep 1991 1595.657 1801.109 -118.9547648  -86.497490\nOct 1991 1724.924 1795.465  -10.3433089  -60.197591\nNov 1991 1675.667 1789.821  -23.0066636  -91.146881\nDec 1991 1813.863 1786.195   23.1490419    4.519249\nJan 1992 1614.827 1782.569 -194.4197120   26.677839\nFeb 1992 1557.088 1778.943 -237.7347625   15.879725\nMar 1992 1891.223 1783.421   61.7766339   46.025684\nApr 1992 1955.981 1787.898   56.5182411  111.564433\nMay 1992 1884.714 1792.376   89.2338971    3.104132\nJun 1992 1623.042 1798.630   14.5256102 -190.113635\nJul 1992 1903.309 1804.884  133.6004547  -35.175533\nAug 1992 1996.712 1811.138  205.6757720  -20.101903\nSep 1992 1703.897 1815.438 -117.4282438    5.887341\nOct 1992 1810.000 1819.738   -8.2081763   -1.529498\nNov 1992 1861.601 1824.037  -21.8468800   59.410435\nDec 1992 1875.122 1828.225   23.8311784   23.066091\nJan 1993 1705.259 1832.412 -196.6676125   69.514597\nFeb 1993 1618.535 1836.599 -240.0770395   22.012739\nMar 1993 1836.709 1832.651   58.7522001  -54.693759\nApr 1993 1957.043 1828.702   53.8863195   74.454864\nMay 1993 1917.185 1824.753   87.4877484    4.944177\nJun 1993 1882.398 1817.249   17.5148673   47.633859\nJul 1993 1933.009 1809.745  136.2601800  -12.996653\nAug 1993 1996.167 1802.242  207.5629383  -13.637610\nSep 1993 1672.841 1796.728 -115.6854677   -8.201172\nOct 1993 1752.827 1791.214   -5.8556643  -32.530943\nNov 1993 1720.377 1785.700  -20.5089794  -44.813595\nDec 1993 1734.292 1780.223   24.6521692  -70.583377\nJan 1994 1563.365 1774.747 -198.8574430  -12.524398\nFeb 1994 1573.959 1769.270 -244.8102439   49.498770\nMar 1994 1902.639 1768.308   51.1671411   83.163801\nApr 1994 1833.888 1767.346   48.7934661   17.748891\nMay 1994 1831.049 1766.383   80.7845398  -16.118766\nJun 1994 1775.755 1765.645   26.0808950  -15.970606\nJul 1994 1867.508 1764.906  142.3237509  -39.721946\nAug 1994 1906.608 1764.168  210.0265255  -67.586205\nSep 1994 1685.632 1759.348 -110.1129321   36.397427\nOct 1994 1778.546 1754.527    0.4686909   23.549979\nNov 1994 1775.995 1749.707  -15.9135030   42.201348\nDec 1994 1783.350 1744.058   25.0034581   14.288672\nJan 1995 1548.415 1738.409 -206.3825393   16.388954\nFeb 1995 1496.925 1732.759 -250.1177418   14.283441\nMar 1995 1798.316 1724.222   43.0983567   30.995631\nApr 1995 1732.895 1715.685   43.3074555  -26.097180\nMay 1995 1772.345 1707.147   73.7747280   -8.577164\nJun 1995 1761.207 1695.436   34.4268734   31.344475\nJul 1995 1791.655 1683.724  148.2480767  -40.316944\nAug 1995 1874.820 1672.012  212.4316717   -9.623754\nSep 1995 1571.309 1661.459 -104.5267480   14.377241\nOct 1995 1646.948 1650.905    6.8787842  -10.835716\nNov 1995 1672.631 1640.351  -11.1634562   43.443100\nDec 1995 1656.845 1637.319   25.5781495   -6.051940\nJan 1996 1381.758 1634.286 -213.6124711  -38.915753\nFeb 1996 1360.852 1631.254 -258.0711206  -12.330538\nMar 1996 1558.575 1631.661   35.7874332 -108.872998\nApr 1996 1608.420 1632.067   38.5825371  -62.230009\nMay 1996 1696.696 1632.474   72.0932189   -7.871598\nJun 1996 1693.183 1634.581   47.3348464   11.267603\nJul 1996 1835.516 1636.687  156.2190791   42.610199\nAug 1996 1942.573 1638.793  208.9378521   94.842254\nSep 1996 1551.401 1644.066 -109.1722957   16.507004\nOct 1996 1686.508 1649.340   11.0498544   26.118456\nNov 1996 1576.204 1654.613   -4.1671277  -74.241959\nDec 1996 1700.433 1660.923   29.2557721   10.254561\nJan 1997 1396.588 1667.232 -223.6005462  -47.043701\nFeb 1997 1371.690 1673.542 -265.3093910  -36.542436\nMar 1997 1707.522 1681.430   29.0513700   -2.959532\nApr 1997 1654.604 1689.318   34.2922312  -69.006727\nMay 1997 1762.903 1697.207   70.6825191   -4.986350\nJun 1997 1775.800 1706.496   60.3498253    8.954006\nJul 1997 1934.219 1715.786  164.1418764   54.291616\nAug 1997 2008.055 1725.075  205.2406166   77.739537\nSep 1997 1615.924 1732.434 -114.1368601   -2.373540\nOct 1997 1773.910 1739.794   14.7863072   19.329739\nNov 1997 1732.368 1747.154    2.3329283  -17.118436\nDec 1997 1796.626 1750.426   32.3754672   13.824927\nJan 1998 1570.330 1753.698 -234.1454962   50.777792\nFeb 1998 1412.691 1756.970 -268.1010636  -76.177740\nMar 1998 1754.641 1759.275   28.6743303  -33.307913\nApr 1998 1824.932 1761.579   34.7443409   28.608297\nMay 1998 1843.289 1763.884   71.1000359    8.304822\nJun 1998 1825.964 1768.941   63.1254804   -6.102224\nJul 1998 1968.172 1773.997  165.9313923   28.243261\nAug 1998 1921.645 1779.054  204.0416883  -61.450637\nSep 1998 1669.597 1783.370 -115.9576820    2.185059\nOct 1998 1791.474 1787.685   15.8645907  -12.075888\nNov 1998 1816.714 1792.001    4.2333010   20.479727\nDec 1998 1846.754 1793.008   33.5259997   20.220247\nJan 1999 1599.427 1794.015 -236.7026600   42.115126\nFeb 1999 1548.804 1795.021 -270.9248046   24.707489\nMar 1999 1832.333 1794.812   28.2460407    9.274634\nApr 1999 1839.720 1794.603   35.1260189    9.990646\nMay 1999 1846.498 1794.394   71.4281452  -19.324491\nJun 1999 1864.852 1795.624   65.7927524    3.435215\nJul 1999 1965.743 1796.854  167.6030435    1.286237\nAug 1999 1949.002 1798.083  202.7154138  -51.796821\nSep 1999 1607.373 1805.595 -117.8937316  -80.328505\nOct 1999 1803.664 1813.107   16.8397652  -26.282831\nNov 1999 1850.309 1820.619    6.0588329   23.631272\nDec 1999 1836.435 1832.265   34.6299599  -30.460181\nJan 2000 1541.660 1843.912 -239.2736281  -62.977920\nFeb 2000 1616.928 1855.558 -272.2223095   33.592435\nMar 2000 1919.538 1868.931   27.9679441   22.638774\nApr 2000 1971.493 1882.305   35.5510197   53.637291\nMay 2000 1992.301 1895.678   71.5540090   25.068894\nJun 2000 2009.763 1904.305   67.1218364   38.336262\nJul 2000 2053.996 1912.932  168.8370485  -27.772755\nAug 2000 2097.471 1921.559  201.4784487  -25.565960\nSep 2000 1823.706 1929.478 -119.3878926   13.615644\nOct 2000 1976.997 1937.398   17.1593588   22.439656\nNov 2000 1981.408 1945.318    7.2897602   28.800517\nDec 2000 2000.153 1952.690   35.1824536   12.280947\nJan 2001 1683.148 1960.061 -240.4616839  -36.451791\nFeb 2001 1663.404 1967.433 -273.4196199  -30.609731\nMar 2001 2007.928 1974.390   27.7761475    5.761379\n\n$model\nSeries: x \nARIMA(0,1,1) \n\nCoefficients:\n          ma1\n      -0.4620\ns.e.   0.0946\n\nsigma^2 = 2701:  log likelihood = -649.34\nAIC=1302.67   AICc=1302.77   BIC=1308.26\n\n$modelfunction\nfunction (x, ...) \n{\n    return(auto.arima(x, xreg = xreg, seasonal = FALSE, ...))\n}\n&lt;bytecode: 0x0000021200f5f760&gt;\n&lt;environment: 0x0000021200f71f98&gt;\n\n$lambda\nNULL\n\n$x\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n1991          1620.586 1972.715 1811.665 1974.964 1862.356 1939.860 2013.264 1595.657 1724.924 1675.667 1813.863\n1992 1614.827 1557.088 1891.223 1955.981 1884.714 1623.042 1903.309 1996.712 1703.897 1810.000 1861.601 1875.122\n1993 1705.259 1618.535 1836.709 1957.043 1917.185 1882.398 1933.009 1996.167 1672.841 1752.827 1720.377 1734.292\n1994 1563.365 1573.959 1902.639 1833.888 1831.049 1775.755 1867.508 1906.608 1685.632 1778.546 1775.995 1783.350\n1995 1548.415 1496.925 1798.316 1732.895 1772.345 1761.207 1791.655 1874.820 1571.309 1646.948 1672.631 1656.845\n1996 1381.758 1360.852 1558.575 1608.420 1696.696 1693.183 1835.516 1942.573 1551.401 1686.508 1576.204 1700.433\n1997 1396.588 1371.690 1707.522 1654.604 1762.903 1775.800 1934.219 2008.055 1615.924 1773.910 1732.368 1796.626\n1998 1570.330 1412.691 1754.641 1824.932 1843.289 1825.964 1968.172 1921.645 1669.597 1791.474 1816.714 1846.754\n1999 1599.427 1548.804 1832.333 1839.720 1846.498 1864.852 1965.743 1949.002 1607.373 1803.664 1850.309 1836.435\n2000 1541.660 1616.928 1919.538 1971.493 1992.301 2009.763 2053.996 2097.471 1823.706 1976.997 1981.408 2000.153\n2001 1683.148 1663.404 2007.928                                                                                 \n\n$series\n[1] \".\"\n\n$m\n[1] 12\n\n$fitted\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n1991          1618.730 1925.606 1944.872 1904.233 1863.018 1982.095 2032.253 1699.077 1752.047 1724.791 1744.517\n1992 1564.257 1548.150 1852.470 1868.061 1948.079 1839.279 1842.016 1947.068 1650.673 1788.528 1786.442 1872.556\n1993 1653.438 1637.909 1926.315 1873.240 1951.928 1863.263 1992.303 2031.705 1689.337 1790.292 1755.482 1781.756\n1994 1532.710 1503.250 1837.270 1870.066 1882.593 1800.158 1903.272 1951.733 1607.316 1760.033 1753.611 1806.571\n1995 1562.692 1511.275 1796.771 1797.811 1793.353 1742.702 1866.479 1890.406 1565.062 1679.829 1644.096 1696.190\n1996 1435.831 1362.280 1655.370 1606.088 1640.853 1646.139 1780.334 1862.741 1587.582 1688.338 1672.137 1653.946\n1997 1426.101 1368.514 1664.583 1692.926 1708.698 1727.529 1857.291 1939.778 1657.135 1763.886 1756.826 1773.710\n1998 1519.518 1512.900 1755.762 1761.229 1831.858 1830.033 1930.650 1988.948 1632.739 1784.391 1776.571 1827.461\n1999 1567.612 1550.507 1848.762 1846.803 1879.294 1856.014 1962.579 1999.394 1651.673 1762.573 1773.899 1843.580\n2000 1565.832 1519.879 1872.283 1905.290 1976.911 1980.759 2098.079 2107.003 1781.008 1940.528 1950.279 1994.920\n2001 1722.091 1668.181 1966.807                                                                                 \n\n$residuals\n              Jan          Feb          Mar          Apr          May          Jun          Jul          Aug          Sep          Oct          Nov          Dec\n1991                 1.8560201   47.1092464 -133.2071930   70.7306383   -0.6621822  -42.2353687  -18.9886203 -103.4198370  -27.1225925  -49.1238761   69.3457330\n1992   50.5695386    8.9384908   38.7530651   87.9197831  -63.3649089 -216.2374414   61.2933910   49.6443979   53.2240541   21.4717235   75.1593486    2.5655411\n1993   51.8210361  -19.3739573  -89.6057451   83.8032420  -34.7434680   19.1348703  -59.2942622  -35.5379031  -16.4956231  -37.4645575  -35.1048022  -47.4640910\n1994   30.6548461   70.7089239   65.3691787  -36.1776513  -51.5436579  -24.4028258  -35.7636304  -45.1250866   78.3162797   18.5134357   22.3841501  -23.2207874\n1995  -14.2766914  -14.3504352    1.5451951  -64.9162397  -21.0076946   18.5045847  -74.8243363  -15.5864233    6.2467036  -32.8806399   28.5348309  -39.3449009\n1996  -54.0731899   -1.4284307  -96.7954693    2.3317023   55.8425330   47.0438653   55.1823949   79.8317448  -36.1806691   -1.8301284  -95.9325124   46.4865809\n1997  -29.5125120    3.1764646   42.9387226  -38.3217538   54.2045817   48.2714752   76.9277156   68.2768208  -41.2105584   10.0241138  -24.4576165   22.9163741\n1998   50.8120173 -100.2089699   -1.1205786   63.7032973   11.4313642   -4.0693094   37.5221224  -67.3025845   36.8584893    7.0828493   40.1434701   19.2930398\n1999   31.8147823   -1.7028576  -16.4285423   -7.0827419  -32.7962569    8.8379670    3.1637297  -50.3917701  -44.3001688   41.0914262   76.4096138   -7.1449220\n2000  -24.1722691   97.0494211   47.2552623   66.2032145   15.3899977   29.0041427  -44.0826916   -9.5320057   42.6976840   36.4694993   31.1290126    5.2334881\n2001  -38.9430620   -4.7772303   41.1212170                                                                                                                     \n\nattr(,\"class\")\n[1] \"stlm\"\n\n\nResult! 함수 stlm()은 다음과 같은 결과를 출력한다.\n\nstl : STL 분해의 결과\nmodel : \\(A_{t}\\) (추세 + 나머지 성분)에 대한 모형 구축 결과\nx : 원 시계열\nm : 계절 주기\nfitted : STLM 모형에 의한 원 시계열의 추정값\nresiduals : 잔차\n\n\n# 추세 + 나머지 성분에 대한 모형 구축 결과\nSTLM.fit$model\n\nSeries: x \nARIMA(0,1,1) \n\nCoefficients:\n          ma1\n      -0.4620\ns.e.   0.0946\n\nsigma^2 = 2701:  log likelihood = -649.34\nAIC=1302.67   AICc=1302.77   BIC=1308.26\n\n\nResult! 함수 stlm()에 옵션 method = \"arima\"을 입력하면 함수 auto.arima()를 이용하여 자동적으로 최적의 ARIMA 모형을 선택한다. 예제 데이터 Amtrak의 \\(A_{t}\\)에는 다음과 같은 MA(1) 모형이 추정되었다.\n\\[\n\\begin{align*}\n(1-B)A_t = \\epsilon_t-0.4583\\epsilon_{t-1}.\n\\end{align*}\n\\]\n\n# 예측 \npred.STLM &lt;- forecast(STLM.fit, h = nTest)        # MA(1) 모형을 이용하여 A_t를 예측 + Seasonal naive method에 의한 Seasonal 예측\n\npred.STLM %&gt;%\n  as_tibble\n\n# A tibble: 36 × 5\n   `Point Forecast` `Lo 80` `Hi 80` `Lo 95` `Hi 95`\n              &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1            1997.   1930.   2063.   1895.   2099.\n 2            2033.   1957.   2108.   1917.   2148.\n 3            2028.   1945.   2112.   1900.   2156.\n 4            2130.   2039.   2221.   1991.   2269.\n 5            2163.   2065.   2260.   2013.   2312.\n 6            1842.   1738.   1946.   1682.   2001.\n 7            1978.   1868.   2088.   1810.   2147.\n 8            1968.   1853.   2084.   1791.   2146.\n 9            1996.   1875.   2118.   1811.   2182.\n10            1721.   1594.   1847.   1527.   1914.\n# ℹ 26 more rows\n\n\n\nplot(pred.STLM)\n\n\n\n\n\n\n\n\n\n# 예측 정확도\nforecast::accuracy(pred.STLM$mean, test.ts)   \n\n              ME     RMSE      MAE     MPE     MAPE      ACF1 Theil's U\nTest set 32.1658 83.53595 69.97816 1.53156 3.553933 0.7083536 0.4884488\n\n\n\n\n9.3.3 STLM with 예측 변수\n\n# 시계열을 분해하고 추세 + 나머지 성분에 예측 변수를 포함한 회귀모형 구축\nSTLM.fit2 &lt;- train.ts %&gt;%\n  stlm(method = \"arima\",\n       xreg = ridership.df$Lag1[1:nTrain])                      # In 1-2\n\nSTLM.fit2\n\n$stl\n             Data    Trend   Seasonal12   Remainder\nFeb 1991 1620.586 1845.589 -235.4352725   10.432658\nMar 1991 1972.715 1838.570   64.8009914   69.343831\nApr 1991 1811.665 1831.552   59.1927972  -79.079538\nMay 1991 1974.964 1824.533   91.0722464   59.358450\nJun 1991 1862.356 1818.607   11.6781199   32.071141\nJul 1991 1939.860 1812.680  131.1191784   -3.939353\nAug 1991 2013.264 1806.754  204.0037365    2.506654\nSep 1991 1595.657 1801.109 -118.9547648  -86.497490\nOct 1991 1724.924 1795.465  -10.3433089  -60.197591\nNov 1991 1675.667 1789.821  -23.0066636  -91.146881\nDec 1991 1813.863 1786.195   23.1490419    4.519249\nJan 1992 1614.827 1782.569 -194.4197120   26.677839\nFeb 1992 1557.088 1778.943 -237.7347625   15.879725\nMar 1992 1891.223 1783.421   61.7766339   46.025684\nApr 1992 1955.981 1787.898   56.5182411  111.564433\nMay 1992 1884.714 1792.376   89.2338971    3.104132\nJun 1992 1623.042 1798.630   14.5256102 -190.113635\nJul 1992 1903.309 1804.884  133.6004547  -35.175533\nAug 1992 1996.712 1811.138  205.6757720  -20.101903\nSep 1992 1703.897 1815.438 -117.4282438    5.887341\nOct 1992 1810.000 1819.738   -8.2081763   -1.529498\nNov 1992 1861.601 1824.037  -21.8468800   59.410435\nDec 1992 1875.122 1828.225   23.8311784   23.066091\nJan 1993 1705.259 1832.412 -196.6676125   69.514597\nFeb 1993 1618.535 1836.599 -240.0770395   22.012739\nMar 1993 1836.709 1832.651   58.7522001  -54.693759\nApr 1993 1957.043 1828.702   53.8863195   74.454864\nMay 1993 1917.185 1824.753   87.4877484    4.944177\nJun 1993 1882.398 1817.249   17.5148673   47.633859\nJul 1993 1933.009 1809.745  136.2601800  -12.996653\nAug 1993 1996.167 1802.242  207.5629383  -13.637610\nSep 1993 1672.841 1796.728 -115.6854677   -8.201172\nOct 1993 1752.827 1791.214   -5.8556643  -32.530943\nNov 1993 1720.377 1785.700  -20.5089794  -44.813595\nDec 1993 1734.292 1780.223   24.6521692  -70.583377\nJan 1994 1563.365 1774.747 -198.8574430  -12.524398\nFeb 1994 1573.959 1769.270 -244.8102439   49.498770\nMar 1994 1902.639 1768.308   51.1671411   83.163801\nApr 1994 1833.888 1767.346   48.7934661   17.748891\nMay 1994 1831.049 1766.383   80.7845398  -16.118766\nJun 1994 1775.755 1765.645   26.0808950  -15.970606\nJul 1994 1867.508 1764.906  142.3237509  -39.721946\nAug 1994 1906.608 1764.168  210.0265255  -67.586205\nSep 1994 1685.632 1759.348 -110.1129321   36.397427\nOct 1994 1778.546 1754.527    0.4686909   23.549979\nNov 1994 1775.995 1749.707  -15.9135030   42.201348\nDec 1994 1783.350 1744.058   25.0034581   14.288672\nJan 1995 1548.415 1738.409 -206.3825393   16.388954\nFeb 1995 1496.925 1732.759 -250.1177418   14.283441\nMar 1995 1798.316 1724.222   43.0983567   30.995631\nApr 1995 1732.895 1715.685   43.3074555  -26.097180\nMay 1995 1772.345 1707.147   73.7747280   -8.577164\nJun 1995 1761.207 1695.436   34.4268734   31.344475\nJul 1995 1791.655 1683.724  148.2480767  -40.316944\nAug 1995 1874.820 1672.012  212.4316717   -9.623754\nSep 1995 1571.309 1661.459 -104.5267480   14.377241\nOct 1995 1646.948 1650.905    6.8787842  -10.835716\nNov 1995 1672.631 1640.351  -11.1634562   43.443100\nDec 1995 1656.845 1637.319   25.5781495   -6.051940\nJan 1996 1381.758 1634.286 -213.6124711  -38.915753\nFeb 1996 1360.852 1631.254 -258.0711206  -12.330538\nMar 1996 1558.575 1631.661   35.7874332 -108.872998\nApr 1996 1608.420 1632.067   38.5825371  -62.230009\nMay 1996 1696.696 1632.474   72.0932189   -7.871598\nJun 1996 1693.183 1634.581   47.3348464   11.267603\nJul 1996 1835.516 1636.687  156.2190791   42.610199\nAug 1996 1942.573 1638.793  208.9378521   94.842254\nSep 1996 1551.401 1644.066 -109.1722957   16.507004\nOct 1996 1686.508 1649.340   11.0498544   26.118456\nNov 1996 1576.204 1654.613   -4.1671277  -74.241959\nDec 1996 1700.433 1660.923   29.2557721   10.254561\nJan 1997 1396.588 1667.232 -223.6005462  -47.043701\nFeb 1997 1371.690 1673.542 -265.3093910  -36.542436\nMar 1997 1707.522 1681.430   29.0513700   -2.959532\nApr 1997 1654.604 1689.318   34.2922312  -69.006727\nMay 1997 1762.903 1697.207   70.6825191   -4.986350\nJun 1997 1775.800 1706.496   60.3498253    8.954006\nJul 1997 1934.219 1715.786  164.1418764   54.291616\nAug 1997 2008.055 1725.075  205.2406166   77.739537\nSep 1997 1615.924 1732.434 -114.1368601   -2.373540\nOct 1997 1773.910 1739.794   14.7863072   19.329739\nNov 1997 1732.368 1747.154    2.3329283  -17.118436\nDec 1997 1796.626 1750.426   32.3754672   13.824927\nJan 1998 1570.330 1753.698 -234.1454962   50.777792\nFeb 1998 1412.691 1756.970 -268.1010636  -76.177740\nMar 1998 1754.641 1759.275   28.6743303  -33.307913\nApr 1998 1824.932 1761.579   34.7443409   28.608297\nMay 1998 1843.289 1763.884   71.1000359    8.304822\nJun 1998 1825.964 1768.941   63.1254804   -6.102224\nJul 1998 1968.172 1773.997  165.9313923   28.243261\nAug 1998 1921.645 1779.054  204.0416883  -61.450637\nSep 1998 1669.597 1783.370 -115.9576820    2.185059\nOct 1998 1791.474 1787.685   15.8645907  -12.075888\nNov 1998 1816.714 1792.001    4.2333010   20.479727\nDec 1998 1846.754 1793.008   33.5259997   20.220247\nJan 1999 1599.427 1794.015 -236.7026600   42.115126\nFeb 1999 1548.804 1795.021 -270.9248046   24.707489\nMar 1999 1832.333 1794.812   28.2460407    9.274634\nApr 1999 1839.720 1794.603   35.1260189    9.990646\nMay 1999 1846.498 1794.394   71.4281452  -19.324491\nJun 1999 1864.852 1795.624   65.7927524    3.435215\nJul 1999 1965.743 1796.854  167.6030435    1.286237\nAug 1999 1949.002 1798.083  202.7154138  -51.796821\nSep 1999 1607.373 1805.595 -117.8937316  -80.328505\nOct 1999 1803.664 1813.107   16.8397652  -26.282831\nNov 1999 1850.309 1820.619    6.0588329   23.631272\nDec 1999 1836.435 1832.265   34.6299599  -30.460181\nJan 2000 1541.660 1843.912 -239.2736281  -62.977920\nFeb 2000 1616.928 1855.558 -272.2223095   33.592435\nMar 2000 1919.538 1868.931   27.9679441   22.638774\nApr 2000 1971.493 1882.305   35.5510197   53.637291\nMay 2000 1992.301 1895.678   71.5540090   25.068894\nJun 2000 2009.763 1904.305   67.1218364   38.336262\nJul 2000 2053.996 1912.932  168.8370485  -27.772755\nAug 2000 2097.471 1921.559  201.4784487  -25.565960\nSep 2000 1823.706 1929.478 -119.3878926   13.615644\nOct 2000 1976.997 1937.398   17.1593588   22.439656\nNov 2000 1981.408 1945.318    7.2897602   28.800517\nDec 2000 2000.153 1952.690   35.1824536   12.280947\nJan 2001 1683.148 1960.061 -240.4616839  -36.451791\nFeb 2001 1663.404 1967.433 -273.4196199  -30.609731\nMar 2001 2007.928 1974.390   27.7761475    5.761379\n\n$model\nSeries: x \nRegression with ARIMA(0,1,1) errors \n\nCoefficients:\n          ma1     xreg\n      -0.4565  -0.0068\ns.e.   0.0985   0.0317\n\nsigma^2 = 2723:  log likelihood = -649.31\nAIC=1304.63   AICc=1304.83   BIC=1313.01\n\n$modelfunction\nfunction (x, ...) \n{\n    return(auto.arima(x, xreg = xreg, seasonal = FALSE, ...))\n}\n&lt;bytecode: 0x0000021200f5f760&gt;\n&lt;environment: 0x0000021200b08ee8&gt;\n\n$lambda\nNULL\n\n$x\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n1991          1620.586 1972.715 1811.665 1974.964 1862.356 1939.860 2013.264 1595.657 1724.924 1675.667 1813.863\n1992 1614.827 1557.088 1891.223 1955.981 1884.714 1623.042 1903.309 1996.712 1703.897 1810.000 1861.601 1875.122\n1993 1705.259 1618.535 1836.709 1957.043 1917.185 1882.398 1933.009 1996.167 1672.841 1752.827 1720.377 1734.292\n1994 1563.365 1573.959 1902.639 1833.888 1831.049 1775.755 1867.508 1906.608 1685.632 1778.546 1775.995 1783.350\n1995 1548.415 1496.925 1798.316 1732.895 1772.345 1761.207 1791.655 1874.820 1571.309 1646.948 1672.631 1656.845\n1996 1381.758 1360.852 1558.575 1608.420 1696.696 1693.183 1835.516 1942.573 1551.401 1686.508 1576.204 1700.433\n1997 1396.588 1371.690 1707.522 1654.604 1762.903 1775.800 1934.219 2008.055 1615.924 1773.910 1732.368 1796.626\n1998 1570.330 1412.691 1754.641 1824.932 1843.289 1825.964 1968.172 1921.645 1669.597 1791.474 1816.714 1846.754\n1999 1599.427 1548.804 1832.333 1839.720 1846.498 1864.852 1965.743 1949.002 1607.373 1803.664 1850.309 1836.435\n2000 1541.660 1616.928 1919.538 1971.493 1992.301 2009.763 2053.996 2097.471 1823.706 1976.997 1981.408 2000.153\n2001 1683.148 1663.404 2007.928                                                                                 \n\n$series\n[1] \".\"\n\n$m\n[1] 12\n\n$fitted\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n1991          1618.718 1926.052 1943.002 1903.797 1862.093 1982.435 2031.649 1698.199 1753.909 1724.614 1744.500\n1992 1563.694 1549.522 1853.537 1866.495 1947.409 1839.108 1842.521 1945.734 1649.704 1790.366 1786.679 1872.729\n1993 1653.439 1639.348 1927.453 1871.785 1950.910 1862.877 1992.469 2031.110 1688.441 1791.985 1755.506 1781.794\n1994 1532.371 1504.424 1838.124 1868.586 1882.184 1799.706 1903.306 1950.929 1606.435 1761.562 1753.780 1806.789\n1995 1562.613 1512.755 1797.716 1796.206 1792.706 1742.024 1866.347 1889.727 1564.102 1681.484 1644.157 1696.201\n1996 1435.726 1363.801 1656.199 1604.591 1639.845 1645.388 1780.274 1862.052 1586.981 1690.519 1672.205 1654.197\n1997 1425.628 1370.197 1665.538 1691.320 1708.113 1726.825 1857.149 1939.062 1656.683 1766.113 1756.826 1773.857\n1998 1519.275 1514.605 1757.057 1759.494 1830.940 1829.553 1930.526 1988.133 1632.311 1786.110 1776.567 1827.509\n1999 1567.537 1552.326 1849.926 1845.320 1878.528 1855.438 1962.240 1998.572 1651.134 1764.400 1773.628 1843.561\n2000 1565.878 1521.766 1873.169 1903.902 1976.290 1980.419 2097.965 2106.408 1780.389 1942.338 1950.266 1995.055\n2001 1722.055 1670.101 1967.791                                                                                 \n\n$residuals\n              Jan          Feb          Mar          Apr          May          Jun          Jul          Aug          Sep          Oct          Nov          Dec\n1991                 1.8676155   46.6626242 -131.3369566   71.1671973    0.2630857  -42.5745049  -18.3851648 -102.5418014  -28.9851994  -48.9474646   69.3628891\n1992   51.1327160    7.5662448   37.6856175   89.4860310  -62.6953161 -216.0659842   60.7884008   50.9776083   54.1926689   19.6336021   74.9218413    2.3928514\n1993   51.8198055  -20.8127956  -90.7441565   85.2579944  -33.7249779   19.5208995  -59.4595893  -34.9430398  -15.5996023  -39.1584340  -35.1287246  -47.5016377\n1994   30.9938208   69.5348623   64.5152740  -34.6976905  -51.1351174  -23.9514109  -35.7982061  -44.3211199   79.1973717   16.9844573   22.2145787  -23.4389182\n1995  -14.1983270  -15.8300322    0.5995510  -63.3114179  -20.3611110   19.1832370  -74.6921503  -14.9069371    7.2070999  -34.5360736   28.4736874  -39.3558760\n1996  -53.9683795   -2.9489741  -97.6235320    3.8289974   56.8513604   47.7954462   55.2422542   80.5205756  -35.5799915   -4.0106354  -96.0010342   46.2357989\n1997  -29.0403749    1.4930492   41.9838372  -36.7156879   54.7899377   48.9746443   77.0700530   68.9925528  -40.7593035    7.7966251  -24.4577048   22.7693117\n1998   51.0545401 -101.9138880   -2.4159305   65.4383864   12.3490908   -3.5888638   37.6463154  -66.4878637   37.2857704    5.3644696   40.1469859   19.2445689\n1999   31.8901106   -3.5220523  -17.5930543   -5.5999251  -32.0302176    9.4144584    3.5026893  -49.5699208  -43.7607686   39.2638751   76.6807013   -7.1259729\n2000  -24.2183632   95.1615452   46.3691170   67.5914404   16.0111935   29.3440343  -43.9689738   -8.9369125   43.3168706   34.6591699   31.1416806    5.0975677\n2001  -38.9067725   -6.6968956   40.1373144                                                                                                                     \n\nattr(,\"class\")\n[1] \"stlm\"\n\n\n\n# 추세 + 나머지 성분에 대한 모형 구축 결과\nSTLM.fit2$model\n\nSeries: x \nRegression with ARIMA(0,1,1) errors \n\nCoefficients:\n          ma1     xreg\n      -0.4565  -0.0068\ns.e.   0.0985   0.0317\n\nsigma^2 = 2723:  log likelihood = -649.31\nAIC=1304.63   AICc=1304.83   BIC=1313.01\n\n\nResult! 모형 구축 결과에 의하면, 예제 데이터 Amtrak의 \\(A_{t}\\)에는 다음과 같은 모형이 추정되었다.\n\\[\n\\begin{align*}\nA_t &= -0.0044X_{\\text{lag, t}} + \\epsilon_t,\\\\\n(1-B)\\epsilon_t & = e_t -0.4546e_{t-1}.\n\\end{align*}\n\\]\n\n# 예측 \npred.STLM2 &lt;- forecast(STLM.fit2,                                # 회귀모형을 이용하여 A_t를 예측 + Seasonal naive method에 의한 Seasonal 예측\n                       h = nTest,                                # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                       newxreg = ridership.df$Lag1[-(1:nTrain)]) # Test Dataset에 대한 예측 변수\npred.STLM2 %&gt;%\n  as_tibble\n\n# A tibble: 36 × 5\n   `Point Forecast` `Lo 80` `Hi 80` `Lo 95` `Hi 95`\n              &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1            1995.   1928.   2062.   1893.   2097.\n 2            2031.   1955.   2107.   1915.   2147.\n 3            2026.   1942.   2111.   1897.   2155.\n 4            2128.   2036.   2220.   1987.   2268.\n 5            2160.   2061.   2259.   2009.   2311.\n 6            1839.   1734.   1944.   1678.   2000.\n 7            1979.   1867.   2090.   1808.   2149.\n 8            1967.   1850.   2084.   1788.   2146.\n 9            1995.   1872.   2118.   1807.   2182.\n10            1719.   1591.   1847.   1524.   1915.\n# ℹ 26 more rows\n\nplot(pred.STLM2)\n\n\n\n\n\n\n\n\n\n# 예측 정확도\nforecast::accuracy(pred.STLM2$mean, test.ts)   \n\n               ME     RMSE      MAE      MPE     MAPE      ACF1 Theil's U\nTest set 33.70428 84.12036 70.70901 1.608242 3.588419 0.7128288   0.49155",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>STLM</span>"
    ]
  },
  {
    "objectID": "BSTS.html",
    "href": "BSTS.html",
    "title": "10  Dynamic Linear Model and Bayesian Structural Time Series",
    "section": "",
    "text": "10.1 Amtrak\n예제 데이터로 사용하는 \"Amtrak.csv\"은 1991년 1월부터 2004년 3월까지 미국 철도 회사인 암트랙에서 제공한 월간 승객 수(단위 : 1,000명)가 기록되어져 있다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Dynamic Linear Model and Bayesian Structural Time Series</span>"
    ]
  },
  {
    "objectID": "BSTS.html#amtrak",
    "href": "BSTS.html#amtrak",
    "title": "10  Dynamic Linear Model and Bayesian Structural Time Series",
    "section": "",
    "text": "10.1.1 데이터 불러오기\n\npacman::p_load(\"dlm\", \"bsts\",\n               \"forecast\",\n               \"dplyr\")\n\nAmtrak.data &lt;- read.csv(\".../Amtrak.csv\")          # 데이터 불러오기\n\nAmtrak.data %&gt;%\n  as_tibble\n\n\n\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n\n\n\n\n10.1.2 데이터 전처리\n\n# 1. Create Predictor Variable\nridership.df &lt;- Amtrak.data %&gt;%\n  dplyr::mutate(Lag1 = dplyr::lag(Ridership, \n                                  n = 1)) %&gt;%      # 바로 이전 과거에 관측된 값을 예측 변수로 생성\n  na.omit()                                        # 결측치 NA가 포함된 행 제거 -&gt; 첫 번째 시계열은 과거 관측값이 없기 때문에 변수 Lag1에 NA 생성 \n  \nridership.df %&gt;%\n    as_tibble\n\n# A tibble: 158 × 3\n   Month      Ridership  Lag1\n   &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt;\n 1 01/02/1991     1621. 1709.\n 2 01/03/1991     1973. 1621.\n 3 01/04/1991     1812. 1973.\n 4 01/05/1991     1975. 1812.\n 5 01/06/1991     1862. 1975.\n 6 01/07/1991     1940. 1862.\n 7 01/08/1991     2013. 1940.\n 8 01/09/1991     1596. 2013.\n 9 01/10/1991     1725. 1596.\n10 01/11/1991     1676. 1725.\n# ℹ 148 more rows\n\n# 2. Convert to ts for Target\nridership.ts &lt;- ts(ridership.df$Ridership, \n                   start = c(1991, 2),            # 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   frequency = 12)                # 주기 / 월별 시계열로 1년에 12번 관측\n\n\n# 시계열 그림\nplot(ridership.ts, \n     xlab = \"Time\", ylab = \"Ridership (in 000s)\",\n     ylim = c(1300, 2300))\n\n\n\n\n\n\n\n\nCaution! CSV 파일로 불러온 데이터를 살펴보면 승객 수를 포함하는 변수 Ridership가 수치형임을 알 수 있다. 시계열 데이터 분석을 위해 함수 ts()를 이용하여 해당 변수를 시계열 객체로 변환해야 한다.\nResult! 시계열 그림을 살펴보면 Amtrak 데이터는 U자 형태의 추세를 발견할 수 있으며, 여름(7월과 8월) 동안에 승객이 급증하는 뚜렷한 계절변동도 볼 수 있다.\n\n\n10.1.3 데이터 분할\nCaution! 시계열 데이터 분석 시 모형의 과적합을 피하고 미래 데이터에 대한 예측력을 계산하기 위해 Training Dataset과 Test Dataset으로 분할해야 한다. 시계열 데이터의 경우, 시간에 의존하기 때문에 시간 순서를 고려하여 데이터를 분할해야 한다. 즉, 앞 시점의 데이터를 Training Dataset로 사용하여 모형을 구축하고, 뒷 시점의 데이터를 Test Dataset로 사용하여 구축된 모형의 성능을 평가한다. 여기서는 데이터 분할을 위해 함수 window()를 사용한다.\n\n# Partition for Target\ntrain.ts &lt;- window(ridership.ts, \n                   start = c(1991, 2),            # 분할하고자 하는 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   end = c(2001, 3))              # 분할하고자 하는 시계열의 마지막 연도 / c(2001, 3) : 2001년 3월\n\ntest.ts &lt;- window(ridership.ts,\n                   start = c(2001, 4))            # 분할하고자 하는 시계열의 시작 연도 / c(2001, 4) : 2001년 4월\n\nnTrain   &lt;- length(train.ts)                      # Training Dataset의 데이터 포인트 개수\n\nnTest   &lt;- length(test.ts)                        # Test Dataset의 데이터 포인트 개수\n\ntrain.ts %&gt;%\n  as_tibble\n\n# A tibble: 122 × 1\n       x\n   &lt;dbl&gt;\n 1 1621.\n 2 1973.\n 3 1812.\n 4 1975.\n 5 1862.\n 6 1940.\n 7 2013.\n 8 1596.\n 9 1725.\n10 1676.\n# ℹ 112 more rows\n\ntest.ts %&gt;%\n  as_tibble\n\n# A tibble: 36 × 1\n       x\n   &lt;dbl&gt;\n 1 2024.\n 2 2047.\n 3 2073.\n 4 2127.\n 5 2203.\n 6 1708.\n 7 1951.\n 8 1974.\n 9 1985.\n10 1760.\n# ℹ 26 more rows\n\nnTrain\n\n[1] 122\n\nnTest\n\n[1] 36",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Dynamic Linear Model and Bayesian Structural Time Series</span>"
    ]
  },
  {
    "objectID": "BSTS.html#dynamic-linear-model",
    "href": "BSTS.html#dynamic-linear-model",
    "title": "10  Dynamic Linear Model and Bayesian Structural Time Series",
    "section": "10.2 Dynamic Linear Model",
    "text": "10.2 Dynamic Linear Model\n\n상태공간모형(State Space Model)은 관측 가능한 시계열 \\(Y_t\\)을 관측할 수 없는/측정되지 않는 상태 \\(\\theta_t\\)로 표현하여 나타내는 모형이다.\n\n상태는 시간에 따라 변화하는 확률과정으로 볼 수 있다.\n\n상태공간모형은 비정상 시계열이나 불규칙적인 패턴이 존재할 경우 유용하다.\n\n상태공간모형 중에서 선형성(linearity)과 정규분포(Gaussian distribution)을 가정한 모형을 Dynamic Linear Model (DLM)이라고 한다. \\[\n\\begin{align*}\nY_{t}&=F_{t}\\theta_{t}+v_{t},~~~~~~~v_{t}\\sim N(0,V_{t}), \\\\\n\\theta_{t}&=G_{t}\\theta_{t-1}+\\omega_{t},~~~\\omega_{t}\\sim N(0,W_{t}).\n\\end{align*}\n\\]\n\n첫 번째는 관측방정식, 두 번째는 상태방정식이다.\n\n\\(Y_{t}\\) : 시점 \\(t\\)에서 시계열\n\\(\\theta_{t}\\) : 시점 \\(t\\)에서 상태\n\n예를 들어, 추세와 계절성 등\n\n\\(F_{t}\\), \\(G_{t}\\) : 알고 있는 행렬\n\\(v_{t}\\), \\(\\omega_{t}\\) : 오차\n\n\n시계열에 DLM을 구축하기 위해 package \"dlm\"을 이용할 수 있으며, 전반적인 분석 절차는 다음과 같다.\n\n\n\n\n\n\n10.2.1 모형 정의\n\n시계열에 추세가 존재할 경우, DLM의 대표적인 모형은 \"Local Level Model\"과 \"Local Linear Trend Model\"이다.\n\n\"Local Level Model\" : 추세의 수준(\\(\\mu_t\\)) + Noise\n\n함수 dlmModPoly(1)을 이용 \\[\n\\begin{align*}\nY_{t}&=\\mu_t +v_t,~~~~~~~v_{t}\\sim N(0,\\sigma^2_v), \\\\\n\\mu_{t}&=\\mu_{t-1}+ \\omega_{t},~~~\\omega_{t}\\sim N(0,\\sigma^2_{\\mu}).\n\\end{align*}\n\\]\n\n\n\"Local Linear Trend Model\" : 추세의 수준(\\(\\mu_t\\)) + 추세의 기울기(\\(\\delta_t\\)) + Noise\n\n함수 dlmModPoly(2)을 이용 \\[\n\\begin{align*}\nY_{t}&=\\mu_t +v_t,~~~~~~~~~~~~~~~~~~~~~~~~v_{t}\\sim N(0,\\sigma^2_v), \\\\\n\\mu_{t}&=\\mu_{t-1}+ \\delta_{t-1}+\\omega_{1,t},~~~\\omega_{1,t}\\sim N(0,\\sigma^2_{\\mu}),\\\\\n\\delta_{t}&=\\delta_{t-1} + \\omega_{2,t},~~~~~~~~~~~~~~~~\\omega_{2,t}\\sim N(0,\\sigma^2_{\\delta}).\n\\end{align*}\n\\]\n\n\n\n시계열에 계절성(계절 주기 : \\(s\\))이 존재할 경우, DLM의 대표적인 모형은 \"Seasonal Factor Model\"이다.\n\n함수 dlmModSeas(s)을 이용\n\n시계열에 추세와 계절성이 존재한다면, Level + Slope + Season + Noise 형태의 DLM을 고려할 수 있다.\n\n함수 dlmModPoly(2) + dlmModSeas(s)을 이용\n\n\\(j\\)개의 예측 변수(Predictor Variable)에 대한 회귀모수도 DLM에 포함할 수 있다.\n\n절편과 예측 변수에 대한 회귀모수 \\(\\beta\\)가 시간의 흐름에 따라 일정하다면, 함수 dlmModReg(..., dW = rep(0, j+1))\n절편과 예측 변수에 대한 회귀모수 \\(\\beta\\)가 시간의 흐름에 따라 변한다면, 함수 dlmModReg(..., dw = c(각 회귀모수의 분산))\n\n\\(\\beta_{i, t}=\\beta_{i, t-1} + \\omega_{{\\beta_i}, t},\\;\\; \\omega_{{\\beta_i}, t}\\sim N(0, \\sigma^2_{\\beta_i}), \\;\\; i = 0, \\ldots, j\\)\n\n\n\n\n\n# Local Level Model\nLocal.level &lt;- function(p){\n  \n  mod          &lt;- dlmModPoly(1)        # Local Level Model\n  \n  V(mod)       &lt;- exp(p[1])            # 관측방정식의 오차의 분산\n  diag(W(mod)) &lt;- exp(p[2])            # 상태방정식의 오차의 분산(\\sigma^2_{\\mu})\n\n  return(mod)  \n}\n\n\n# Local Linear Trend Model\nLocal.linear.trend &lt;- function(p){\n  \n  mod               &lt;- dlmModPoly(2)   # Local Linear Trend Model\n  \n  V(mod)            &lt;- exp(p[1])       # 관측방정식의 오차의 분산\n  diag(W(mod))[1:2] &lt;- exp(p[2:3])     # 상태방정식의 오차의 분산(\\sigma^2_{\\mu}, \\sigma^2_{\\delta})\n\n  return(mod)  \n}\n\n\n# Seasonal Factor Model\nSeason.factor &lt;- function(p){\n  \n  mod           &lt;- dlmModSeas(12)      # Seasonal Factor Model / 계절 주기 = 12\n  \n  V(mod)        &lt;- exp(p[1])           # 관측방정식의 오차의 분산\n  diag(W(mod))[ &lt;- exp(p[2])           # 상태방정식의 오차의 분산(\\sigma^2_{\\alpha})\n\n  return(mod)  \n}\n\n\n# Local Linear Trend + Seasonal Factor Model\nLocal.trend.season &lt;- function(p){\n  \n  mod               &lt;- dlmModPoly(2) +     # Local Linear Trend Model\n                       dlmModSeas(12)      # Seasonal Factor / 계절 주기 = 12\n  \n  V(mod)            &lt;- exp(p[1])           # 관측방정식의 오차의 분산\n  diag(W(mod))[1:3] &lt;- exp(p[2:4])         # 상태방정식의 오차의 분산(\\sigma^2_{\\mu}, \\sigma^2_{\\delta}, \\sigma^2_{\\alpha})\n\n  return(mod) \n}\n\n\n# Local Linear Trend + Seasonal Factor + Regression Model\n# 예측 변수가 1개인 경우\nLocal.trend.season.reg &lt;- function(p, x.mat){\n  \n  mod               &lt;- dlmModReg(x.mat) +  # 예측 변수에 대한 회귀계수 \n                       dlmModPoly(2) +     # Local Linear Trend Model\n                       dlmModSeas(12)      # Seasonal Factor / 계절 주기 = 12\n\n  \n  V(mod)            &lt;- exp(p[1])           # 관측방정식의 오차의 분산\n  diag(W(mod))[1:5] &lt;- exp(p[2:6])         # 회귀모수의 분산(절편의 분산과 1개의 예측 변수에 대한 분산) + 상태방정식의 오차의 분산(\\sigma^2_{\\mu}, \\sigma^2_{\\delta}, \\sigma^2_{\\alpha}) \n  \n  return(mod) \n}\n\nCaution! 예제 데이터 Amtrak은 추세와 계절성을 동시에 가지고 있는 시계열로써 Local Linear Trend + Seasonal Factor Model을 이용하여 분석을 수행한다.\n\n\n10.2.2 모수 추정\n\nPackage \"dlm\"에서 함수 dlmMLE()를 이용하면 최대가능도 추정방법으로 정의된 모형에 대한 모수를 추정할 수 있다.\n\n모수 : 관측방정식과 상태방정식에 포함된 오차의 분산\n\n\n\nmle1 &lt;- dlmMLE(train.ts, \n               parm = c(0.1, 1.1 ,1,1, 1.1),   # 초기값\n               build = Local.trend.season )    # 정의한 모형 in 2-1\n\n# 모수의 수렴 여부\nifelse(mle1$convergence==0, print(\"converge\"), print(\"did not converge\") )\n\n[1] \"converge\"\n\n\n[1] \"converge\"\n\n\n\n# 추정된 오차의 분산을 이용하여 모형 구축\nmodelfit &lt;- Local.trend.season(mle1$par)  \n\n# 추정된 관측방정식의 오차의 분산\nV(modelfit) \n\n          [,1]\n[1,] 0.3284524\n\n\nResult! 관측방정식의 추정된 오차의 분산은 \\(\\sigma^2_v = 1447.764\\)이다.\n\n# 추정된 상태방정식의 오차의 분산(\\sigma^2_{\\mu}, \\sigma^2_{\\delta}, \\sigma^2_{\\alpha})\ndiag(W(modelfit)) \n\n [1] 2.365869e+03 1.396084e-03 2.936537e+02 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\n\n\nResult! 상태방정식의 추정된 오차의 분산은 \\(\\sigma^2_{\\mu} = 1.147318e+03\\) (추세의 수준), \\(\\sigma^2_{\\delta} = 8.623064e-16\\) (추세의 기울기), \\(\\sigma^2_{\\alpha} = 6.566027\\) (계절성)이다.\n\n\n10.2.3 상태 추정\n\nDLM은 Kalman Filtering과 Kalman Smoothing방법을 이용하여 관측할 수 없는 상태 \\(\\theta_{t}\\)를 추정할 수 있다.\n\nKalman Filtering : 과거와 현재의 관측값(\\(y_{1},\\ldots,y_{t}\\))을 이용하여 상태의 현재값(\\(\\theta_{t}\\))을 추정\nKalman Smoothing : 주어진 모든 관측값 (\\(y_{1},\\ldots,y_{T}\\))을 이용하여 상태의 과거값(\\(\\theta_{t}\\))을 추정\n\n\n\n10.2.3.1 Kalman Filtering\n\n함수 dlmFilter()를 이용하여 Kalman Filtering을 수행할 수 있다.\n\n\nfiltering &lt;- dlmFilter(train.ts, \n                       modelfit)\n\n# 구조 확인\nstr(filtering, 1)             \n\nList of 9\n $ y  : Time-Series [1:122] from 1991 to 2001: 1621 1973 1812 1975 1862 ...\n $ mod:List of 10\n  ..- attr(*, \"class\")= chr \"dlm\"\n $ m  : Time-Series [1:123, 1:13] from 1991 to 2001: 0 249 1748 2094 2330 ...\n $ U.C:List of 123\n $ D.C: num [1:123, 1:13] 3162.278 0.405 0.405 0.405 0.405 ...\n $ a  : Time-Series [1:122, 1:13] from 1991 to 2001: 0 374 2432 2652 2783 ...\n $ U.R:List of 122\n $ D.R: num [1:122, 1:13] 10916 8163 5193 4498 4165 ...\n $ f  : Time-Series [1:122] from 1991 to 2001: 0 249 2354 2563 2686 ...\n - attr(*, \"class\")= chr \"dlmFiltered\"\n\n\nResult! 함수 dlmFilter()는 9개의 결과를 리스트로 반환한다.\n\ny : 시계열의 관측값\nmod : 모수 추정에서 추정된 모형\nm : Filtering 분포 \\(\\pi(\\theta_t|y_{1:t})\\)의 평균\n\n즉, \\(\\theta_t|y_{1:t} \\sim N(m_t, C_t)\\)의 \\(E(\\theta_t|y_{1:t})=m_t\\)\n\nU.C/D.C : Filtering 분포 \\(\\pi(\\theta_t|y_{1:t})\\)의 공분산행렬의 특이값 분해\n\n즉, \\(\\theta_t|y_{1:t} \\sim N(m_t, C_t)\\)의 \\(C_t\\)의 특이값 분해\n\na : 예측 분포 \\(\\pi(\\theta_{t+1}|y_{1:t})\\)의 평균\n\n즉, \\(\\theta_{t+1}|y_{1:t} \\sim N(a_{t+1}, R_{t+1})\\)의 \\(E(\\theta_{t+1}|y_{1:t})=a_{t+1}\\)\n\\(a_{t+1} = E(\\theta_{t+1}|y_{1:t})=G_{t+1} m_{t}\\)\n\nU.R/D.R : 예측 분포 \\(\\pi(\\theta_{t+1}|y_{1:t})\\)의 공분산행렬의 특이값 분해\n\n즉, \\(\\theta_{t+1}|y_{1:t} \\sim N(a_{t+1}, R_{t+1})\\)의 \\(R_t\\)의 특이값 분해\n\nf : 1시점 앞선 시계열 예측값\n\n\\(f_{t+1} = E(Y_{t+1}|y_{1:t})=F_{t+1}a_{t+1}\\)\n\n\n\n# 상태(추세의 수준/기울기와 계절성)의 추정값\nfiltering$m\n\n              [,1]         [,2]        [,3]        [,4]         [,5]          [,6]        [,7]        [,8]        [,9]       [,10]        [,11]       [,12]       [,13]\nJan 1991    0.0000   0.00000000    0.000000    0.000000    0.0000000    0.00000000    0.000000    0.000000    0.000000    0.000000    0.0000000    0.000000    0.000000\nFeb 1991  249.3453 124.65787116 1371.240719 -124.657901 -124.6579011 -124.65790107 -124.657901 -124.657901 -124.657901 -124.657901 -124.6579011 -124.657901 -124.657901\nMar 1991 1748.0503 683.53937734  224.664680  556.146687  -78.0802478  -78.08024776  -78.080248  -78.080248  -78.080248  -78.080248  -78.0802478  -78.080248  -78.080248\nApr 1991 2093.9097 557.90534884 -282.244677  436.664828  642.5196232  -88.54949581  -88.549496  -88.549496  -88.549496  -88.549496  -88.5494958  -88.549496  -88.549496\nMay 1991 2330.2097 453.21176126 -355.245708  -65.393985  548.8142709  649.99641284  -97.272321  -97.272321  -97.272321  -97.272321  -97.2723209  -97.272321  -97.272321\nJun 1991 2377.0768 339.11069517 -514.720817  -63.098645  112.6268682  612.75328153  599.870955 -106.777660 -106.777660 -106.777660 -106.7776600 -106.777660 -106.777660\nJul 1991 2415.6172 265.98525451 -475.757172 -287.361774   91.1043355  193.71170997  620.740609  534.764098 -112.868744 -112.868744 -112.8687439 -112.868744 -112.868744\nAug 1991 2453.5634 217.40983705 -440.299388 -296.370061 -156.5831906  173.30628969  227.357440  605.839032  471.312644 -116.914453 -116.9144527 -116.914453 -116.914453\nSep 1991 2309.5636 149.22832266 -713.906601 -147.211186  -71.5325832    0.05810040  261.789797  247.705441  558.057684  355.391983 -122.5924989 -122.592499 -122.592499\nOct 1991 2246.1025 113.30940308 -521.178445 -537.229631   -6.5042216   33.23837333   68.918544  294.756726  244.787363  519.254617  280.6954521 -125.583464 -125.583464\nNov 1991 2179.4267  85.83962953 -503.759696 -368.751997 -412.3252840   90.90811726  103.182292  111.411131  309.808576  232.402578  479.4308083  213.423737 -127.870653\nDec 1991 2168.1663  72.33496290 -354.303306 -420.217645 -298.7478885 -355.84228822  133.883629  132.660753  127.399781  312.311465  221.4205642  454.961559  175.461728\nJan 1992 2101.2096  54.55345180 -486.382560 -232.877315 -316.6282889 -212.97030860 -287.855841  184.095379  165.110035  142.094624  309.2556943  200.613807  416.399243\nFeb 1992 1766.8726  -5.25146380 -209.784577 -157.480906   36.1145673 -107.48136035  -63.617675 -198.260991  213.954820  135.242309   52.4938410  159.901834   -8.527289\nMar 1992 1750.1532  -5.99503727  141.070698 -205.561745 -154.0022940   38.84908985 -105.490262  -62.369511 -197.755447  213.717881  134.2628499   50.771649  157.436519\nApr 1992 1894.6290   1.86628244   61.340343   82.365696 -241.2268145 -181.80372014   18.906177 -117.579594  -66.608336 -194.144981  225.1782789  153.575677   77.941260\nMay 1992 1765.9015  -5.06390065  118.822684  111.978579  113.0337353 -216.54709440 -164.052289   29.733809 -113.673011  -69.621693 -204.0788026  208.321829  129.792798\nJun 1992 1630.2745 -12.07819736   -7.222357  169.244098  142.3171624  137.44151611 -198.364653 -152.878257   33.902350 -116.508788  -79.4622689 -220.926319  184.463575\nJul 1992 1737.3325  -5.66893087  165.967220  -53.214285  141.5886469  120.08361640  120.881864 -208.607105 -156.719201   36.461825 -107.5484606  -64.099141 -199.156927\nAug 1992 1772.4837  -3.47364434  224.225096  150.207920  -62.6916243  133.96826044  114.406495  117.369763 -209.919605 -155.839361   39.5341539 -102.282974  -56.639310\nSep 1992 1854.5868   1.12782084 -150.696426  191.186298  130.3381632  -78.66913130  122.063880  107.040109  114.615277 -208.071426 -149.3954016   50.575296  -86.642160\nOct 1992 1853.4477   1.00594032  -43.447565 -149.821257  191.7126348  130.76140342  -78.353779  122.259032  107.113103  114.566345 -208.2421492 -149.687896   50.160964\nNov 1992 1917.7940   4.41138296  -56.197974  -67.901465 -164.5281490  179.88638541  121.949671  -83.806931  120.219146  108.479958  119.3363419 -200.068904 -138.110268\nDec 1992 1849.6787   0.51213508   25.448910  -28.197522  -51.0616398 -150.98673577  189.976097  128.193717  -81.471169  118.654097  103.0182215  109.977786 -213.325630\nJan 1993 1853.7520   0.70359094 -148.493245   24.074062  -29.0243751  -51.72653407 -151.482145  189.669516  128.079040  -81.394310  118.9222904  103.477756  110.628717\nFeb 1993 1838.8568  -0.13509787 -220.320589 -142.470754   27.6961444  -26.11179442  -49.556423 -150.139231  190.171765  127.742230  -82.5692945  116.909091  100.626101\nMar 1993 1763.6489  -3.02606983   73.066851 -196.454632 -130.1295239   37.86164067  -18.305218  -44.577762 -148.063440  189.351579  124.0278608  -89.149341  107.639604\nApr 1993 1831.7387  -0.71659222  125.297919   50.037412 -206.2885216 -137.84880140   31.907418  -22.039473  -45.994611 -147.165051  192.5637951  129.527840  -81.539897\nMay 1993 1813.2481  -1.28697484  103.938488  131.075337   52.5083328 -204.38805981 -136.390650   32.818402  -21.700338  -46.227255 -147.9691936  191.194657  127.638205\nJun 1993 1918.9558   2.19040626  -36.567346   69.285142  116.3811007   41.16469450 -213.349406 -142.066193   30.635031  -20.394363  -41.4367642 -139.733838  202.606662\nJul 1993 1836.0843  -0.58657333   96.932256   -9.043531   80.9228582  125.34442631   48.259064 -208.785112 -140.275555   29.637398  -24.1757219  -47.969401 -148.804329\nAug 1993 1809.4165  -1.43824449  186.752798  105.371159   -5.4758051   83.67030358  127.518638   49.657980 -208.235129 -140.580444   28.4787204  -26.178225  -50.750275\nSep 1993 1818.5346  -1.09363928 -145.694533  183.337103  103.9269617   -6.58810629   82.789890  126.951936   49.435100 -208.111288 -140.1110051   29.289582  -25.052429\nOct 1993 1807.3405  -1.42330478  -54.512645 -142.426350  184.7189727  104.99132214   -5.745560   83.332339  127.165456   49.316755 -208.5606900 -140.887103   28.212209\nNov 1993 1763.9955  -2.79177823  -43.614765  -40.947909 -136.6908928  189.13639312  108.487880   -3.494792   84.217615  126.673148   47.4509191 -211.780820 -145.357598\nDec 1993 1724.2419  -4.00048774   10.053441  -31.651815  -35.8888492 -132.79609234  192.217050  110.467949   -2.721028   83.774018  125.0167406   44.605919 -215.711048\nJan 1994 1713.5843  -4.21888537 -150.218746   12.209672  -30.7391888  -35.18663325 -132.241250  192.572961  110.605888   -2.803116   83.4725859  124.500655   43.896250\nFeb 1994 1765.5844  -2.41761418 -191.630463 -168.284643    4.6437701  -36.57461435  -39.824326 -135.242687  191.369590  111.217477   -0.3866705   87.645511  130.272236\nMar 1994 1827.8127  -0.67758892   74.820311 -211.214241 -175.5286361   -0.91988446  -41.141897  -42.857388 -136.539010  191.832778  113.4236691    3.470690   92.897572\nApr 1994 1738.8892  -2.77157604   95.007056  101.673124 -202.3229375 -169.17821264    4.335551  -37.654904  -41.445736 -137.248370  189.0220636  108.641584   -2.900057\nMay 1994 1738.1420  -2.72482011   92.906785   94.387222  101.4674646 -202.46420655 -169.293115    4.259969  -37.684382  -41.427906 -137.1836112  189.130787  108.785479\nJun 1994 1765.9907  -2.01333650    9.761446   83.562323   91.3025234   99.34222504 -204.217843 -170.458208    3.796449  -37.427091  -40.4562271 -135.542634  191.308165\nJul 1994 1760.0891  -2.10439296  107.419256   10.948549   83.9524424   91.57040256   99.564298 -204.067722 -170.396728    3.765693  -37.5493810  -40.664239 -135.819429\nAug 1994 1727.8215  -2.81182522  178.789288  116.626628   13.9719351   86.02621023   93.288457  100.726974 -203.587118 -170.630517    2.8207764  -39.160561  -42.810129\nSep 1994 1793.3815  -1.20858998 -107.755844  157.918441  109.7729033    9.27037622   82.130574   90.651605   99.637011 -203.056124 -168.4872507    6.473985  -34.295671\nOct 1994 1812.4211  -0.73390158  -33.876986 -113.936726  155.8886364  108.38035333    8.116375   81.349230   90.328337   99.794071 -202.4210285 -167.404867    7.915106\nNov 1994 1810.5842  -0.75978114  -34.589084  -33.540272 -113.8261510  155.96447629  108.443175    8.158871   81.366745   90.319680   99.7594348 -202.479909 -167.483264\nDec 1994 1785.5037  -1.33220678   -2.151407  -27.162114  -31.1001980 -112.15371274  157.348015  109.376618    8.539338   81.167842   89.5474307   98.457940 -204.201269\nJan 1995 1736.0029  -2.46659984 -187.583429   12.559742  -22.3279214  -27.78704565 -109.413467  159.196127  110.128815    8.143236   79.6353222   86.966521   95.047544\nFeb 1995 1710.9408  -2.98257062 -214.013702 -180.735274   14.7725752  -20.81134573  -26.520899 -108.549116  159.562472  109.973371    7.4742774   78.495538   85.442309\nMar 1995 1704.7504  -3.04838181   93.565932 -213.063591 -180.4524653   14.96144914  -20.649271  -26.407602 -108.498969  159.545903  109.8916871    7.334886   78.311466\nApr 1995 1663.2292  -3.76763978   69.669491  104.970256 -209.8815387 -178.48474963   16.654718  -19.458091  -25.895871 -108.716321  158.6169235  108.344204    5.338387\nMay 1995 1683.6510  -3.32966691   88.691727   62.461383  102.9562583 -211.07748697 -179.488697   15.956620  -19.746145  -25.741467 -108.1289309  159.579172  109.573893\nJun 1995 1734.2669  -2.35140530   26.935002   72.621494   57.9754925  100.29087798 -213.320830 -181.052075   15.308771  -19.405394  -24.4333805 -105.983318  162.322705\nJul 1995 1697.1052  -2.98656200   94.553110   37.295387   75.5009517   59.68038731  101.733725 -212.300852 -180.617378   15.102797  -20.2403203  -25.813112 -107.752783\nAug 1995 1706.7940  -2.75467194  168.024763   90.781562   36.2487044   74.88265396   59.157445  101.363113 -212.460896 -180.545024   15.4045973  -19.739394  -25.169586\nSep 1995 1686.4345  -3.07683896 -115.123873  173.262974   92.2351165   37.10715314   75.608553   59.671784  101.585267 -212.561100 -180.9637594   14.709228  -20.632940\nOct 1995 1675.1803  -3.22649717  -28.231568 -112.690747  173.9381321   92.63383500   37.444285   75.847400   59.774914  101.538704 -212.7555580 -181.286691   14.294235\nNov 1995 1687.0036  -2.95063815  -14.374044  -32.709821 -113.9333802  173.20468035   92.014213   37.006094   75.659469   59.862413  101.8971534 -212.162562 -180.524933\nDec 1995 1654.7281  -3.48983259    2.119679   -5.645541  -30.2865959 -112.50393100  174.410559   92.864670   37.366774   75.481567   59.1568606  100.739552 -213.641390\nJan 1996 1587.7154  -4.65446994 -205.951328   21.019064   -0.4040093  -27.19432358 -109.892340  176.255737   93.652638   36.992334   73.9679329   56.663371   97.540154\nFeb 1996 1576.2846  -4.77497206 -215.432000 -203.946921   21.5653547   -0.08322648  -26.920452 -109.696243  176.342882   93.619931   36.8428827   73.718260   56.337703\nMar 1996 1493.1638  -6.06911468   65.418749 -192.509909 -198.0246234   24.91839554    2.839116  -24.782333 -108.713697  176.040634   92.0783895   34.271249   70.384613\nApr 1996 1532.0447  -5.37686235   76.370979   52.267680 -195.7767149 -199.74679037   23.423418    1.737097  -25.279799 -108.526832  176.8872837   93.459689   36.023822\nMay 1996 1598.4896  -4.30537129   98.199485   55.277301   47.0236084 -198.44157669 -201.996235   21.787852    1.027659  -24.936310 -107.1654830  179.067774   96.194668\nJun 1996 1640.5002  -3.61657652   52.678335   84.590109   51.8883561   45.30317367 -199.886758 -203.042203   21.338217    1.254501  -24.0556269 -105.758830  180.829808\nJul 1996 1710.7735  -2.51241732  124.735386   30.980166   79.2040490   49.16221973   43.002655 -201.568590 -203.780927   21.680895    2.6464454  -21.818379 -102.949111\nAug 1996 1747.8541  -1.91883640  194.715101  113.111908   28.1000650   77.75106685   47.936463   42.103407 -201.969230 -203.605184   22.4196552    3.840402  -20.315403\nSep 1996 1681.5357  -2.88530371 -130.128556  213.620308  117.7945860   30.46023393   79.740721   49.395480   42.754035 -202.252587 -204.8026981   20.481353    1.398308\nOct 1996 1697.3902  -2.60387559  -10.884024 -135.629818  212.2578487  117.10818195   29.881896   79.316978   49.206882   42.836693 -201.9046222 -204.239494   21.191235\nNov 1996 1609.7343  -3.88368492  -33.522118   14.085649 -129.4457855  215.37099671  119.727840   31.796656   80.162153   48.822178   41.2548368 -204.454025 -207.450317\nDec 1996 1656.3657  -3.12187946   44.062403  -48.355023   10.4107182 -131.29515113  213.816586  118.594114   31.300359   80.397888   49.7680725   42.770661 -202.551689\nJan 1997 1619.2594  -3.63160237 -222.668114   54.034551  -45.8892447   11.65120340 -130.249995  214.581777  118.933770   31.151101   79.7734494   48.758755   41.493418\nFeb 1997 1585.5104  -4.07091586 -213.817473 -213.867420   56.1771640  -44.82120961   12.560804 -129.574701  214.893368  118.826723   30.6389259   78.931896   47.673269\nMar 1997 1640.9183  -3.24966155   66.597950 -231.093810 -217.9260095   54.23368192  -46.499466   11.290439 -130.177828  215.067128  119.7456106   32.147793   80.878020\nApr 1997 1617.1658  -3.51775348   37.440159   72.552213 -229.7296397 -217.31258774   54.758173  -46.100057   11.477642 -130.241885  214.7624039  119.255424   31.526649\nMay 1997 1661.8689  -2.90551659  101.029441   23.398454   69.3335939 -231.13152764 -218.477017   53.884872  -46.493443   11.653355 -129.5203350  215.900444  120.679587\nJun 1997 1721.0658  -2.12196638   54.728211   82.931089   19.2385250   67.52452153 -232.620233 -219.583055   53.396047  -46.254550   12.5893212 -128.053399  217.730572\nJul 1997 1788.0345  -1.24757999  146.177861   34.600215   78.3130700   17.23437494   65.870384 -233.856628 -220.137016   53.652148  -45.2201114   14.217667 -126.018059\nAug 1997 1791.1374  -1.19233500  216.917151  144.910757   34.3100124   78.18759917   17.130823   65.792684 -233.891922 -220.121602   53.7166030  -45.118062   14.345568\nSep 1997 1755.8354  -1.62622658 -139.908138  226.850981  147.1844912   35.29128152   78.996472   17.737514   66.068755 -234.011091 -220.6240232   52.919314  -46.118834\nOct 1997 1757.1236  -1.58910450   16.786154 -140.756889  226.6567564  147.10075562   35.222338   78.944839   17.714096   66.078980 -233.9682778 -220.556101   53.004630\nNov 1997 1771.9778  -1.37921572  -39.611353   11.997040 -141.8528112  226.18469775  146.712702   34.932505   78.814514   17.773280   66.3209048 -233.586080 -220.076515\nDec 1997 1751.7992  -1.61943348   44.828617  -34.135629   13.2503148 -141.31305155  226.628119  147.043507   35.080630   78.745792   17.4958206   65.883740 -234.133760\nJan 1998 1778.3528  -1.26195877 -208.025533   36.628745  -36.0077066   12.44495202 -141.976957  226.130051  146.816084   35.175056   79.1512355   18.142455   66.702604\nFeb 1998 1685.0759  -2.40088934 -272.376027 -181.324164   42.6461911  -33.45146698   14.572756 -140.357491  226.898541  146.568788   33.9475947   77.156795   15.564283\nMar 1998 1683.9648  -2.38559781   70.676072 -272.748937 -181.4061565   42.61273210  -33.479532   14.551022 -140.368076  226.901421  146.5845698   33.973279   77.190167\nApr 1998 1772.6859  -1.35145473   52.237234   44.338714 -278.4438969 -183.60693310   40.793568  -34.893563   13.870077 -140.151294  227.9764782  148.301474   36.174698\nMay 1998 1770.3008  -1.36288048   72.988288   52.536612   44.4034678 -278.41954825 -183.587383   40.808517  -34.886647   13.867173 -140.1635782  227.957266  148.277151\nJun 1998 1783.7862  -1.20007428   42.176355   68.684087   51.6028249   44.05287308 -278.697734 -183.797420   40.713893  -34.841450   14.0455425 -139.887232  228.305503\nJul 1998 1809.6617  -0.90279153  158.507709   34.328796   66.9828236   50.96471515   43.545881 -279.081553 -183.971425   40.794841  -34.5172835   14.548858 -139.252349\nAug 1998 1727.2255  -1.80083340  194.427376  182.134072   39.4428325   68.89375411   52.483036   44.699709 -278.551909 -184.205048   39.8288859  -36.025350   12.641215\nSep 1998 1782.4677  -1.17109099 -112.876200  177.899107  178.5592548   38.11065834   67.837036   51.680165   44.330200 -278.391383 -183.5344986   40.878658  -34.694667\nOct 1998 1781.2793  -1.17128231   10.194727 -112.871188  177.9001904  178.55965792   38.110978   67.837278   51.680276   44.330151 -278.3915854 -183.534816   40.878256\nNov 1998 1830.9898  -0.60735189  -14.280690   -4.549089 -116.0590543  176.71531386  177.623182   37.402839   67.515415   51.827732   44.9268661 -277.461556 -182.356141\nDec 1998 1814.4516  -0.78391441   32.303921   -9.664489   -3.5509871 -115.68807655  177.008519  177.844895   37.503612   67.469247   51.6409038   44.635679 -277.830592\nJan 1999 1790.4344  -1.03940009 -191.005143   39.031296   -8.2138313   -3.01291139 -115.261005  177.333805  177.996371   37.443137   67.2046807   51.222402   44.098771\nFeb 1999 1815.2340  -0.76144090 -266.432547 -198.470722   37.4384459   -8.79595768   -3.478690 -115.621085  177.159454  178.049859   37.7163568   67.645834   51.800648\nMar 1999 1796.5634  -0.94746754   35.771392 -261.270299 -197.3885020   37.81905375   -8.490766   -3.239070 -115.502170  177.128576  177.8751815   37.433142   67.271129\nApr 1999 1789.5619  -1.00814394   50.158686   37.516179 -260.9087252 -197.26717863   37.914557   -8.415678   -3.202216 -115.513271  177.0715818  177.784346   37.314013\nMay 1999 1781.6991  -1.07523782   64.799548   52.136914   37.9262048 -260.77432969 -197.164400   37.993973   -8.378266   -3.217222 -115.5782825  176.970236  177.653049\nJun 1999 1813.8916  -0.75253048   50.957170   55.190924   50.1396336   37.27233893 -261.267782 -197.540074   37.822605   -8.297589   -2.8972772 -115.085548  177.604715\nJul 1999 1796.3630  -0.91526044  169.381636   55.802562   56.1981100   50.46936811   37.521176 -261.078343 -197.453666   37.781913   -8.4589358   -3.145754 -115.405501\nAug 1999 1777.7181  -1.08771350  171.285598  174.501536   56.8654858   56.54488204   50.731056   37.721093 -260.986154 -197.495073   37.6130720   -8.720241   -3.483157\nSep 1999 1737.5919  -1.46844476 -130.215130  182.557982  176.8397280   57.62572210   57.117397   51.168451   37.923448 -261.075463 -197.8634002   37.041328   -9.460358\nOct 1999 1785.5309  -0.98547852   18.128288 -144.481430  179.5998854  175.88006324   56.904836   56.567934   50.915459   38.037176 -260.6113896 -197.143634   37.973986\nNov 1999 1839.9062  -0.44333554   10.397393    2.142179 -147.7961433  178.52556077  175.074552   56.292471   56.288124   51.045657   38.5577722 -259.806779 -196.102049\nDec 1999 1812.0391  -0.71166133   24.398543   18.315950    3.7838507 -147.26402511  178.924814  175.378427   56.431861   56.224494   50.7884222   38.159334 -260.323197\nJan 2000 1757.9026  -1.23014227 -216.237355   39.814798   21.5035309    4.81401309 -146.487425  179.521101  175.659775   56.322296   55.7392770   50.024132   37.155671\nFeb 2000 1840.9142  -0.42841761 -223.994430 -240.506635   34.8397386   19.92122450    3.613850 -147.423141  179.061566  175.796159   57.0338288   56.885136   51.562482\nMar 2000 1873.1843  -0.12619943   46.350531 -233.399350 -242.4099038   34.25570998   19.479449    3.264593 -147.598829  179.105596  176.0517676   57.448188   57.448595\nApr 2000 1907.6197   0.18381045   63.869896   36.410786 -235.3942603 -242.99767132   33.820633   19.135736    3.093661 -147.549396  179.3664291  176.468059   58.011686\nMay 2000 1928.3198   0.36399467   63.979158   57.963653   35.2252605 -235.73659528 -243.243873   33.629647   19.044676    3.129039 -147.3933844  179.609722  176.793682\nJun 2000 1945.8822   0.51363546   63.879083   59.024587   56.9666121   34.93760105 -235.940596 -243.399551   33.558095   19.078143    3.2620283 -147.189005  179.881281\nJul 2000 1897.5842   0.08939584  156.416544   77.942071   61.8558584   57.78417514   35.516827 -235.499541 -243.197931   33.461532   18.6994393    2.681237 -147.959874\nAug 2000 1910.1708   0.19826069  187.299024  152.816510   77.2179682   61.64739095   57.636502   35.404039 -235.551583 -243.173996   33.5576371   18.847455    2.878202\nSep 2000 1954.5907   0.58456852 -130.889037  174.561290  150.2566994   76.48381394   61.128621   57.240169   35.220491 -235.468739 -242.8374030   34.077618   19.541397\nOct 2000 1970.2720   0.71678057    6.723532 -135.237492  173.6877613  150.00683004   76.307802   60.994486   57.178364   35.248958 -235.3544055 -242.660966   34.313349\nNov 2000 1965.0085   0.66432520   16.400083    8.446157 -134.8914450  173.78665708  150.076363   76.360664   61.018677   57.166875   35.2036218 -235.424153 -242.754075\nDec 2000 1965.5797   0.66350948   34.573320   16.426909    8.4515447 -134.88990509  173.787741  150.077190   76.361045   61.018502   57.1661719   35.202536 -235.425605\nJan 2001 1937.4344   0.41325144 -254.283589   42.866317   18.0882545    8.92464982 -134.555138  174.045444  150.199808   76.313905   60.8084050   56.835692   34.754343\nFeb 2001 1908.9789   0.16681667 -245.572068 -245.983594   44.5174687   18.55080052    9.253262 -134.298164  174.172872  150.162751   76.1178800   60.492729   56.397763\nMar 2001 1953.8180   0.53876196   54.105604 -258.400931 -248.5111115   43.83235820   18.067487    8.870539 -134.492521  174.220432  150.4440765   76.574919   61.136842\n\n\nResult! Training Dataset의 각 시점에 대한 상태의 추정값이다. 예제 데이터 Amtrak의 Training Dataset은 1991년 1월부터 시작하는데 출력 결과의 첫 번째 시점이 1990년 12월인 이유는 초기값(\\(m_0\\))에 대한 0시점부터 보여주기 때문이다.\n1열은 추세의 수준 (\\(\\mu_{t}\\)), 2열은 추세의 기울기 (\\(\\delta_{t}\\)), 3열부터 13열은 계절성(\\(\\alpha_t\\))에 대한 추정 결과를 나타낸다.\n\n# 상태(추세의 수준/기울기와 계절성)의 한 시점 예측값\nfiltering$a\n\n              [,1]         [,2]         [,3]        [,4]        [,5]         [,6]          [,7]        [,8]        [,9]       [,10]       [,11]        [,12]       [,13]\nFeb 1991    0.0000   0.00000000    0.0000000    0.000000    0.000000    0.0000000    0.00000000    0.000000    0.000000    0.000000    0.000000    0.0000000    0.000000\nMar 1991  374.0031 124.65787116 -124.6617088 1371.240719 -124.657901 -124.6579011 -124.65790107 -124.657901 -124.657901 -124.657901 -124.657901 -124.6579011 -124.657901\nApr 1991 2431.5897 683.53937734  -78.0891374  224.664680  556.146687  -78.0802478  -78.08024776  -78.080248  -78.080248  -78.080248  -78.080248  -78.0802478  -78.080248\nMay 1991 2651.8150 557.90534884  -88.5438078 -282.244677  436.664828  642.5196232  -88.54949581  -88.549496  -88.549496  -88.549496  -88.549496  -88.5494958  -88.549496\nJun 1991 2783.4215 453.21176126  -97.2647448 -355.245708  -65.393985  548.8142709  649.99641284  -97.272321  -97.272321  -97.272321  -97.272321  -97.2723209  -97.272321\nJul 1991 2716.1875 339.11069517 -106.7656828 -514.720817  -63.098645  112.6268682  612.75328153  599.870955 -106.777660 -106.777660 -106.777660 -106.7776600 -106.777660\nAug 1991 2681.6024 265.98525451 -112.8580872 -475.757172 -287.361774   91.1043355  193.71170997  620.740609  534.764098 -112.868744 -112.868744 -112.8687439 -112.868744\nSep 1991 2670.9732 217.40983705 -116.9049550 -440.299388 -296.370061 -156.5831906  173.30628969  227.357440  605.839032  471.312644 -116.914453 -116.9144527 -116.914453\nOct 1991 2458.7919 149.22832266 -122.5751370 -713.906601 -147.211186  -71.5325832    0.05810040  261.789797  247.705441  558.057684  355.391983 -122.5924989 -122.592499\nNov 1991 2359.4119 113.30940308 -125.5718496 -521.178445 -537.229631   -6.5042216   33.23837333   68.918544  294.756726  244.787363  519.254617  280.6954521 -125.583464\nDec 1991 2265.2663  85.83962953 -127.8596095 -503.759696 -368.751997 -412.3252840   90.90811726  103.182292  111.411131  309.808576  232.402578  479.4308083  213.423737\nJan 1992 2240.5013  72.33496290 -128.9883512 -354.303306 -420.217645 -298.7478885 -355.84228822  133.883629  132.660753  127.399781  312.311465  221.4205642  454.961559\nFeb 1992 2155.7630  54.55345180  119.1455306 -486.382560 -232.877315 -316.6282889 -212.97030860 -287.855841  184.095379  165.110035  142.094624  309.2556943  200.613807\nMar 1992 1761.6211  -5.25146380  147.4454269 -209.784577 -157.480906   36.1145673 -107.48136035  -63.617675 -198.260991  213.954820  135.242309   52.4938410  159.901834\nApr 1992 1744.1582  -5.99503727  -10.9294273  141.070698 -205.561745 -154.0022940   38.84908985 -105.490262  -62.369511 -197.755447  213.717881  134.2628499   50.771649\nMay 1992 1896.4953   1.86628244  182.0560137   61.340343   82.365696 -241.2268145 -181.80372014   18.906177 -117.579594  -66.608336 -194.144981  225.1782789  153.575677\nJun 1992 1760.8376  -5.06390065   56.2894556  118.822684  111.978579  113.0337353 -216.54709440 -164.052289   29.733809 -113.673011  -69.621693 -204.0788026  208.321829\nJul 1992 1618.1963 -12.07819736  107.9939413   -7.222357  169.244098  142.3171624  137.44151611 -198.364653 -152.878257   33.902350 -116.508788  -79.4622689 -220.926319\nAug 1992 1731.6636  -5.66893087  204.3619470  165.967220  -53.214285  141.5886469  120.08361640  120.881864 -208.607105 -156.719201   36.461825 -107.5484606  -64.099141\nSep 1992 1769.0101  -3.47364434 -192.3388143  224.225096  150.207920  -62.6916243  133.96826044  114.406495  117.369763 -209.919605 -155.839361   39.5341539 -102.282974\nOct 1992 1855.7146   1.12782084  -42.3444785 -150.696426  191.186298  130.3381632  -78.66913130  122.063880  107.040109  114.615277 -208.071426 -149.3954016   50.575296\nNov 1992 1854.4537   1.00594032  -87.0208342  -43.447565 -149.821257  191.7126348  130.76140342  -78.353779  122.259032  107.113103  114.566345 -208.2421492 -149.687896\nDec 1992 1922.2054   4.41138296   60.7421893  -56.197974  -67.901465 -164.5281490  179.88638541  121.949671  -83.806931  120.219146  108.479958  119.3363419 -200.068904\nJan 1993 1850.1909   0.51213508 -150.2261312   25.448910  -28.197522  -51.0616398 -150.98673577  189.976097  128.193717  -81.471169  118.654097  103.0182215  109.977786\nFeb 1993 1854.4556   0.70359094 -212.7307723 -148.493245   24.074062  -29.0243751  -51.72653407 -151.482145  189.669516  128.079040  -81.394310  118.9222904  103.477756\nMar 1993 1838.7217  -0.13509787  108.0227541 -220.320589 -142.470754   27.6961444  -26.11179442  -49.556423 -150.139231  190.171765  127.742230  -82.5692945  116.909091\nApr 1993 1760.6228  -3.02606983   94.7323809   73.066851 -196.454632 -130.1295239   37.86164067  -18.305218  -44.577762 -148.063440  189.351579  124.0278608  -89.149341\nMay 1993 1831.0221  -0.71659222  111.5419714  125.297919   50.037412 -206.2885216 -137.84880140   31.907418  -22.039473  -45.994611 -147.165051  192.5637951  129.527840\nJun 1993 1811.9611  -1.28697484  -82.4979238  103.938488  131.075337   52.5083328 -204.38805981 -136.390650   32.818402  -21.700338  -46.227255 -147.9691936  191.194657\nJul 1993 1921.1462   2.19040626  133.4752811  -36.567346   69.285142  116.3811007   41.16469450 -213.349406 -142.066193   30.635031  -20.394363  -41.4367642 -139.733838\nAug 1993 1835.4978  -0.58657333  197.9576483   96.932256   -9.043531   80.9228582  125.34442631   48.259064 -208.785112 -140.275555   29.637398  -24.1757219  -47.969401\nSep 1993 1807.9783  -1.43824449 -150.2297208  186.752798  105.371159   -5.4758051   83.67030358  127.518638   49.657980 -208.235129 -140.580444   28.4787204  -26.178225\nOct 1993 1817.4410  -1.09363928  -50.1732098 -145.694533  183.337103  103.9269617   -6.58810629   82.789890  126.951936   49.435100 -208.111288 -140.1110051   29.289582\nNov 1993 1805.9172  -1.42330478  -25.6047064  -54.512645 -142.426350  184.7189727  104.99132214   -5.745560   83.332339  127.165456   49.316755 -208.5606900 -140.887103\nDec 1993 1761.2037  -2.79177823   25.9208213  -43.614765  -40.947909 -136.6908928  189.13639312  108.487880   -3.494792   84.217615  126.673148   47.4509191 -211.780820\nJan 1994 1720.2414  -4.00048774 -147.3662862   10.053441  -31.651815  -35.8888492 -132.79609234  192.217050  110.467949   -2.721028   83.774018  125.0167406   44.605919\nFeb 1994 1709.3655  -4.21888537 -216.0690775 -150.218746   12.209672  -30.7391888  -35.18663325 -132.241250  192.572961  110.605888   -2.803116   83.4725859  124.500655\nMar 1994 1763.1668  -2.41761418   46.7948214 -191.630463 -168.284643    4.6437701  -36.57461435  -39.824326 -135.242687  191.369590  111.217477   -0.3866705   87.645511\nApr 1994 1827.1351  -0.67758892  131.7560351   74.820311 -211.214241 -175.5286361   -0.91988446  -41.141897  -42.857388 -136.539010  191.832778  113.4236691    3.470690\nMay 1994 1736.1176  -2.77157604   92.0708383   95.007056  101.673124 -202.3229375 -169.17821264    4.335551  -37.654904  -41.445736 -137.248370  189.0220636  108.641584\nJun 1994 1735.4172  -2.72482011   -2.8844867   92.906785   94.387222  101.4674646 -202.46420655 -169.293115    4.259969  -37.684382  -41.427906 -137.1836112  189.130787\nJul 1994 1763.9774  -2.01333650  109.0288718    9.761446   83.562323   91.3025234   99.34222504 -204.217843 -170.458208    3.796449  -37.427091  -40.4562271 -135.542634\nAug 1994 1757.9847  -2.10439296  191.2768582  107.419256   10.948549   83.9524424   91.57040256   99.564298 -204.067722 -170.396728    3.765693  -37.5493810  -40.664239\nSep 1994 1725.0097  -2.81182522 -136.0619423  178.789288  116.626628   13.9719351   86.02621023   93.288457  100.726974 -203.587118 -170.630517    2.8207764  -39.160561\nOct 1994 1792.1729  -1.20858998  -42.2600063 -107.755844  157.918441  109.7729033    9.27037622   82.130574   90.651605   99.637011 -203.056124 -168.4872507    6.473985\nNov 1994 1811.6872  -0.73390158  -34.1324991  -33.876986 -113.936726  155.8886364  108.38035333    8.116375   81.349230   90.328337   99.794071 -202.4210285 -167.404867\nDec 1994 1809.8244  -0.75978114    7.9062983  -34.589084  -33.540272 -113.8261510  155.96447629  108.443175    8.158871   81.366745   90.319680   99.7594348 -202.479909\nJan 1995 1784.1715  -1.33220678 -167.6684824   -2.151407  -27.162114  -31.1001980 -112.15371274  157.348015  109.376618    8.539338   81.167842   89.5474307   98.457940\nFeb 1995 1733.5363  -2.46659984 -204.5654429 -187.583429   12.559742  -22.3279214  -27.78704565 -109.413467  159.196127  110.128815    8.143236   79.6353222   86.966521\nMar 1995 1707.9582  -2.98257062   94.9097924 -214.013702 -180.735274   14.7725752  -20.81134573  -26.520899 -108.549116  159.562472  109.973371    7.4742774   78.495538\nApr 1995 1701.7020  -3.04838181   85.4605753   93.565932 -213.063591 -180.4524653   14.96144914  -20.649271  -26.407602 -108.498969  159.545903  109.8916871    7.334886\nMay 1995 1659.4615  -3.76763978   78.8425910   69.669491  104.970256 -209.8815387 -178.48474963   16.654718  -19.458091  -25.895871 -108.716321  158.6169235  108.344204\nJun 1995 1680.3213  -3.32966691    4.9636751   88.691727   62.461383  102.9562583 -211.07748697 -179.488697   15.956620  -19.746145  -25.741467 -108.1289309  159.579172\nJul 1995 1731.9155  -2.35140530  108.7406545   26.935002   72.621494   57.9754925  100.29087798 -213.320830 -181.052075   15.308771  -19.405394  -24.4333805 -105.983318\nAug 1995 1694.1186  -2.98656200  162.8580882   94.553110   37.295387   75.5009517   59.68038731  101.733725 -212.300852 -180.617378   15.102797  -20.2403203  -25.813112\nSep 1995 1704.0394  -2.75467194 -107.9479390  168.024763   90.781562   36.2487044   74.88265396   59.157445  101.363113 -212.460896 -180.545024   15.4045973  -19.739394\nOct 1995 1683.3577  -3.07683896  -24.8984041 -115.123873  173.262974   92.2351165   37.10715314   75.608553   59.671784  101.585267 -212.561100 -180.9637594   14.709228\nNov 1995 1671.9538  -3.22649717  -20.5069412  -28.231568 -112.690747  173.9381321   92.63383500   37.444285   75.847400   59.774914  101.538704 -212.7555580 -181.286691\nDec 1995 1684.0530  -2.95063815   14.0607182  -14.374044  -32.709821 -113.9333802  173.20468035   92.014213   37.006094   75.659469   59.862413  101.8971534 -212.162562\nJan 1996 1651.2383  -3.48983259 -180.0622042    2.119679   -5.645541  -30.2865959 -112.50393100  174.410559   92.864670   37.366774   75.481567   59.1568606  100.739552\nFeb 1996 1583.0609  -4.65446994 -212.6492299 -205.951328   21.019064   -0.4040093  -27.19432358 -109.892340  176.255737   93.652638   36.992334   73.9679329   56.663371\nMar 1996 1571.5097  -4.77497206   97.6518295 -215.432000 -203.946921   21.5653547   -0.08322648  -26.920452 -109.696243  176.342882   93.619931   36.8428827   73.718260\nApr 1996 1487.0947  -6.06911468   58.0794167   65.418749 -192.509909 -198.0246234   24.91839554    2.839116  -24.782333 -108.713697  176.040634   92.0783895   34.271249\nMay 1996 1526.6678  -5.37686235   69.1601678   76.370979   52.267680 -195.7767149 -199.74679037   23.423418    1.737097  -25.279799 -108.526832  176.8872837   93.459689\nJun 1996 1594.1843  -4.30537129   33.9612582   98.199485   55.277301   47.0236084 -198.44157669 -201.996235   21.787852    1.027659  -24.936310 -107.1654830  179.067774\nJul 1996 1636.8836  -3.61657652   94.8609163   52.678335   84.590109   51.8883561   45.30317367 -199.886758 -203.042203   21.338217    1.254501  -24.0556269 -105.758830\nAug 1996 1708.2611  -2.51241732  178.7051905  124.735386   30.980166   79.2040490   49.16221973   43.002655 -201.568590 -203.780927   21.680895    2.6464454  -21.818379\nSep 1996 1745.9353  -1.91883640 -104.0882515  194.715101  113.111908   28.1000650   77.75106685   47.936463   42.103407 -201.969230 -203.605184   22.4196552    3.840402\nOct 1996 1678.6504  -2.88530371  -18.4611841 -130.128556  213.620308  117.7945860   30.46023393   79.740721   49.395480   42.754035 -202.252587 -204.8026981   20.481353\nNov 1996 1694.7863  -2.60387559    0.8582437  -10.884024 -135.629818  212.2578487  117.10818195   29.881896   79.316978   49.206882   42.836693 -201.9046222 -204.239494\nDec 1996 1605.8506  -3.88368492   23.6519356  -33.522118   14.085649 -129.4457855  215.37099671  119.727840   31.796656   80.162153   48.822178   41.2548368 -204.454025\nJan 1997 1653.2439  -3.12187946 -208.9189373   44.062403  -48.355023   10.4107182 -131.29515113  213.816586  118.594114   31.300359   80.397888   49.7680725   42.770661\nFeb 1997 1615.6278  -3.63160237 -201.5706720 -222.668114   54.034551  -45.8892447   11.65120340 -130.249995  214.581777  118.933770   31.151101   79.7734494   48.758755\nMar 1997 1581.4395  -4.07091586   42.3786531 -213.817473 -213.867420   56.1771640  -44.82120961   12.560804 -129.574701  214.893368  118.826723   30.6389259   78.931896\nApr 1997 1637.6686  -3.24966155   45.7364910   66.597950 -231.093810 -217.9260095   54.23368192  -46.499466   11.290439 -130.177828  215.067128  119.7456106   32.147793\nMay 1997 1613.6481  -3.51775348   81.6115054   37.440159   72.552213 -229.7296397 -217.31258774   54.758173  -46.100057   11.477642 -130.241885  214.7624039  119.255424\nJun 1997 1658.9634  -2.90551659   29.7425753  101.029441   23.398454   69.3335939 -231.13152764 -218.477017   53.884872  -46.493443   11.653355 -129.5203350  215.900444\nJul 1997 1718.9438  -2.12196638  118.3729505   54.728211   82.931089   19.2385250   67.52452153 -232.620233 -219.583055   53.396047  -46.254550   12.5893212 -128.053399\nAug 1997 1786.7869  -1.24757999  215.1660950  146.177861   34.600215   78.3130700   17.23437494   65.870384 -233.856628 -220.137016   53.652148  -45.2201114   14.217667\nSep 1997 1789.9451  -1.19233500 -126.1796114  216.917151  144.910757   34.3100124   78.18759917   17.130823   65.792684 -233.891922 -220.121602   53.7166030  -45.118062\nOct 1997 1754.2092  -1.62622658   15.6132778 -139.908138  226.850981  147.1844912   35.29128152   78.996472   17.737514   66.068755 -234.011091 -220.6240232   52.919314\nNov 1997 1755.5345  -1.58910450  -46.2272812   16.786154 -140.756889  226.6567564  147.10075562   35.222338   78.944839   17.714096   66.078980 -233.9682778 -220.556101\nDec 1997 1770.5985  -1.37921572   52.3911162  -39.611353   11.997040 -141.8528112  226.18469775  146.712702   34.932505   78.814514   17.773280   66.3209048 -233.586080\nJan 1998 1750.1798  -1.61943348 -219.3740998   44.828617  -34.135629   13.2503148 -141.31305155  226.628119  147.043507   35.080630   78.745792   17.4958206   65.883740\nFeb 1998 1777.0909  -1.26195877 -235.1809860 -208.025533   36.628745  -36.0077066   12.44495202 -141.976957  226.130051  146.816084   35.175056   79.1512355   18.142455\nMar 1998 1682.6750  -2.40088934   70.1542012 -272.376027 -181.324164   42.6461911  -33.45146698   14.572756 -140.357491  226.898541  146.568788   33.9475947   77.156795\nApr 1998 1681.5792  -2.38559781   15.5134379   70.676072 -272.748937 -181.4061565   42.61273210  -33.479532   14.551022 -140.368076  226.901421  146.5845698   33.973279\nMay 1998 1771.3345  -1.35145473   73.4034435   52.237234   44.338714 -278.4438969 -183.60693310   40.793568  -34.893563   13.870077 -140.151294  227.9764782  148.301474\nJun 1998 1768.9379  -1.36288048   36.2186804   72.988288   52.536612   44.4034678 -278.41954825 -183.587383   40.808517  -34.886647   13.867173 -140.1635782  227.957266\nJul 1998 1782.5861  -1.20007428  147.6427564   42.176355   68.684087   51.6028249   44.05287308 -278.697734 -183.797420   40.713893  -34.841450   14.0455425 -139.887232\nAug 1998 1808.7589  -0.90279153  227.1489870  158.507709   34.328796   66.9828236   50.96471515   43.545881 -279.081553 -183.971425   40.794841  -34.5172835   14.548858\nSep 1998 1725.4247  -1.80083340 -135.7685747  194.427376  182.134072   39.4428325   68.89375411   52.483036   44.699709 -278.551909 -184.205048   39.8288859  -36.025350\nOct 1998 1781.2966  -1.17109099   10.2016681 -112.876200  177.899107  178.5592548   38.11065834   67.837036   51.680165   44.330200 -278.391383 -183.5344986   40.878658\nNov 1998 1780.1080  -1.17128231  -34.6939265   10.194727 -112.871188  177.9001904  178.55965792   38.110978   67.837278   51.680276   44.330151 -278.3915854 -183.534816\nDec 1998 1830.3824  -0.60735189   38.6951836  -14.280690   -4.549089 -116.0590543  176.71531386  177.623182   37.402839   67.515415   51.827732   44.9268661 -277.461556\nJan 1999 1813.6677  -0.78391441 -181.6726334   32.303921   -9.664489   -3.5509871 -115.68807655  177.008519  177.844895   37.503612   67.469247   51.6409038   44.635679\nFeb 1999 1789.3950  -1.03940009 -276.8375726 -191.005143   39.031296   -8.2138313   -3.01291139 -115.261005  177.333805  177.996371   37.443137   67.2046807   51.222402\nMar 1999 1814.4726  -0.76144090   42.9884043 -266.432547 -198.470722   37.4384459   -8.79595768   -3.478690 -115.621085  177.159454  178.049859   37.7163568   67.645834\nApr 1999 1795.6159  -0.94746754   52.5923338   35.771392 -261.270299 -197.3885020   37.81905375   -8.490766   -3.239070 -115.502170  177.128576  177.8751815   37.433142\nMay 1999 1788.5538  -1.00814394   67.5477057   50.158686   37.516179 -260.9087252 -197.26717863   37.914557   -8.415678   -3.202216 -115.513271  177.0715818  177.784346\nJun 1999 1780.6239  -1.07523782   37.6325761   64.799548   52.136914   37.9262048 -260.77432969 -197.164400   37.993973   -8.378266   -3.217222 -115.5782825  176.970236\nJul 1999 1813.1391  -0.75253048  176.1008838   50.957170   55.190924   50.1396336   37.27233893 -261.267782 -197.540074   37.822605   -8.297589   -2.8972772 -115.085548\nAug 1999 1795.4477  -0.91526044  178.3874349  169.381636   55.802562   56.1981100   50.46936811   37.521176 -261.078343 -197.453666   37.781913   -8.4589358   -3.145754\nSep 1999 1776.6304  -1.08771350 -114.5780963  171.285598  174.501536   56.8654858   56.54488204   50.731056   37.721093 -260.986154 -197.495073   37.6130720   -8.720241\nOct 1999 1736.1235  -1.46844476   -1.6597045 -130.215130  182.557982  176.8397280   57.62572210   57.117397   51.168451   37.923448 -261.075463 -197.8634002   37.041328\nNov 1999 1784.5454  -0.98547852  -11.7711736   18.128288 -144.481430  179.5998854  175.88006324   56.904836   56.567934   50.915459   38.037176 -260.6113896 -197.143634\nDec 1999 1839.4629  -0.44333554   35.3812631   10.397393    2.142179 -147.7961433  178.52556077  175.074552   56.292471   56.288124   51.045657   38.5577722 -259.806779\nJan 2000 1811.3275  -0.71166133 -194.8184739   24.398543   18.315950    3.7838507 -147.26402511  178.924814  175.378427   56.431861   56.224494   50.7884222   38.159334\nFeb 2000 1756.6724  -1.23014227 -257.8298141 -216.237355   39.814798   21.5035309    4.81401309 -146.487425  179.521101  175.659775   56.322296   55.7392770   50.024132\nMar 2000 1840.4858  -0.42841761   33.2102209 -223.994430 -240.506635   34.8397386   19.92122450    3.613850 -147.423141  179.061566  175.796159   57.0338288   56.885136\nApr 2000 1873.0581  -0.12619943   50.0036545   46.350531 -233.399350 -242.4099038   34.25570998   19.479449    3.264593 -147.598829  179.105596  176.0517676   57.448188\nMay 2000 1907.8035   0.18381045   55.7644415   63.869896   36.410786 -235.3942603 -242.99767132   33.820633   19.135736    3.093661 -147.549396  179.3664291  176.468059\nJun 2000 1928.6838   0.36399467   56.9990142   63.979158   57.963653   35.2252605 -235.73659528 -243.243873   33.629647   19.044676    3.129039 -147.3933844  179.609722\nJul 2000 1946.3959   0.51363546  175.9417227   63.879083   59.024587   56.9666121   34.93760105 -235.940596 -243.399551   33.558095   19.078143    3.2620283 -147.189005\nAug 2000 1897.6736   0.08939584  182.2996618  156.416544   77.942071   61.8558584   57.78417514   35.516827 -235.499541 -243.197931   33.461532   18.6994393    2.681237\nSep 2000 1910.3690   0.19826069 -148.5791508  187.299024  152.816510   77.2179682   61.64739095   57.636502   35.404039 -235.551583 -243.173996   33.5576371   18.847455\nOct 2000 1955.1753   0.58456852    0.6850807 -130.889037  174.561290  150.2566994   76.48381394   61.128621   57.240169   35.220491 -235.468739 -242.8374030   34.077618\nNov 2000 1970.9888   0.71678057   18.7917812    6.723532 -135.237492  173.6877613  150.00683004   76.307802   60.994486   57.178364   35.248958 -235.3544055 -242.660966\nDec 2000 1965.6728   0.66432520   34.6105752   16.400083    8.446157 -134.8914450  173.78665708  150.076363   76.360664   61.018677   57.166875   35.2036218 -235.424153\nJan 2001 1966.2432   0.66350948 -242.7494500   34.573320   16.426909    8.4515447 -134.88990509  173.787741  150.077190   76.361045   61.018502   57.1661719   35.202536\nFeb 2001 1937.8477   0.41325144 -233.9980920 -254.283589   42.866317   18.0882545    8.92464982 -134.555138  174.045444  150.199808   76.313905   60.8084050   56.835692\nMar 2001 1909.1457   0.16681667   36.1883008 -245.572068 -245.983594   44.5174687   18.55080052    9.253262 -134.298164  174.172872  150.162751   76.1178800   60.492729\n\n\nResult! Training Dataset의 각 시점에 대한 상태의 예측값이다. 첫 번째 시점의 추정값이 모두 0인 이유는 \\(a_1 = G_1 m_0 = 0\\)이기 때문이다. 1열은 추세의 수준 (\\(\\mu_{t}\\)), 2열은 추세의 기울기 (\\(\\delta_{t}\\)), 3열부터 13열은 계절성(\\(\\alpha_t\\))에 대한 예측 결과를 나타낸다.\n\n# Kalman Filtering에 의한 시계열 추정값\nfiltering$f\n\n           Jan       Feb       Mar       Apr       May       Jun       Jul       Aug       Sep       Oct       Nov       Dec\n1991              0.0000  249.3414 2353.5005 2563.2712 2686.1567 2609.4218 2568.7444 2554.0683 2336.2168 2233.8400 2137.4067\n1992 2111.5129 2274.9086 1909.0666 1733.2287 2078.5513 1817.1270 1726.1903 1936.0255 1576.6713 1813.3701 1767.4328 1982.9476\n1993 1699.9647 1641.7248 1946.7445 1855.3552 1942.5641 1729.4632 2054.6215 2033.4554 1657.7486 1767.2677 1780.3125 1787.1246\n1994 1572.8751 1493.2964 1809.9616 1958.8911 1828.1884 1732.5327 1873.0062 1949.2616 1588.9478 1749.9129 1777.5547 1817.7307\n1995 1616.5030 1528.9709 1802.8680 1787.1626 1738.3041 1685.2850 1840.6561 1856.9767 1596.0914 1658.4593 1651.4469 1698.1137\n1996 1471.1761 1370.4117 1669.1615 1545.1741 1595.8280 1628.1455 1731.7446 1886.9663 1641.8470 1660.1892 1695.6446 1629.5025\n1997 1444.3249 1414.0571 1623.8181 1683.4051 1695.2596 1688.7060 1837.3168 2001.9530 1663.7655 1769.8225 1709.3072 1822.9897\n1998 1530.8057 1541.9099 1752.8292 1697.0926 1844.7379 1805.1566 1930.2289 2035.9079 1589.6561 1791.4982 1745.4141 1869.0776\n1999 1631.9951 1512.5574 1857.4610 1848.2082 1856.1015 1818.2565 1989.2399 1973.8352 1662.0523 1734.4638 1772.7742 1874.8441\n2000 1616.5090 1498.8426 1873.6960 1923.0617 1963.5680 1985.6828 2122.3376 2079.9733 1761.7899 1955.8604 1989.7806 2000.2834\n2001 1723.4937 1703.8496 1945.3340                                                                                          \n\n\nResult! Training Dataset의 각 시점에 대한 시계열의 추정 결과이다. 첫 번째 값 \\(E(Y_{1}|y_{0})\\)은 계산할 수 없기에 초기값으로 대체되었으며, 일반적으로 해당 값은 버린다.\n\n# 관측된 시계열과 추정된 시계열에 대한 그림\n\n## 1. 추정된 시계열에 대한 그림\nplot(dropFirst(filtering$f),    # 첫 번째 값 제거\n     col = \"blue\",              # 선 색깔\n     lwd = 2,                   # 선 굵기\n     lty = 2,                   # 선 종류\n     ylab = \"Ridership\")        # y축 이름\n\n## 2. 관측된 시계열에 대한 그림\nlines(train.ts,\n      lty = 1, \n      lwd = 2, \n      col = \"black\") \n\n## 3. 범례\nlegend(\"bottomleft\",            # 위치\n       legend = c(\"Data\", \"Estimation Result\"), \n       col = c(\"black\", \"blue\"),\n       lty = 1:2,               \n       lwd = 2)\n\n\n\n\n\n\n\n\nResult! 앞 시점에서 추정이 잘 안되는 이유는 해당 시점까지 주어진 정보(관측값)가 작아 불확실성이 크기 때문이다.\n\n# 추세의 수준에 대한 추정 결과\nplot(dropFirst(filtering$m[,1]),     # 첫 번째 값 제거\n     ylab = \"Level\")\n\n\n\n\n\n\n\n# 추세의 기울기에 대한 추정 결과\nplot(dropFirst(filtering$m[,2]),     # 첫 번째 값 제거\n     ylab = \"Slope\")\n\n\n\n\n\n\n\n\nResult! 추세의 수준과 기울기가 시간에 따라 변화하는 것을 알 수 있다.\n\n# 계절성에 대한 추정 결과\nplot(dropFirst(filtering$m[,3]),     # 첫 번째 값 제거 \n     ylab = \"\")\n\n\n\n\n\n\n\n\n\n\n10.2.3.2 Kalman Smoothing\n\n함수 dlmSmooth()를 이용하여 Kalman Smoothing을 수행할 수 있다.\n\n\nsmoothing &lt;- dlmSmooth(train.ts,\n                       modelfit)\n\n# 구조 확인\nstr(smoothing, 1)\n\nList of 3\n $ s  : Time-Series [1:123, 1:13] from 1991 to 2001: 1889 1890 1887 1797 1851 ...\n $ U.S:List of 123\n $ D.S: num [1:123, 1:13] 56.9 42 39.8 39.8 39.7 ...\n\n\nResult! 함수 dlmSmooth()는 3개의 결과를 리스트로 반환한다.\n\ns : Smoothing 분포 \\(\\pi(\\theta_t|y_{1:T})\\)의 평균\nU.S/D.S : Smoothing 분포 \\(\\pi(\\theta_t|y_{1:T})\\)의 공분산행렬의 특이값 분해\n\n\n# 관측된 시계열과 추정된 시계열에 대한 그림\n\n## 1. Kalman Smoothing에 의해 추정된 시계열 값\ntheta         &lt;- modelfit$GG%*%t(smoothing$s)  # 상태의 한 시점 예측값 : theta_{t} = G_{t}s_{t-1}\nfitted_smooth &lt;- modelfit$FF%*%theta           # 시계열의 추정값 : Y_{t} = F_{t}theta_{t}\n\n## 2. 관측된 시계열에 대한 그림\nplot(train.ts, \n     ylab = \"Ridership\", \n     lwd = 2)                                  # 선 굵기\n\n## 3. 추정된 시계열에 대한 그림\ntime &lt;- as.vector(time(train.ts))              # 시간\nlines(time, fitted_smooth[1:nTrain],           # x축 : 시간, y축 : 추정된 시계열 값\n      col = \"blue\",                            # 선 색깔\n      lwd = 2,                                 # 선 굵기\n      lty = 2)                                 # 선 종류\n\n## 4. 범례\nlegend(\"bottomleft\",                           # 위치\n       legend = c(\"Data\", \"Estimation Result\"), \n       col = c(\"black\", \"blue\"),\n       lty = 1:2,               \n       lwd = 2)\n\n\n\n\n\n\n\n\nResult! Kalman Filtering과 다르게 전반적으로 관측값과 추정값이 비슷한 것을 볼 수 있다. Kalman Smoothing은 주어진 모든 관측값을 이용하여 상태를 추정하는 반면, Filtering은 과거와 현재값만을 이용하여 상태를 추정하기 때문에 일반적으로 Kalman Smoothing의 추정 결과가 더 좋다.\n\n# 추세의 수준에 대한 추정 결과\nplot(smoothing$s[,1],     \n     ylab = \"Level\")\n\n\n\n\n\n\n\n# 추세의 기울기에 대한 추정 결과\nplot(smoothing$s[,2],     \n     ylab = \"Slope\")\n\n\n\n\n\n\n\n\nResult! 추세의 수준과 기울기가 시간에 따라 변화하는 것을 알 수 있다.\n\n# 계절성에 대한 추정 결과\nplot(smoothing$s[,3],     \n     ylab = \"\")\n\n\n\n\n\n\n\n\n\n\n\n10.2.4 모형 진단\n\nDLM은 모형 구축 후 모형 진단을 수행해야 한다.\n\n잔차의 정규성\n잔차의 독립성\n잔차의 평균이 0인지 확인\n\n\n\nCaution! 모형 진단을 수행할 때는 함수 residuals()를 이용하여 잔차를 계산할 수 있으며, Kalman Filtering을 통해 얻어진 결과의 잔차를 이용한다.\n\n# 잔차의 정규성\nqqnorm(residuals(filtering, sd = FALSE))\nqqline(residuals(filtering, sd = FALSE))\n\n\n\n\n\n\n\n\nResult! 점들이 직선에 가까우므로 잔차는 정규분포를 따르는 것을 알 수 있다.\n\n# 잔차의 독립성\ntsdiag(filtering, main = \"\")\n\n\n\n\n\n\n\n\nResult! ACF 그림을 살펴보면 시차가 0일 때를 제외하고 막대의 선이 모두 파란색 점선 안에 있으므로 잔차는 1보다 큰 모든 시차에서 통계적으로 유의한 상관관계가 존재한다는 증거가 부족하다.\n\n# 잔차의 평균이 0인지 확인\nplot(residuals(filtering, sd = FALSE),\n     ylab = \" Residual\")\nabline(h = 0)\n\n\n\n\n\n\n\n\n\n\n10.2.5 예측\n\n예측은 함수 dlmForecast()를 이용하여 수행할 수 있다.\n\n\nCaution! 함수 dlmForecast()에는 Kalman Filtering을 이용하여 추정된 모형 결과를 입력해야 한다.\n\npred &lt;- dlmForecast(filtering,          # dlmForecast(filtering model)\n                    nAhead = nTest)     # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n\n# 구조 확인\nstr(pred, 1)\n\nList of 4\n $ a: Time-Series [1:36, 1:13] from 2001 to 2004: 1954 1955 1955 1956 1957 ...\n  ..- attr(*, \"dimnames\")=List of 2\n $ R:List of 36\n $ f: Time-Series [1:36, 1] from 2001 to 2004: 2009 2016 2032 2106 2131 ...\n  ..- attr(*, \"dimnames\")=List of 2\n $ Q:List of 36\n\n\nResult! 함수 dlmForecast()는 4개의 결과를 리스트로 반환한다.\n\na : 미래 시점의 상태에 대한 평균\nR : 미래 시점의 상태에 대한 공분산행렬\nf : 미래 시점의 시계열에 대한 평균\nQ : 미래 시점의 시계열에 대한 분산\n\n\n# Test Dataset에 대한 예측 결과\npred$f\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n2001                            2008.509 2016.032 2032.009 2106.417 2130.732 1822.558 1966.460 1976.196 2002.499\n2002 1710.695 1701.343 2014.389 2014.974 2022.498 2038.474 2112.882 2137.197 1829.023 1972.925 1982.661 2008.964\n2003 1717.160 1707.809 2020.854 2021.439 2028.963 2044.940 2119.347 2143.663 1835.488 1979.390 1989.126 2015.430\n2004 1723.625 1714.274 2027.319                                                                                 \n\n\n\n# 예측 결과에 대한 그림\n\n## 1. 관측된 시계열에 대한 그림\nplot(train.ts, \n     xlim = c(1991, 2006.25), ylim = c(1300, 2600),\n     ylab = \"Ridership\")\n\n## 2. Kalman Filtering에 의해 추정된 시계열에 대한 그림 \nlines(dropFirst(filtering$f),           # filtering$f : In 2-3-1\n      lty = 2,                          # 선 종류\n      lwd = 2,                          # 선 굵기\n      col = \"blue\")                     # 선 색깔\n\n## 3. Test Dataset에 대한 시계열 그림\nlines(test.ts)\n\n## 4. Test Dataset에 대해 예측된 시계열에 대한 그림\nlines(pred$f,\n      lty = 2,                          # 선 종류\n      lwd = 2,                          # 선 굵기\n      col = \"blue\")                     # 선 색깔\n\n## 5. 95% Predictive Interval (PI)\n### 5-1. For x축\ntimelo &lt;- seq(tail(time, 1) + 1/12, by = 1/12, \n              length = nTest)\n\n### 5-2. 95% PI\npolygon(x = c(timelo, rev(timelo)),\n        y = c(pred$f + qnorm(0.975)*sqrt(unlist(pred$Q)),      # Using Gaussian Dist.\n            rev(pred$f - qnorm(0.975)*sqrt(unlist(pred$Q)))),  # Using Gaussian Dist.\n        col = scales::alpha(\"blue\", alpha = 0.2))              # 색깔\n\n## 6. 범례\nlegend(\"topright\",                      # 위치\n       legend = c(\"Data\", \"Fitted filtering\"), \n       col = c(\"black\", \"blue\"),\n       lty = 1:2,               \n       lwd = 2)\n\n\n\n\n\n\n\n\n\n# 예측 정확도\nforecast::accuracy(pred$f, test.ts)    \n\n               ME     RMSE      MAE      MPE     MAPE      ACF1 Theil's U\nTest set 29.42515 75.44841 64.50184 1.393272 3.269395 0.6512708 0.4377612",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Dynamic Linear Model and Bayesian Structural Time Series</span>"
    ]
  },
  {
    "objectID": "BSTS.html#bayesian-structural-time-series",
    "href": "BSTS.html#bayesian-structural-time-series",
    "title": "10  Dynamic Linear Model and Bayesian Structural Time Series",
    "section": "10.3 Bayesian Structural Time Series",
    "text": "10.3 Bayesian Structural Time Series\n\nBayesian Structural Time Series (BSTS)는 Structural Time Series Model에 Bayesian 기법을 적용하는 방법이다.\nStructural Time Series Model은 Linear Gaussian State Space Model로써 DLM과 동일한 개념이다. \\[\n\\begin{align*}\nY_{t}&=Z^{T}_{t}\\theta_{t}+\\epsilon_{t},~~~~~~~\\epsilon_{t}\\sim N(0, \\sigma^2_{\\epsilon}), \\\\\n\\theta_{t+1}&=T_{t}\\theta_{t}+R_{t}\\eta_{t},~~~\\eta_{t}\\sim N_{q}(0,Q_{t}).\n\\end{align*}\n\\]\n\n첫 번째는 관측방정식, 두 번째는 상태방정식이다.\n\n\\(Y_{t}\\) : 시점 \\(t\\)에서 시계열\n\\(\\theta_{t}\\) : 시점 \\(t\\)에서 상태\n\n예를 들어, 추세와 계절성 등\n\n\n\\(Z_{t}\\), \\(T_{t}\\), \\(R_{t}\\) : 0과 1을 포함하여 알고 있는 값과 미지의 모수를 포함하는 행렬\n\n\\(Z_{t}\\) : \\(p\\times 1\\) 결과 행렬 (Output Matirx)\n\\(T_{t}\\) : \\(p\\times p\\) 전이 행렬 (Transition Matrix)\n\\(R_{t}\\) : \\(p\\times q\\) 제어 행렬 (Control Matrix)\n\n\\(\\epsilon_{t}\\), \\(\\eta_{t}\\) : 오차로써, 연속적으로 상관관계가 없으며 또한 모든 기간 동안 서로 상관관계가 없는 것으로 가정한다.\n\n\\(\\eta_{t}\\) : \\(q\\times q\\) 상태확산행렬(State Diffusion Matrix) \\(Q_{t}\\)을 가진 \\(q \\times 1\\) 벡터 (\\(q\\le d\\))\n\n\n\n\n10.3.1 Package BSTS\n\nBSTS는 package \"bsts\"를 이용하여 다룰 수 있다.\n\n해당 package는 BSTS 모형의 사후분포로부터 Markov chain Monte Carlo (MCMC) 표본을 추출하여 모형 구축과 예측을 수행한다.\n\n\n\n\n10.3.1.1 Trend Model\n\n10.3.1.1.1 Local Level Model\n\n시계열을 추세의 수준 \\(\\mu_{t}\\)로만 표현한 가장 간단한 모형식이다.\n\nRandom Walk + 오차\n\\(Z^{T}_{t} = 1\\)\n\\(T_{t}  = 1\\)\n\\(\\theta_{t}=\\mu_{t}\\)\n\\(R_{t} = 1\\)\n\\(\\eta_{t} = \\xi_{t}\\)\n\n\n\\[\n\\begin{align*}\nY_{t} &= \\mu_{t} + \\epsilon_{t},~~~~\\epsilon_{t}\\sim N(0, \\sigma^2_{\\epsilon}),\\\\\n\\mu_{t+1} &= \\mu_{t} +  \\xi_{t}, ~~~\\xi_{t}\\sim N(0,\\sigma^2_{\\xi }).\n\\end{align*}\n\\]\n\n함수 AddLocalLevel()을 이용하여 모형식을 나타낼 수 있다.\n\n오차의 분산 \\(\\sigma^2_{\\epsilon}\\)과 \\(\\sigma^2_{\\xi }\\)에 Inverse Gamma Prior을 할당한다.\n\n\n\nss &lt;- list()\nss &lt;- bsts::AddLocalLevel(ss, y)          # y : Time Series \n\n\n\n10.3.1.1.2 Local Linear Trend Model\n\n시계열을 추세의 수준 \\(\\mu_{t}\\)과 추세의 기울기(=추세의 증가률) \\(\\delta_{t}\\)로 표현한 모형식이다.\n\n\\(Z^{T}_{t} = (1, 0)\\)\n\\(T_{t}  = \\left[\\begin{matrix}1 &  1\\\\ 0 &  1 \\end{matrix}\\right]\\)\n\\(\\theta_{t}=(\\mu_{t}, \\delta_{t})^{T}\\)\n\\(R_t=\\left[\\begin{matrix} 1 & 0 \\\\ 0 & 1 \\end{matrix}\\right]\\)\n\\(\\eta_{t}=(\\xi_{t},\\zeta_{t})^{T}\\) \\[\n\\begin{align*}\nY_{t} &= \\mu_{t} + \\epsilon_{t},~~~~~~~~~~~\\epsilon_{t}\\sim N(0, \\sigma^2_{\\epsilon}),\\\\\n\\mu_{t+1} &= \\mu_{t} + \\delta_{t} + \\xi_{t}, ~~~\\xi_{t}\\sim N(0,\\sigma^2_{\\xi }),\\\\\n\\delta_{t+1} &= \\delta_{t} + \\zeta_{t}, ~~~~~~~~~~~~\\zeta_{t}\\sim N(0,\\sigma^2_{\\zeta}).\n\\end{align*}\n\\]\n\nLocal Level Model보다 유연하며, 단기 예측에 유용하다.\n함수 AddLocalLinearTrend()을 이용하여 모형식을 나타낼 수 있다.\n\n오차의 분산 \\(\\sigma^2_{\\epsilon}\\), \\(\\sigma^2_{\\xi }\\)와 \\(\\sigma^2_{\\zeta}\\)에 Inverse Gamma Prior을 할당한다.\n\n\n\nss &lt;- list()\nss &lt;- bsts::AddLocalLinearTrend(ss, y)   # y : Time Series \n\n\n\n\n10.3.1.2 Seasonality Model\n\n10.3.1.2.1 Regression with Seasonal Dummy Variables\n\n시계열의 계절 주기가 \\(s\\)일 때, \\(s\\)개의 더미 변수에 대한 회귀모형으로 모형식을 나타낼 수 있다.\n\n\\(Z^{T}_{t} = (1, 0,\\ldots, 0)\\)\n\\(T_{t} = \\left[\\begin{matrix} -1 & - 1 & \\cdots & -1 & -1 \\\\\n                               1 & 0 & \\cdots & 0 & 0\\\\\n                               0 & 1 & \\cdots & 0 & 0 \\\\\n                               \\vdots &\\vdots &\\vdots & \\vdots &\\vdots \\\\\n                               0 & 0 & \\cdots & 1 & 0 \\end{matrix}\\right]\\)\n\\(\\theta_{t}=(\\tau_{t}, \\ldots, \\tau_{t-s+2})^{T}\\)\n\\(R_{t}=(1,0,\\ldots,0)^{T}\\)\n\\(\\eta_{t}=\\omega_{t}\\) \\[\n\\begin{align*}\nY_{t} &= \\tau_{t} + \\epsilon_{t},~~~~~~~~~~\\epsilon_{t}\\sim N(0, \\sigma^2_{\\epsilon}),\\\\\n\\tau_{t+d} &= -\\sum_{i=0}^{s-2} \\tau_{t-i\\times d} + \\omega_{t}, ~~~\\omega_{t}\\sim N(0,\\sigma^2_{\\omega}).\n\\end{align*}\n\\]\n\\(d\\) : Season Duration로 주로 1을 지정한다.\n\n계절성을 포착하기 위해 흔히 사용되는 모형으로, 서로 다른 주기를 가진 다중 계절성으로 모형을 확장할 수 있다.\n함수 AddSeasonal()을 이용하여 모형식을 나타낼 수 있다.\n\n오차의 분산 \\(\\sigma^2_{\\epsilon}\\)와 \\(\\sigma^2_{\\omega}\\)에 Inverse Gamma Prior을 할당한다.\n\n\n\nss &lt;- list()\nss &lt;- bsts::AddSeasonal(ss, y,           # y : Time Series \n                        nseasons,        # Season의 개수 = Frequency\n                        season.duration) # 각 Season에서 관측 개수\n\n# cycle (s) = season.duration * nseasons\n\n\n예를 들어, 월별 시계열에 대해 nseasons = 12와 season.duration = 1를 입력할 수 있다.\n주별 시계열에 대해 nseasons = 52와 season.duration = 1를 입력할 수 있다.\n\n\n\n\n10.3.1.3 모형 훈련*\n\n모형 훈련은 함수 bsts()을 이용하여 수행할 수 있다.\n\n\nbsts(formula, state.specification, family = c(\"gaussian\", \"logit\", \"poisson\", \"student\"), data, niter, seed = NULL, ...)\n\n\nformula : 시계열과 예측 변수의 관계를 표현하기 위한 함수로써 일반적으로 시계열 ~ 예측 변수의 형태로 표현한다.\nstate.specification : 함수AddLocalLinearTrend()와 AddSeasonal() 등을 포함하고 있는 리스트\nfamily : 관측방정식의 분포\ndata : formula에 포함하고 있는 변수들의 데이터셋(Data Frame)\nniter : 추출하기 원하는 MCMC 표본 개수\nseed : 실행할 때마다 동일한 결과가 출력되도록 하는 시드값\n\n\n\n\n10.3.2 BSTS without 예측 변수\nCaution! 예제 데이터 Amtrak은 추세와 계절성을 동시에 가지고 있는 시계열로써 Local Linear Trend + Regression with Seasonal Dummy Variables Model을 이용하여 분석을 수행한다.\n\\[\n\\begin{align*}\nY_{t} &= \\mu_{t} + \\tau_{t}  + \\epsilon_{t},~~~~~~~~~~~~~~~~~\\epsilon_{t}\\sim N(0, \\sigma^2_{\\epsilon})\\\\\n\\mu_{t+1} &= \\mu_{t} + \\delta_{t} + \\xi_{t}, ~~~~~~~~~~~~~~~~~\\xi_{t}\\sim N(0,\\sigma^2_{\\xi }),\\\\\n\\delta_{t+1} &= \\delta_{t} + \\zeta_{t}, ~~~~~~~~~~~~~~~~~~~~~~~~~\\zeta_{t}\\sim N(0,\\sigma^2_{\\zeta})\\\\\n\\tau_{t+d} &= -\\sum_{i=0}^{s-2} \\tau_{t-i\\times d} + \\omega_{t}, ~~~~~~\\omega_{t}\\sim N(0,\\sigma^2_{\\omega})\n\\end{align*}\n\\]\n\n# 1. 모형 정의\nss &lt;- list()\nss &lt;- bsts::AddLocalLinearTrend(ss, train.ts)          # Local Linear Trend\nss &lt;- bsts::AddSeasonal(ss, train.ts,                  # Seasonality \n                        nseasons = 12,                 # Due to Monthly Time Series\n                        season.duration = 1)          \n\n\n# 2. 모형 훈련\nset.seed(100)                                          # For 시드 고정\nBSTS.fit &lt;- bsts(train.ts, \n                 state.specification = ss, \n                 niter = 1000,                         # niter : MCMC 표본 개수\n                 seed = 100)  \n\n=-=-=-=-= Iteration 0 Tue Jul  1 23:15:30 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 100 Tue Jul  1 23:15:30 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 200 Tue Jul  1 23:15:31 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 300 Tue Jul  1 23:15:31 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 400 Tue Jul  1 23:15:31 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 500 Tue Jul  1 23:15:31 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 600 Tue Jul  1 23:15:31 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 700 Tue Jul  1 23:15:32 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 800 Tue Jul  1 23:15:32 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 900 Tue Jul  1 23:15:32 2025\n =-=-=-=-=\n\nsummary(BSTS.fit)\n\n$residual.sd\n[1] 38.92436\n\n$prediction.sd\n[1] 94.05628\n\n$rsquare\n[1] 0.9412753\n\n$relative.gof\n[1] 0.6885582\n\n\n\n# 3. 예측\nburn          &lt;- SuggestBurn(0.1, BSTS.fit)           # 추출된 MCMC 표본에서 버리고자 하는 표본 개수 / 10% 버림\n\nBSTS.forecast &lt;- predict(BSTS.fit,\n                         horizon = nTest,             # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                         burn = burn, \n                         quantiles = c(0.025, 0.975)) # For 95% Confidence Interval\n\n\n# 예측값\nBSTS.forecast$mean\n\n [1] 2003.388 2031.024 1999.959 2112.413 2158.385 1848.843 1982.130 1977.007 2022.342 1771.865 1742.146 2045.036 2050.404 2081.918 2049.971 2156.432 2205.446 1892.956 2028.111 2027.722 2068.745\n[22] 1820.691 1795.521 2097.807 2102.872 2131.473 2105.053 2215.429 2264.266 1956.407 2087.473 2085.637 2128.834 1882.315 1855.436 2158.037\n\n\n\nplot(BSTS.forecast)\n\n\n\n\n\n\n\n\n\n# 예측 정확도\nforecast::accuracy(BSTS.forecast$mean, test.ts)\n\n                ME     RMSE     MAE       MPE     MAPE      ACF1 Theil's U\nTest set -32.99797 67.79132 48.2604 -1.761145 2.498073 0.5162502 0.3940598\n\n\n\n\n10.3.3 BSTS with 예측 변수\nCaution! 예제 데이터 Amtrak은 추세와 계절성을 동시에 가지고 있는 시계열로써 Local Linear Trend + Regression with Seasonal Dummy Variables Model을 이용하여 분석을 수행한다. 이때 오차의 분산 \\(\\sigma^2_{\\epsilon}\\), \\(\\sigma^2_{\\xi }\\), \\(\\sigma^2_{\\zeta}\\)와 \\(\\sigma^2_{\\omega}\\)에는 Inverse Gamma Prior이 할당되고, 회귀모수 \\(\\beta_i\\)에는 변수 선택에 유용한 Spike and Slab Prior이 할당된다.\n\\[\n\\begin{align*}\nY_{t} &= \\mu_{t} + \\tau_{t} +\\beta_0+\\sum_{i=1}^j \\beta_j X_{i, t} + \\epsilon_{t},~~~~~~~~~~~~~~~~~\\epsilon_{t}\\sim N(0, \\sigma^2_{\\epsilon})\\\\\n\\mu_{t+1} &= \\mu_{t} + \\delta_{t} + \\xi_{t}, ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\xi_{t}\\sim N(0,\\sigma^2_{\\xi }),\\\\\n\\delta_{t+1} &= \\delta_{t} + \\zeta_{t}, ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\zeta_{t}\\sim N(0,\\sigma^2_{\\zeta})\\\\\n\\tau_{t+d} &= -\\sum_{i=0}^{s-2} \\tau_{t-i\\times d} + \\omega_{t}, ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\omega_{t}\\sim N(0,\\sigma^2_{\\omega})\n\\end{align*}\n\\]\n\n# 1. 모형 정의\nss &lt;- list()\nss &lt;- bsts::AddLocalLinearTrend(ss, train.ts)          # Local Linear Trend\nss &lt;- bsts::AddSeasonal(ss, train.ts,                  # Seasonality \n                        nseasons = 12,                 # Due to Monthly Time Series\n                        season.duration = 1)          \n\n\n# 2. 모형 훈련\n## 2-1. Create Data Frame with Time Series and Predictor Variable \nTrain.Data &lt;- data.frame(\"y\"= train.ts, \n                         \"Lag\" = ridership.df$Lag1[1:nTrain])    # In 1-2\n\nTrain.Data %&gt;%\n  as_tibble\n\n# A tibble: 122 × 2\n       y   Lag\n   &lt;dbl&gt; &lt;dbl&gt;\n 1 1621. 1709.\n 2 1973. 1621.\n 3 1812. 1973.\n 4 1975. 1812.\n 5 1862. 1975.\n 6 1940. 1862.\n 7 2013. 1940.\n 8 1596. 2013.\n 9 1725. 1596.\n10 1676. 1725.\n# ℹ 112 more rows\n\nTest.Data  &lt;- data.frame(\"y\"= test.ts,  \n                         \"Lag\" = ridership.df$Lag1[-(1:nTrain)]) # In 1-2\n\n\n## 2-2. Train Model\nset.seed(100)                                                    # For 시드 고정\nBSTS.fit &lt;- bsts(y ~ Lag, \n                 state.specification = ss, \n                 niter = 1000,                                   # niter : MCMC 표본 개수\n                 data = Train.Data,\n                 seed = 100)  \n\n=-=-=-=-= Iteration 0 Tue Jul  1 23:15:33 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 100 Tue Jul  1 23:15:33 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 200 Tue Jul  1 23:15:33 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 300 Tue Jul  1 23:15:33 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 400 Tue Jul  1 23:15:33 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 500 Tue Jul  1 23:15:34 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 600 Tue Jul  1 23:15:34 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 700 Tue Jul  1 23:15:34 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 800 Tue Jul  1 23:15:34 2025\n =-=-=-=-=\n=-=-=-=-= Iteration 900 Tue Jul  1 23:15:34 2025\n =-=-=-=-=\n\n\n\n# 3. 예측\nburn          &lt;- SuggestBurn(0.1, BSTS.fit)           # 추출된 MCMC 표본에서 버리고자 하는 표본 개수 / 10% 버림\n\nBSTS.forecast &lt;- predict(BSTS.fit,\n                         horizon = nTest,             # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                         newdata = Test.Data[,\"Lag\"], # Test Dataset에 대한 예측 변수\n                         burn = burn, \n                         quantiles = c(0.025, 0.975)) # For 95% Confidence Interval\n\n\n# 예측값\nBSTS.forecast$mean\n\n [1] 2004.011 2027.659 2004.908 2113.354 2157.394 1848.552 1984.792 1979.400 2024.133 1771.261 1744.289 2048.147 2054.667 2083.526 2059.905 2164.176 2212.059 1899.455 2037.392 2038.411 2079.972\n[22] 1828.708 1807.213 2108.962 2115.758 2143.288 2123.735 2229.043 2276.999 1968.738 2102.143 2101.904 2144.758 1892.212 1869.797 2172.720\n\n\n\nplot(BSTS.forecast)\n\n\n\n\n\n\n\n\n\n# 예측 정확도\nforecast::accuracy(BSTS.forecast$mean, test.ts)\n\n                ME     RMSE      MAE       MPE     MAPE      ACF1 Theil's U\nTest set -40.77419 72.42539 52.84702 -2.148171 2.734903 0.5366444 0.4223498",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Dynamic Linear Model and Bayesian Structural Time Series</span>"
    ]
  },
  {
    "objectID": "TBATS.html",
    "href": "TBATS.html",
    "title": "11  TBATS",
    "section": "",
    "text": "11.1 Introduction",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>TBATS</span>"
    ]
  },
  {
    "objectID": "TBATS.html#introduction",
    "href": "TBATS.html#introduction",
    "title": "11  TBATS",
    "section": "",
    "text": "TBATS 모형\n\nT : Trigonometric seasonality\n\n퓨리에 항(Fourier Series) 기반\n\nB : Box-Cox transformation\nA : ARIMA errors\nT : Trend (possibly damped)\nS : Seasonal components\n\n\n\n\nTBATS 모형은 광범위한 계절 패턴 변동과 관련된 문제를 극복하고 상관성이 있는 오차를 처리하기 위해 지수 평활(Exponential Smoothing)을 사용한 수정된 상태공간 모형으로 De Livera et al. (2011)이 제안하였다.\n게다가 비선형성(Nonlinearity)에 관련된 문제를 해결하기 위해 Box-Cox 변환도 고려되었다.\nTBATS 모형은 복잡한 계절성을 가진 시계열 데이터를 분석하는 데 유용하다.\n\n복잡한 계절성의 예 : 다중 계절성(Multiple Seasonal Pattern), Non-integer Seasonality, Non-nested Seasonality and Large-period Seasonality 등\n\nTBATS 모형은 계절성이 시간에 따라 느리게 변할 수 있다는 점에서 Dynamic Harmonic Regression과 다르다.\n\n즉, 시간이 지남에 따라 계절성이 천천히 변화할 수 있다는 장점이 있다.\n\n하지만, 주기가 긴 시계열을 추정하는데 느릴 수 있다는 단점이 있다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>TBATS</span>"
    ]
  },
  {
    "objectID": "TBATS.html#application",
    "href": "TBATS.html#application",
    "title": "11  TBATS",
    "section": "11.2 Application",
    "text": "11.2 Application\n\nRidership on Amtrak Trains(미국 철도 회사 “Amtrak”에서 수집한 1991년 1월~2004년 3월까지 매달 환승 고객 수) 예제를 이용하여 TBATS 모형이 실제 데이터에 어떻게 적용되는지 설명한다.\n\n\n11.2.1 데이터 불러오기\n\npacman::p_load(\"dplyr\", \"forecast\", \"parallel\")\n\n# In Mac\n# guess_encoding(\"Amtrak.csv\")\n# Amtrak.data &lt;- read.csv(\"Amtrak.csv\", fileEncoding=\"EUC-KR\")\n\nAmtrak.data  &lt;- read.csv(\".../Amtrak.csv\")\n\nAmtrak.data %&gt;%\n  as_tibble\n\n\n\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n\n\n\n\n11.2.2 데이터 전처리\n\n# Convert to ts for Target\nridership.ts &lt;- ts(Amtrak.data$Ridership, \n                   start = c(1991, 2),            # 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   frequency = 12)                # 주기 / 월별 시계열로 1년에 12번 관측\n\n# 시계열 그림\nplot(ridership.ts, \n     xlab = \"Time\", ylab = \"Ridership (in 000s)\",\n     ylim = c(1300, 2300))\n\n\n\n\n\n\n\n\nCaution! CSV 파일로 불러온 데이터를 살펴보면 승객 수를 포함하는 변수 Ridership가 수치형임을 알 수 있다. 시계열 데이터 분석을 위해 함수 ts()를 이용하여 해당 변수를 시계열 객체로 변환해야 한다.\nResult! 시계열 그림을 살펴보면 Amtrak 데이터는 U자 형태의 추세를 발견할 수 있으며, 여름(7월과 8월) 동안에 승객이 급증하는 뚜렷한 계절변동도 볼 수 있다.\n\n\n11.2.3 데이터 분할\nCaution! 시계열 데이터 분석 시 모형의 과적합을 피하고 미래 데이터에 대한 예측력을 계산하기 위해 Training Dataset과 Test Dataset으로 분할해야 한다. 시계열 데이터의 경우, 시간에 의존하기 때문에 시간 순서를 고려하여 데이터를 분할해야 한다. 즉, 앞 시점의 데이터를 Training Dataset로 사용하여 모형을 구축하고, 뒷 시점의 데이터를 Test Dataset로 사용하여 구축된 모형의 성능을 평가한다. 여기서는 데이터 분할을 위해 함수 window()를 사용한다.\n\n# Partition for Target\ntrain.ts &lt;- window(ridership.ts, \n                   start = c(1991, 2),            # 분할하고자 하는 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   end = c(2001, 3))              # 분할하고자 하는 시계열의 마지막 연도 / c(2001, 3) : 2001년 3월\n\ntest.ts &lt;- window(ridership.ts,\n                   start = c(2001, 4))            # 분할하고자 하는 시계열의 시작 연도 / c(2001, 4) : 2001년 4월\n\nnTrain   &lt;- length(train.ts)                      # Training Dataset의 데이터 포인트 개수\n\nnTest   &lt;- length(test.ts)                        # Test Dataset의 데이터 포인트 개수\n\ntrain.ts %&gt;%\n  as_tibble\n\n# A tibble: 122 × 1\n       x\n   &lt;dbl&gt;\n 1 1709.\n 2 1621.\n 3 1973.\n 4 1812.\n 5 1975.\n 6 1862.\n 7 1940.\n 8 2013.\n 9 1596.\n10 1725.\n# ℹ 112 more rows\n\ntest.ts %&gt;%\n  as_tibble\n\n# A tibble: 37 × 1\n       x\n   &lt;dbl&gt;\n 1 2008.\n 2 2024.\n 3 2047.\n 4 2073.\n 5 2127.\n 6 2203.\n 7 1708.\n 8 1951.\n 9 1974.\n10 1985.\n# ℹ 27 more rows\n\nnTrain\n\n[1] 122\n\nnTest\n\n[1] 37\n\n\n\n\n11.2.4 모형 적합\n\nforecast package에 있는 tbats()를 이용하여 모형을 적합시킬 수 있다. 자세한 옵션은 여기를 참조한다.\n\n\ntbats(\n  y,\n  use.box.cox = NULL,\n  use.trend = NULL,\n  use.damped.trend = NULL,\n  seasonal.periods = NULL,\n  use.arma.errors = TRUE,\n  use.parallel = length(y) &gt; 1000,\n  num.cores = 2,\n  bc.lower = 0,\n  bc.upper = 1,\n  biasadj = FALSE,\n  model = NULL,\n  ...\n)\n\n\ny : 시계열 데이터\nuse.box.cox : Box-Cox 변환 사용 여부로 NULL이면 둘 다 시도되고 AIC로 최적 적합을 선택\nuse.trend : 추세 포함 여부로 NULL이면 둘 다 시도되고 AIC로 최적 적합을 선택\nuse.damped.trend : 추세에 damping parameter 포함 여부로 NULL이면 둘 다 시도되고 AIC로 최적 적합을 선택\nseasonal.periods : y가 수치형일 경우, 명시되는 계절 기간\nuse.arma.errors : ARIMA 오차항 사용 여부\nuse.parallel : 병렬 처리 사용 여부\nnum.cores : 코어 수\nbc.lower : Box-Cox 변환에 대한 최소값\nbc.upper : Box-Cox 변환에 대한 최대값\nbiasadj : Box-Cox 변환에 수정된 역변환 평균을 사용 여부로 TRUE인 경우 점 예측값과 적합치는 평균 예측값,그렇지 않으면 예측 밀도의 중위수로 간주\n\n\ncl &lt;- parallel::makeCluster(detectCores(), setup_timeout = 0.5)\nTBATS.fit &lt;- train.ts %&gt;%\n  tbats(use.box.cox = FALSE,\n        use.trend = TRUE,\n        use.damped.trend = TRUE,\n        use.parallel = TRUE,\n        num.cores = cl)\n\nsummary(TBATS.fit)\n\n                  Length Class  Mode     \nlambda               0   -none- NULL     \nalpha                1   -none- numeric  \nbeta                 1   -none- numeric  \ndamping.parameter    1   -none- numeric  \ngamma.one.values     1   -none- numeric  \ngamma.two.values     1   -none- numeric  \nar.coefficients      0   -none- NULL     \nma.coefficients      0   -none- NULL     \nlikelihood           1   -none- numeric  \noptim.return.code    1   -none- numeric  \nvariance             1   -none- numeric  \nAIC                  1   -none- numeric  \nparameters           2   -none- list     \nseed.states         12   -none- numeric  \nfitted.values      122   ts     numeric  \nerrors             122   ts     numeric  \nx                 1464   -none- numeric  \nseasonal.periods     1   -none- numeric  \nk.vector             1   -none- numeric  \ny                  122   ts     numeric  \np                    1   -none- numeric  \nq                    1   -none- numeric  \ncall                 7   -none- call     \nseries               1   -none- character\nmethod               1   -none- character\n\n\n\n\n11.2.5 예측\n\nTBATS.forecast &lt;- forecast(TBATS.fit,\n                           h = nTest)     # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n\n# 예측값\nTBATS.forecast$mean\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n2001                            1983.808 1962.787 2013.544 1946.094 2075.572 2104.164 1800.691 1902.532 1911.355\n2002 1926.045 1708.082 1645.793 1973.662 1954.670 2007.050 1940.899 2071.416 2100.839 1798.031 1900.404 1909.653\n2003 1924.683 1706.993 1644.922 1972.965 1954.112 2006.604 1940.542 2071.130 2100.611 1797.848 1900.258 1909.536\n2004 1924.589 1706.918 1644.862 1972.917                                                                        \n\nplot(TBATS.forecast)\n\n\n\n\n\n\n\n# 예측 정확도\naccuracy(c(TBATS.forecast$mean), test.ts)\n\n               ME     RMSE      MAE      MPE     MAPE      ACF1 Theil's U\nTest set 79.64638 109.6399 94.91454 3.903663 4.744498 0.5536357 0.6483466",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>TBATS</span>"
    ]
  },
  {
    "objectID": "Bagging.html",
    "href": "Bagging.html",
    "title": "12  Bootstrap and Bagging",
    "section": "",
    "text": "12.1 Amtrak\n예제 데이터로 사용하는 \"Amtrak.csv\"은 1991년 1월부터 2004년 3월까지 미국 철도 회사인 암트랙에서 제공한 월간 승객 수(단위 : 1,000명)가 기록되어져 있다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bootstrap and Bagging</span>"
    ]
  },
  {
    "objectID": "Bagging.html#amtrak",
    "href": "Bagging.html#amtrak",
    "title": "12  Bootstrap and Bagging",
    "section": "",
    "text": "12.1.1 데이터 불러오기\n\npacman::p_load(\"forecast\",\n               \"dplyr\",\n               \"ggplot2\",\n               \"doParallel\", \"parallel\")           # For 병렬 처리\n\nregisterDoParallel(cores=detectCores())            # 사용할 Core 개수 지정     \n\nAmtrak.data &lt;- read.csv(\".../Amtrak.csv\")          # 데이터 불러오기\n\nAmtrak.data %&gt;%\n  as_tibble\n\n\n\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n\n\n\n\n12.1.2 데이터 전처리\n\n# 1. Convert to ts for Target\nridership.ts &lt;- ts(Amtrak.data$Ridership, \n                   start = c(1991, 1),            # 시계열의 시작 연도 / c(1991, 1) : 1991년 1월\n                   frequency = 12)                # 주기 / 월별 시계열로 1년에 12번 관측\n\n\n# 시계열 그림\nplot(ridership.ts, \n     xlab = \"Time\", ylab = \"Ridership (in 000s)\",\n     ylim = c(1300, 2300))\n\n\n\n\n\n\n\n\nCaution! CSV 파일로 불러온 데이터를 살펴보면 승객 수를 포함하는 변수 Ridership가 수치형임을 알 수 있다. 시계열 데이터 분석을 위해 함수 ts()를 이용하여 해당 변수를 시계열 객체로 변환해야 한다.\nResult! 시계열 그림을 살펴보면 Amtrak 데이터는 U자 형태의 추세를 발견할 수 있으며, 여름(7월과 8월) 동안에 승객이 급증하는 뚜렷한 계절변동도 볼 수 있다.\n\n\n12.1.3 데이터 분할\nCaution! 시계열 데이터 분석 시 모형의 과적합을 피하고 미래 데이터에 대한 예측력을 계산하기 위해 Training Dataset과 Test Dataset으로 분할해야 한다. 시계열 데이터의 경우, 시간에 의존하기 때문에 시간 순서를 고려하여 데이터를 분할해야 한다. 즉, 앞 시점의 데이터를 Training Dataset로 사용하여 모형을 구축하고, 뒷 시점의 데이터를 Test Dataset로 사용하여 구축된 모형의 성능을 평가한다. 여기서는 데이터 분할을 위해 함수 window()를 사용한다.\n\n# Partition for Target\ntrain.ts &lt;- window(ridership.ts, \n                   start = c(1991, 1),            # 분할하고자 하는 시계열의 시작 연도 / c(1991, 1) : 1991년 1월\n                   end = c(2001, 3))              # 분할하고자 하는 시계열의 마지막 연도 / c(2001, 3) : 2001년 3월\n\ntest.ts &lt;- window(ridership.ts,\n                   start = c(2001, 4))            # 분할하고자 하는 시계열의 시작 연도 / c(2001, 4) : 2001년 4월\n\nnTrain   &lt;- length(train.ts)                      # Training Dataset의 데이터 포인트 개수\nnTest   &lt;- length(test.ts)                        # Test Dataset의 데이터 포인트 개수\n\ntrain.ts %&gt;%\n  as_tibble\n\n# A tibble: 123 × 1\n       x\n   &lt;dbl&gt;\n 1 1709.\n 2 1621.\n 3 1973.\n 4 1812.\n 5 1975.\n 6 1862.\n 7 1940.\n 8 2013.\n 9 1596.\n10 1725.\n# ℹ 113 more rows\n\ntest.ts %&gt;%\n  as_tibble\n\n# A tibble: 36 × 1\n       x\n   &lt;dbl&gt;\n 1 2024.\n 2 2047.\n 3 2073.\n 4 2127.\n 5 2203.\n 6 1708.\n 7 1951.\n 8 1974.\n 9 1985.\n10 1760.\n# ℹ 26 more rows\n\nnTrain\n\n[1] 123\n\nnTest\n\n[1] 36",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bootstrap and Bagging</span>"
    ]
  },
  {
    "objectID": "Bagging.html#붓스트랩-시계열-생성",
    "href": "Bagging.html#붓스트랩-시계열-생성",
    "title": "12  Bootstrap and Bagging",
    "section": "12.2 붓스트랩 시계열 생성",
    "text": "12.2 붓스트랩 시계열 생성\n\n배깅(Bagging)은 “Bootstrap Aggregation”의 약어로 예측 성능을 향상시키기 위해 머신러닝 분야에서 널리 사용하고 있는 기법이다.\n배깅은 Original Dataset으로부터 크기가 동일한 Bootstrap Dataset을 생성한 후, 각 Dataset에 독립적으로 모형 구축을 수행한다.\n\n그러고나서, 각 모형의 예측 결과를 결합함으로써 예측 성능을 향상시킨다.\n\n배깅의 장점은 예측 구간(Predictive Interval)을 생성할 수 있으며, 예측 성능을 향상시킬 수 있다는 점이다.\n시계열에 배깅 기법을 적용하기 위해서 주의해야할 점은 Bootstrap Dataset을 생성할 때 시계열의 의존성을 고려해야 한다는 것이다.\n\n일반적인 Bootstrap 기법은 Data Point가 서로 독립이라는 가정하에서 수행된다.\n하지만 시계열은 의존성(의존 구조, 자기상관관계)이 존재하기 때문에 일반적인 Bootstrap 기법은 적용할 수 있다.\n의존 구조를 가지는 Dataset에 적용할 수 있는 다양한 Bootstrap 기법이 있으며, 그중 Moving Block Bootstrap (MBB) 방법을 이용하고자 한다.\nMBB 기법은 정상성 이외의 다른 모형 가정은 필요하지 않다는 장점이 있다.\n\n실생활에서 관측되는 시계열은 추세 또는 계절성이 존재하는 비정상 시계열이므로 MBB를 적용하기 위해 Bergmeir et al. (2016)은 새로운 아이디어를 제안했다.\n\n원 시계열에 Box-Cox 변환을 적용\n변환된 시계열을 seasonal and trend decomposition using loess (STL) 또는 loess를 이용하여 추세(Trend), 계절성(Seasonal), 나머지(Remainder) 성분으로 분해\n나머지 성분에 MBB 방법을 적용\n생성한 붓스트랩 나머지 성분에 2번에서 분해된 추세와 계절성 성분을 더하여 새로운 시계열 생성\n원래 스케일(Scale)로 역변환(1번에서 계산된 Box-Cox의 모수를 기반으로)\n\n\n\n\n\n\n\n\n\nBergmeir et al. (2016)에 의해 제안된 알고리듬은 package \"forecast\"에서 제공하는 함수 bid.mbb.bootstrap()를 통해 구현할 수 있다.\n\n함수 bid.mbb.bootstrap()에 대한 Github 참고\n\n\n\nset.seed(10)                                                  # Seed 고정 -&gt; 동일한 결과를 출력하기 위해\nbootseries &lt;- bld.mbb.bootstrap(train.ts, 10) %&gt;%             # 10개의 붓스트랩 시계열 생성 \n  as.data.frame() %&gt;%                                         # Data Frame으로 변환\n  ts(start = 1991, freq = 12)                                 # 시계열 객체 ts로 변환\n\n# Plot\nautoplot(train.ts, ylab = \"Bootstrapped series\") +            # 원 시계열  \n  autolayer(bootseries, colour = TRUE) +                      # 붓스트랩 시계열 \n  autolayer(ridership.ts, colour = FALSE) +                   # 원 시계열을 한 번 더 지정해서 맨 앞으로 가져오기 \n  guides(colour = \"none\")",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bootstrap and Bagging</span>"
    ]
  },
  {
    "objectID": "Bagging.html#배깅-기반의-시계열-예측",
    "href": "Bagging.html#배깅-기반의-시계열-예측",
    "title": "12  Bootstrap and Bagging",
    "section": "12.3 배깅 기반의 시계열 예측",
    "text": "12.3 배깅 기반의 시계열 예측\n\n여기서는 붓스트랩 시계열에 예측 모형들을 적용하고, 그 예측 모형들로부터의 결과를 집약하여 하나의 예측 결과를 끌어내는 배깅을 이용하는 방법을 설명한다.\n시계열에 대한 배깅 기법은 다음의 과정을 거쳐 예측을 수행한다.\n\n함수 bid.mbb.bootstrap()를 이용하여 \\(B\\)개의 붓스트랩 시계열을 생성\n각 붓스트랩 시계열에 대한 예측 모형을 생성\n\n\\(B\\)개의 붓스트랩 시계열을 생성한 경우, \\(B\\)개의 예측 모형을 생성할 수 있다.\n\n생성한 각 예측 모형에서 예측값을 계산\n\n미래 특정 시점에 대해 \\(B\\)개의 예측값이 생성된다.\n\n\\(B\\)개의 예측값에 대해 평균 또는 중앙값 등을 이용하여 최종 예측값을 계산\n\n\n배깅을 이용하면 단일 예측모형보다 더 나은 예측 결과를 얻을 수 있다.\n\n\n12.3.1 ETS 모형을 이용한 예측\n\n다음은 각 붓스트랩 시계열에 ETS 예측 모형을 적용하여 예측을 수행하는 방법이다.\n\nCaution! 신뢰할 수 있는 결과를 얻기 위해 생성하고자 하는 붓스트랩 데이터셋의 개수는 1000개 이상이 되어야 한다. 여기서는 예시를 위해, 10개의 붓스트랩 시계열을 생성하여 예측을 수행한다.\n\n12.3.1.1 Ver. 1\n\n# 1. 10개의 붓스트랩 시계열 생성\nset.seed(10)                                                  # Seed 고정 -&gt; 동일한 결과를 출력하기 위해\nsim &lt;- bld.mbb.bootstrap(train.ts, 10) %&gt;%                    # 10개의 붓스트랩 시계열 생성                 \n  as.data.frame() %&gt;%                                         # Data Frame으로 변환\n  ts(frequency = 12, start = 1991)                            # 시계열 객체 ts로 변환\n\nsim\n\n         structure.c.1708.917..1620.586..1972.715..1811.665..1974.964.. structure.c.1622.42743753532..1692.92522074207..1917.87774380134..\nJan 1991                                                       1708.917                                                           1622.427\nFeb 1991                                                       1620.586                                                           1692.925\nMar 1991                                                       1972.715                                                           1917.878\nApr 1991                                                       1811.665                                                           1927.051\nMay 1991                                                       1974.964                                                           1896.977\nJun 1991                                                       1862.356                                                           1860.024\nJul 1991                                                       1939.860                                                           1920.411\nAug 1991                                                       2013.264                                                           1988.003\nSep 1991                                                       1595.657                                                           1593.912\nOct 1991                                                       1724.924                                                           1778.545\nNov 1991                                                       1675.667                                                           1811.236\nDec 1991                                                       1813.863                                                           1880.393\nJan 1992                                                       1614.827                                                           1649.308\nFeb 1992                                                       1557.088                                                           1526.239\nMar 1992                                                       1891.223                                                           1857.970\nApr 1992                                                       1955.981                                                           1825.309\nMay 1992                                                       1884.714                                                           1888.040\nJun 1992                                                       1623.042                                                           1861.262\nJul 1992                                                       1903.309                                                           1863.242\nAug 1992                                                       1996.712                                                           1956.475\nSep 1992                                                       1703.897                                                           1706.606\nOct 1992                                                       1810.000                                                           1820.205\nNov 1992                                                       1861.601                                                           1840.053\nDec 1992                                                       1875.122                                                           1909.621\nJan 1993                                                       1705.259                                                           1571.520\nFeb 1993                                                       1618.535                                                           1591.936\nMar 1993                                                       1836.709                                                           1890.402\nApr 1993                                                       1957.043                                                           1914.140\nMay 1993                                                       1917.185                                                           1931.129\nJun 1993                                                       1882.398                                                           1867.962\nJul 1993                                                       1933.009                                                           1873.961\nAug 1993                                                       1996.167                                                           1983.379\nSep 1993                                                       1672.841                                                           1701.722\nOct 1993                                                       1752.827                                                           1856.806\nNov 1993                                                       1720.377                                                           1856.825\nDec 1993                                                       1734.292                                                           1808.348\nJan 1994                                                       1563.365                                                           1589.769\nFeb 1994                                                       1573.959                                                           1505.010\nMar 1994                                                       1902.639                                                           1830.286\nApr 1994                                                       1833.888                                                           1843.636\nMay 1994                                                       1831.049                                                           1761.098\nJun 1994                                                       1775.755                                                           1753.302\nJul 1994                                                       1867.508                                                           1931.264\nAug 1994                                                       1906.608                                                           1961.799\nSep 1994                                                       1685.632                                                           1659.449\nOct 1994                                                       1778.546                                                           1804.432\nNov 1994                                                       1775.995                                                           1686.923\nDec 1994                                                       1783.350                                                           1781.791\nJan 1995                                                       1548.415                                                           1529.807\nFeb 1995                                                       1496.925                                                           1509.739\nMar 1995                                                       1798.316                                                           1797.566\nApr 1995                                                       1732.895                                                           1780.642\nMay 1995                                                       1772.345                                                           1796.128\nJun 1995                                                       1761.207                                                           1720.286\nJul 1995                                                       1791.655                                                           1791.655\nAug 1995                                                       1874.820                                                           1874.820\nSep 1995                                                       1571.309                                                           1571.309\nOct 1995                                                       1646.948                                                           1646.948\nNov 1995                                                       1672.631                                                           1672.631\nDec 1995                                                       1656.845                                                           1656.845\nJan 1996                                                       1381.758                                                           1381.758\nFeb 1996                                                       1360.852                                                           1360.852\nMar 1996                                                       1558.575                                                           1558.575\nApr 1996                                                       1608.420                                                           1608.420\nMay 1996                                                       1696.696                                                           1696.696\nJun 1996                                                       1693.183                                                           1693.183\nJul 1996                                                       1835.516                                                           1835.516\nAug 1996                                                       1942.573                                                           1942.573\nSep 1996                                                       1551.401                                                           1551.401\nOct 1996                                                       1686.508                                                           1686.508\nNov 1996                                                       1576.204                                                           1576.204\nDec 1996                                                       1700.433                                                           1700.433\nJan 1997                                                       1396.588                                                           1396.588\nFeb 1997                                                       1371.690                                                           1371.690\nMar 1997                                                       1707.522                                                           1707.522\nApr 1997                                                       1654.604                                                           1654.604\nMay 1997                                                       1762.903                                                           1762.903\nJun 1997                                                       1775.800                                                           1775.800\nJul 1997                                                       1934.219                                                           1879.459\nAug 1997                                                       2008.055                                                           1873.554\nSep 1997                                                       1615.924                                                           1573.191\nOct 1997                                                       1773.910                                                           1728.875\nNov 1997                                                       1732.368                                                           1662.009\nDec 1997                                                       1796.626                                                           1766.769\nJan 1998                                                       1570.330                                                           1574.412\nFeb 1998                                                       1412.691                                                           1567.474\nMar 1998                                                       1754.641                                                           1885.200\nApr 1998                                                       1824.932                                                           1808.399\nMay 1998                                                       1843.289                                                           1871.755\nJun 1998                                                       1825.964                                                           1793.652\nJul 1998                                                       1968.172                                                           1935.587\nAug 1998                                                       1921.645                                                           2005.900\nSep 1998                                                       1669.597                                                           1576.111\nOct 1998                                                       1791.474                                                           1741.790\nNov 1998                                                       1816.714                                                           1803.500\nDec 1998                                                       1846.754                                                           1824.824\nJan 1999                                                       1599.427                                                           1607.221\nFeb 1999                                                       1548.804                                                           1588.800\nMar 1999                                                       1832.333                                                           1787.614\nApr 1999                                                       1839.720                                                           1849.404\nMay 1999                                                       1846.498                                                           1874.599\nJun 1999                                                       1864.852                                                           1859.175\nJul 1999                                                       1965.743                                                           1968.708\nAug 1999                                                       1949.002                                                           1953.762\nSep 1999                                                       1607.373                                                           1680.764\nOct 1999                                                       1803.664                                                           1843.693\nNov 1999                                                       1850.309                                                           1806.174\nDec 1999                                                       1836.435                                                           1901.017\nJan 2000                                                       1541.660                                                           1624.734\nFeb 2000                                                       1616.928                                                           1566.973\nMar 2000                                                       1919.538                                                           1906.078\nApr 2000                                                       1971.493                                                           1814.823\nMay 2000                                                       1992.301                                                           1909.074\nJun 2000                                                       2009.763                                                           1927.685\nJul 2000                                                       2053.996                                                           2087.675\nAug 2000                                                       2097.471                                                           2173.090\nSep 2000                                                       1823.706                                                           1909.370\nOct 2000                                                       1976.997                                                           1964.622\nNov 2000                                                       1981.408                                                           1968.509\nDec 2000                                                       2000.153                                                           1905.106\nJan 2001                                                       1683.148                                                           1752.476\nFeb 2001                                                       1663.404                                                           1647.207\nMar 2001                                                       2007.928                                                           1966.341\n         structure.c.1678.35741584976..1681.4922251051..2030.56516157946.. structure.c.1679.09101331696..1582.97636089056..1854.1526980279..\nJan 1991                                                          1678.357                                                          1679.091\nFeb 1991                                                          1681.492                                                          1582.976\nMar 1991                                                          2030.565                                                          1854.153\nApr 1991                                                          1909.715                                                          1824.543\nMay 1991                                                          1707.672                                                          1948.536\nJun 1991                                                          1814.613                                                          1884.080\nJul 1991                                                          1953.030                                                          1977.161\nAug 1991                                                          2018.897                                                          2012.104\nSep 1991                                                          1664.064                                                          1662.339\nOct 1991                                                          1837.319                                                          1789.657\nNov 1991                                                          1792.579                                                          1751.282\nDec 1991                                                          1890.302                                                          1849.137\nJan 1992                                                          1601.081                                                          1594.626\nFeb 1992                                                          1471.881                                                          1480.169\nMar 1992                                                          1902.656                                                          1759.681\nApr 1992                                                          1843.294                                                          1828.779\nMay 1992                                                          1902.050                                                          1913.314\nJun 1992                                                          1812.347                                                          1810.883\nJul 1992                                                          1948.720                                                          1862.454\nAug 1992                                                          2009.130                                                          2022.809\nSep 1992                                                          1652.774                                                          1691.644\nOct 1992                                                          1764.466                                                          1859.573\nNov 1992                                                          1744.186                                                          1831.273\nDec 1992                                                          1864.154                                                          1928.531\nJan 1993                                                          1687.119                                                          1617.655\nFeb 1993                                                          1647.772                                                          1561.623\nMar 1993                                                          2011.240                                                          1907.212\nApr 1993                                                          1895.509                                                          1923.698\nMay 1993                                                          1698.584                                                          1917.891\nJun 1993                                                          1805.908                                                          1774.831\nJul 1993                                                          1944.706                                                          1885.784\nAug 1993                                                          2012.618                                                          1894.410\nSep 1993                                                          1659.830                                                          1670.687\nOct 1993                                                          1833.486                                                          1835.852\nNov 1993                                                          1789.146                                                          1807.466\nDec 1993                                                          1884.937                                                          1869.565\nJan 1994                                                          1593.784                                                          1681.975\nFeb 1994                                                          1461.151                                                          1526.627\nMar 1994                                                          1888.494                                                          1604.728\nApr 1994                                                          1824.016                                                          1768.493\nMay 1994                                                          1877.655                                                          1839.089\nJun 1994                                                          1781.841                                                          1817.476\nJul 1994                                                          1912.104                                                          1904.024\nAug 1994                                                          1964.604                                                          2005.660\nSep 1994                                                          1600.339                                                          1650.166\nOct 1994                                                          1701.164                                                          1833.994\nNov 1994                                                          1670.018                                                          1776.053\nDec 1994                                                          1777.971                                                          1722.051\nJan 1995                                                          1588.923                                                          1603.123\nFeb 1995                                                          1452.095                                                          1487.476\nMar 1995                                                          1728.915                                                          1804.590\nApr 1995                                                          1710.934                                                          1744.815\nMay 1995                                                          1837.092                                                          1765.814\nJun 1995                                                          1753.859                                                          1740.908\nJul 1995                                                          1864.888                                                          1753.852\nAug 1995                                                          1878.693                                                          1802.717\nSep 1995                                                          1556.252                                                          1433.929\nOct 1995                                                          1668.300                                                          1651.517\nNov 1995                                                          1653.503                                                          1677.050\nDec 1995                                                          1628.933                                                          1693.512\nJan 1996                                                          1398.977                                                          1476.946\nFeb 1996                                                          1401.229                                                          1492.910\nMar 1996                                                          1635.065                                                          1687.493\nApr 1996                                                          1681.681                                                          1467.500\nMay 1996                                                          1745.835                                                          1664.799\nJun 1996                                                          1666.100                                                          1660.405\nJul 1996                                                          1826.137                                                          1798.654\nAug 1996                                                          1834.947                                                          1830.058\nSep 1996                                                          1490.499                                                          1567.830\nOct 1996                                                          1640.832                                                          1665.250\nNov 1996                                                          1530.071                                                          1724.462\nDec 1996                                                          1618.318                                                          1720.493\nJan 1997                                                          1434.740                                                          1396.521\nFeb 1997                                                          1342.755                                                          1487.072\nMar 1997                                                          1736.512                                                          1732.076\nApr 1997                                                          1681.170                                                          1763.915\nMay 1997                                                          1735.585                                                          1723.959\nJun 1997                                                          1727.544                                                          1817.264\nJul 1997                                                          1786.679                                                          1875.023\nAug 1997                                                          1912.432                                                          1956.299\nSep 1997                                                          1647.110                                                          1594.113\nOct 1997                                                          1812.625                                                          1743.318\nNov 1997                                                          1823.076                                                          1745.173\nDec 1997                                                          1782.184                                                          1744.885\nJan 1998                                                          1571.190                                                          1486.986\nFeb 1998                                                          1490.295                                                          1426.740\nMar 1998                                                          1819.434                                                          1806.552\nApr 1998                                                          1835.503                                                          1866.848\nMay 1998                                                          1755.685                                                          1930.585\nJun 1998                                                          1753.802                                                          1821.509\nJul 1998                                                          1937.678                                                          1902.990\nAug 1998                                                          1978.295                                                          1950.898\nSep 1998                                                          1686.027                                                          1616.993\nOct 1998                                                          1839.168                                                          1736.449\nNov 1998                                                          1729.816                                                          1834.961\nDec 1998                                                          1830.707                                                          1846.467\nJan 1999                                                          1584.744                                                          1617.332\nFeb 1999                                                          1499.040                                                          1548.713\nMar 1999                                                          1827.695                                                          1862.706\nApr 1999                                                          1763.164                                                          1860.957\nMay 1999                                                          1859.851                                                          1787.161\nJun 1999                                                          1860.614                                                          1779.077\nJul 1999                                                          2006.899                                                          1956.752\nAug 1999                                                          2075.282                                                          1994.572\nSep 1999                                                          1677.697                                                          1699.509\nOct 1999                                                          1838.659                                                          1857.722\nNov 1999                                                          1800.092                                                          1753.442\nDec 1999                                                          1874.152                                                          1865.091\nJan 2000                                                          1657.656                                                          1629.886\nFeb 2000                                                          1512.841                                                          1630.692\nMar 2000                                                          1867.616                                                          1939.396\nApr 2000                                                          1949.159                                                          1946.643\nMay 2000                                                          1978.768                                                          1986.300\nJun 2000                                                          1965.637                                                          1931.394\nJul 2000                                                          2112.039                                                          2060.708\nAug 2000                                                          2065.252                                                          2093.635\nSep 2000                                                          1812.944                                                          1842.987\nOct 2000                                                          1937.025                                                          1963.216\nNov 2000                                                          1964.469                                                          1888.650\nDec 2000                                                          1998.205                                                          1906.451\nJan 2001                                                          1754.572                                                          1733.525\nFeb 2001                                                          1664.201                                                          1741.216\nMar 2001                                                          1952.834                                                          1985.800\n         structure.c.1706.53385960804..1641.70380329126..1924.41014476705.. structure.c.1716.50284051107..1597.00099324254..1821.50002277332..\nJan 1991                                                           1706.534                                                           1716.503\nFeb 1991                                                           1641.704                                                           1597.001\nMar 1991                                                           1924.410                                                           1821.500\nApr 1991                                                           1905.629                                                           1914.582\nMay 1991                                                           1906.356                                                           1920.359\nJun 1991                                                           1858.348                                                           1901.518\nJul 1991                                                           1934.376                                                           1976.176\nAug 1991                                                           2040.498                                                           2071.011\nSep 1991                                                           1700.295                                                           1663.756\nOct 1991                                                           1747.889                                                           1769.028\nNov 1991                                                           1709.726                                                           1796.584\nDec 1991                                                           1806.682                                                           1813.211\nJan 1992                                                           1608.817                                                           1590.912\nFeb 1992                                                           1502.965                                                           1573.266\nMar 1992                                                           1741.113                                                           1772.855\nApr 1992                                                           1851.792                                                           1841.191\nMay 1992                                                           1875.168                                                           1872.931\nJun 1992                                                           1873.024                                                           1863.905\nJul 1992                                                           1964.379                                                           1972.776\nAug 1992                                                           2072.764                                                           2020.843\nSep 1992                                                           1679.058                                                           1697.104\nOct 1992                                                           1837.640                                                           1808.275\nNov 1992                                                           1840.420                                                           1813.938\nDec 1992                                                           1828.862                                                           1833.825\nJan 1993                                                           1611.918                                                           1664.095\nFeb 1993                                                           1615.044                                                           1612.079\nMar 1993                                                           1849.757                                                           1844.997\nApr 1993                                                           1887.459                                                           1814.068\nMay 1993                                                           1942.699                                                           1902.670\nJun 1993                                                           1849.527                                                           1893.662\nJul 1993                                                           1996.128                                                           1931.545\nAug 1993                                                           1992.976                                                           1909.901\nSep 1993                                                           1636.564                                                           1686.519\nOct 1993                                                           1778.238                                                           1791.697\nNov 1993                                                           1658.815                                                           1798.796\nDec 1993                                                           1738.153                                                           1774.617\nJan 1994                                                           1545.664                                                           1545.052\nFeb 1994                                                           1538.174                                                           1543.999\nMar 1994                                                           1866.530                                                           1774.532\nApr 1994                                                           1918.339                                                           1819.598\nMay 1994                                                           1876.133                                                           1882.201\nJun 1994                                                           1837.440                                                           1799.234\nJul 1994                                                           1843.061                                                           1956.038\nAug 1994                                                           1974.220                                                           1956.482\nSep 1994                                                           1583.345                                                           1603.665\nOct 1994                                                           1789.385                                                           1745.516\nNov 1994                                                           1689.714                                                           1626.271\nDec 1994                                                           1849.061                                                           1706.215\nJan 1995                                                           1537.958                                                           1514.334\nFeb 1995                                                           1508.444                                                           1502.656\nMar 1995                                                           1754.326                                                           1826.824\nApr 1995                                                           1763.999                                                           1868.433\nMay 1995                                                           1791.402                                                           1816.028\nJun 1995                                                           1695.419                                                           1766.505\nJul 1995                                                           1776.726                                                           1761.297\nAug 1995                                                           1797.698                                                           1883.674\nSep 1995                                                           1539.872                                                           1484.019\nOct 1995                                                           1709.816                                                           1608.633\nNov 1995                                                           1718.119                                                           1659.813\nDec 1995                                                           1680.020                                                           1621.352\nJan 1996                                                           1397.576                                                           1418.796\nFeb 1996                                                           1344.844                                                           1405.738\nMar 1996                                                           1629.154                                                           1671.958\nApr 1996                                                           1622.923                                                           1719.922\nMay 1996                                                           1760.831                                                           1707.018\nJun 1996                                                           1691.660                                                           1636.546\nJul 1996                                                           1816.751                                                           1772.941\nAug 1996                                                           1847.705                                                           1722.963\nSep 1996                                                           1542.412                                                           1454.277\nOct 1996                                                           1655.025                                                           1636.581\nNov 1996                                                           1610.574                                                           1670.537\nDec 1996                                                           1632.273                                                           1739.199\nJan 1997                                                           1376.825                                                           1552.686\nFeb 1997                                                           1415.983                                                           1441.353\nMar 1997                                                           1783.041                                                           1758.379\nApr 1997                                                           1822.258                                                           1663.794\nMay 1997                                                           1795.675                                                           1790.238\nJun 1997                                                           1726.460                                                           1690.321\nJul 1997                                                           1839.641                                                           1824.805\nAug 1997                                                           1880.624                                                           1910.777\nSep 1997                                                           1560.233                                                           1535.065\nOct 1997                                                           1793.940                                                           1730.530\nNov 1997                                                           1764.010                                                           1784.176\nDec 1997                                                           1814.106                                                           1776.366\nJan 1998                                                           1550.166                                                           1509.254\nFeb 1998                                                           1518.736                                                           1488.906\nMar 1998                                                           1821.925                                                           1687.189\nApr 1998                                                           1830.578                                                           1738.204\nMay 1998                                                           1810.060                                                           1827.650\nJun 1998                                                           1787.400                                                           1826.817\nJul 1998                                                           1949.634                                                           1971.831\nAug 1998                                                           1937.484                                                           2080.604\nSep 1998                                                           1667.282                                                           1691.146\nOct 1998                                                           1768.856                                                           1825.928\nNov 1998                                                           1795.157                                                           1715.297\nDec 1998                                                           1746.211                                                           1837.246\nJan 1999                                                           1516.375                                                           1531.118\nFeb 1999                                                           1437.391                                                           1499.040\nMar 1999                                                           1844.915                                                           1827.695\nApr 1999                                                           1889.750                                                           1763.164\nMay 1999                                                           1906.115                                                           1859.851\nJun 1999                                                           1890.645                                                           1860.614\nJul 1999                                                           2060.390                                                           2006.899\nAug 1999                                                           2006.190                                                           2075.282\nSep 1999                                                           1466.583                                                           1677.697\nOct 1999                                                           1762.656                                                           1838.659\nNov 1999                                                           1800.479                                                           1807.965\nDec 1999                                                           1873.534                                                           1862.014\nJan 2000                                                           1619.846                                                           1593.253\nFeb 2000                                                           1644.304                                                           1544.705\nMar 2000                                                           1930.496                                                           1843.911\nApr 2000                                                           2009.216                                                           1934.187\nMay 2000                                                           2011.250                                                           2037.719\nJun 2000                                                           1889.466                                                           2030.621\nJul 2000                                                           2137.662                                                           2082.368\nAug 2000                                                           2129.888                                                           2104.249\nSep 2000                                                           1836.015                                                           1779.665\nOct 2000                                                           1969.672                                                           1890.469\nNov 2000                                                           1880.362                                                           1879.030\nDec 2000                                                           2049.427                                                           2024.771\nJan 2001                                                           1748.040                                                           1761.697\nFeb 2001                                                           1729.952                                                           1733.421\nMar 2001                                                           1987.263                                                           2016.014\n         structure.c.1679.09101331696..1582.97636089056..1854.1526980279...1 structure.c.1678.35741584976..1659.14175244523..1922.31374524569..\nJan 1991                                                            1679.091                                                           1678.357\nFeb 1991                                                            1582.976                                                           1659.142\nMar 1991                                                            1854.153                                                           1922.314\nApr 1991                                                            1824.543                                                           1844.306\nMay 1991                                                            1920.349                                                           1876.054\nJun 1991                                                            1921.101                                                           1845.581\nJul 1991                                                            2049.940                                                           1882.285\nAug 1991                                                            2022.430                                                           1989.658\nSep 1991                                                            1656.617                                                           1705.957\nOct 1991                                                            1766.063                                                           1860.640\nNov 1991                                                            1732.828                                                           1860.258\nDec 1991                                                            1758.021                                                           1813.713\nJan 1992                                                            1617.095                                                           1597.066\nFeb 1992                                                            1547.381                                                           1515.739\nMar 1992                                                            1861.927                                                           1844.448\nApr 1992                                                            1842.749                                                           1862.914\nMay 1992                                                            1891.539                                                           1785.492\nJun 1992                                                            1851.091                                                           1783.807\nJul 1992                                                            1973.526                                                           1967.880\nAug 1992                                                            1973.095                                                           2006.325\nSep 1992                                                            1673.320                                                           1711.884\nOct 1992                                                            1849.196                                                           1867.734\nNov 1992                                                            1776.930                                                           1761.091\nDec 1992                                                            1865.659                                                           1867.974\nJan 1993                                                            1600.773                                                           1628.004\nFeb 1993                                                            1539.333                                                           1616.302\nMar 1993                                                            1835.377                                                           2011.240\nApr 1993                                                            1932.387                                                           1895.509\nMay 1993                                                            1930.842                                                           1698.584\nJun 1993                                                            1885.867                                                           1805.908\nJul 1993                                                            1961.760                                                           1944.706\nAug 1993                                                            2016.736                                                           2012.618\nSep 1993                                                            1687.470                                                           1659.830\nOct 1993                                                            1812.305                                                           1833.486\nNov 1993                                                            1742.887                                                           1789.146\nDec 1993                                                            1791.595                                                           1884.937\nJan 1994                                                            1590.293                                                           1593.784\nFeb 1994                                                            1474.199                                                           1461.151\nMar 1994                                                            1818.910                                                           1888.494\nApr 1994                                                            1849.530                                                           1824.016\nMay 1994                                                            1844.784                                                           1877.655\nJun 1994                                                            1844.960                                                           1781.841\nJul 1994                                                            1908.913                                                           1912.104\nAug 1994                                                            1928.327                                                           1964.604\nSep 1994                                                            1625.749                                                           1600.339\nOct 1994                                                            1639.603                                                           1701.164\nNov 1994                                                            1673.879                                                           1670.018\nDec 1994                                                            1760.270                                                           1777.971\nJan 1995                                                            1473.324                                                           1588.923\nFeb 1995                                                            1485.373                                                           1566.786\nMar 1995                                                            1775.471                                                           1808.118\nApr 1995                                                            1796.373                                                           1712.266\nMay 1995                                                            1810.526                                                           1861.748\nJun 1995                                                            1746.735                                                           1740.202\nJul 1995                                                            1839.997                                                           1861.419\nAug 1995                                                            1859.322                                                           1849.942\nSep 1995                                                            1534.008                                                           1535.684\nOct 1995                                                            1622.599                                                           1653.671\nNov 1995                                                            1666.748                                                           1594.025\nDec 1995                                                            1688.187                                                           1606.423\nJan 1996                                                            1369.659                                                           1341.676\nFeb 1996                                                            1302.417                                                           1374.301\nMar 1996                                                            1669.346                                                           1734.826\nApr 1996                                                            1718.331                                                           1765.409\nMay 1996                                                            1689.562                                                           1730.193\nJun 1996                                                            1581.626                                                           1652.365\nJul 1996                                                            1800.813                                                           1756.932\nAug 1996                                                            1842.336                                                           1793.542\nSep 1996                                                            1563.337                                                           1468.780\nOct 1996                                                            1665.752                                                           1700.715\nNov 1996                                                            1713.810                                                           1669.014\nDec 1996                                                            1677.498                                                           1720.434\nJan 1997                                                            1497.907                                                           1457.820\nFeb 1997                                                            1357.273                                                           1432.364\nMar 1997                                                            1729.973                                                           1724.091\nApr 1997                                                            1734.796                                                           1757.274\nMay 1997                                                            1808.065                                                           1825.345\nJun 1997                                                            1766.042                                                           1687.464\nJul 1997                                                            1881.556                                                           1872.920\nAug 1997                                                            1934.877                                                           1927.180\nSep 1997                                                            1603.492                                                           1645.671\nOct 1997                                                            1741.642                                                           1767.374\nNov 1997                                                            1714.100                                                           1756.885\nDec 1997                                                            1817.608                                                           1789.215\nJan 1998                                                            1568.750                                                           1530.794\nFeb 1998                                                            1454.724                                                           1496.492\nMar 1998                                                            1734.667                                                           1776.224\nApr 1998                                                            1801.369                                                           1843.823\nMay 1998                                                            1883.507                                                           1869.315\nJun 1998                                                            1780.878                                                           1758.081\nJul 1998                                                            1832.251                                                           1850.819\nAug 1998                                                            1994.779                                                           1971.765\nSep 1998                                                            1665.787                                                           1703.932\nOct 1998                                                            1831.007                                                           1768.866\nNov 1998                                                            1799.998                                                           1698.074\nDec 1998                                                            1891.263                                                           1841.308\nJan 1999                                                            1557.513                                                           1586.981\nFeb 1999                                                            1494.551                                                           1580.640\nMar 1999                                                            1789.073                                                           1844.765\nApr 1999                                                            1892.018                                                           1871.988\nMay 1999                                                            1896.407                                                           1864.766\nJun 1999                                                            1861.349                                                           1843.870\nJul 1999                                                            1947.158                                                           1967.323\nAug 1999                                                            2013.015                                                           1906.968\nSep 1999                                                            1694.631                                                           1627.347\nOct 1999                                                            1832.873                                                           1827.227\nNov 1999                                                            1776.862                                                           1810.091\nDec 1999                                                            1842.957                                                           1881.521\nJan 2000                                                            1659.041                                                           1677.579\nFeb 2000                                                            1559.634                                                           1543.795\nMar 2000                                                            1921.034                                                           1923.348\nApr 2000                                                            1965.625                                                           1931.960\nMay 2000                                                            1974.851                                                           2009.017\nJun 2000                                                            1985.133                                                           1965.254\nJul 2000                                                            2059.193                                                           2079.028\nAug 2000                                                            2088.430                                                           2129.434\nSep 2000                                                            1795.674                                                           1795.131\nOct 2000                                                            1819.889                                                           1933.388\nNov 2000                                                            1864.526                                                           1905.953\nDec 2000                                                            1960.636                                                           2012.201\nJan 2001                                                            1771.741                                                           1766.080\nFeb 2001                                                            1768.180                                                           1655.429\nMar 2001                                                            2089.283                                                           2016.014\n         structure.c.1749.43655465283..1627.75975450604..1938.84571798435.. structure.c.1708.70814512987..1627.21507234922..1928.33469491881..\nJan 1991                                                           1749.437                                                           1708.708\nFeb 1991                                                           1627.760                                                           1627.215\nMar 1991                                                           1938.846                                                           1928.335\nApr 1991                                                           1876.787                                                           1915.532\nMay 1991                                                           1916.161                                                           1940.967\nJun 1991                                                           1864.956                                                           1828.921\nJul 1991                                                           1925.845                                                           1946.391\nAug 1991                                                           1948.833                                                           2033.563\nSep 1991                                                           1600.716                                                           1633.460\nOct 1991                                                           1795.521                                                           1797.026\nNov 1991                                                           1838.500                                                           1723.810\nDec 1991                                                           1801.824                                                           1739.657\nJan 1992                                                           1451.300                                                           1570.662\nFeb 1992                                                           1456.045                                                           1584.688\nMar 1992                                                           1813.865                                                           1916.801\nApr 1992                                                           1858.474                                                           1853.166\nMay 1992                                                           1924.284                                                           1855.443\nJun 1992                                                           1935.966                                                           1806.260\nJul 1992                                                           1978.278                                                           1904.124\nAug 1992                                                           2040.613                                                           1951.134\nSep 1992                                                           1618.404                                                           1738.067\nOct 1992                                                           1832.627                                                           1841.848\nNov 1992                                                           1763.949                                                           1850.163\nDec 1992                                                           1819.859                                                           1869.533\nJan 1993                                                           1611.600                                                           1646.612\nFeb 1993                                                           1505.697                                                           1603.488\nMar 1993                                                           1875.653                                                           1913.247\nApr 1993                                                           1915.579                                                           1850.662\nMay 1993                                                           1976.381                                                           1892.948\nJun 1993                                                           1934.154                                                           1882.435\nJul 1993                                                           1954.820                                                           1913.508\nAug 1993                                                           2026.759                                                           2001.860\nSep 1993                                                           1660.036                                                           1703.535\nOct 1993                                                           1804.568                                                           1785.708\nNov 1993                                                           1803.722                                                           1707.581\nDec 1993                                                           1820.877                                                           1703.964\nJan 1994                                                           1638.393                                                           1561.955\nFeb 1994                                                           1547.490                                                           1561.236\nMar 1994                                                           1761.484                                                           1846.693\nApr 1994                                                           1889.182                                                           1877.749\nMay 1994                                                           1856.687                                                           1969.375\nJun 1994                                                           1832.105                                                           1814.769\nJul 1994                                                           1892.920                                                           1703.615\nAug 1994                                                           1959.673                                                           1914.262\nSep 1994                                                           1639.942                                                           1627.524\nOct 1994                                                           1720.106                                                           1771.229\nNov 1994                                                           1687.833                                                           1733.367\nDec 1994                                                           1702.355                                                           1819.770\nJan 1995                                                           1532.035                                                           1543.003\nFeb 1995                                                           1538.441                                                           1556.580\nMar 1995                                                           1862.932                                                           1808.118\nApr 1995                                                           1783.982                                                           1712.266\nMay 1995                                                           1770.944                                                           1861.748\nJun 1995                                                           1704.820                                                           1740.202\nJul 1995                                                           1785.744                                                           1861.419\nAug 1995                                                           1816.062                                                           1849.942\nSep 1995                                                           1586.305                                                           1535.684\nOct 1995                                                           1672.508                                                           1653.671\nNov 1995                                                           1663.246                                                           1588.591\nDec 1995                                                           1669.694                                                           1645.593\nJan 1996                                                           1403.298                                                           1334.872\nFeb 1996                                                           1368.437                                                           1357.326\nMar 1996                                                           1647.609                                                           1707.563\nApr 1996                                                           1714.039                                                           1745.294\nMay 1996                                                           1738.361                                                           1793.044\nJun 1996                                                           1624.448                                                           1670.519\nJul 1996                                                           1714.505                                                           1812.794\nAug 1996                                                           1833.735                                                           1830.265\nSep 1996                                                           1564.187                                                           1538.913\nOct 1996                                                           1629.447                                                           1679.825\nNov 1996                                                           1558.981                                                           1559.768\nDec 1996                                                           1704.496                                                           1638.162\nJan 1997                                                           1452.451                                                           1467.413\nFeb 1997                                                           1453.289                                                           1413.922\nMar 1997                                                           1737.623                                                           1746.403\nApr 1997                                                           1801.400                                                           1782.490\nMay 1997                                                           1767.303                                                           1721.168\nJun 1997                                                           1719.682                                                           1749.995\nJul 1997                                                           1883.682                                                           1866.872\nAug 1997                                                           1967.152                                                           1957.594\nSep 1997                                                           1662.610                                                           1637.352\nOct 1997                                                           1769.322                                                           1759.962\nNov 1997                                                           1685.461                                                           1738.450\nDec 1997                                                           1748.211                                                           1823.491\nJan 1998                                                           1531.337                                                           1537.408\nFeb 1998                                                           1382.994                                                           1466.823\nMar 1998                                                           1734.797                                                           1793.103\nApr 1998                                                           1792.258                                                           1690.597\nMay 1998                                                           1866.455                                                           1773.595\nJun 1998                                                           1854.839                                                           1788.012\nJul 1998                                                           2022.953                                                           1943.809\nAug 1998                                                           2005.726                                                           2029.482\nSep 1998                                                           1698.003                                                           1766.023\nOct 1998                                                           1720.471                                                           1819.071\nNov 1998                                                           1798.887                                                           1820.754\nDec 1998                                                           1771.033                                                           1753.656\nJan 1999                                                           1542.677                                                           1597.331\nFeb 1999                                                           1524.704                                                           1487.481\nMar 1999                                                           1763.905                                                           1802.031\nApr 1999                                                           1828.608                                                           1826.953\nMay 1999                                                           1906.452                                                           1794.407\nJun 1999                                                           1896.108                                                           1814.012\nJul 1999                                                           2020.427                                                           1971.405\nAug 1999                                                           1995.074                                                           2061.754\nSep 1999                                                           1705.662                                                           1757.905\nOct 1999                                                           1800.194                                                           1810.694\nNov 1999                                                           1825.035                                                           1897.388\nDec 1999                                                           1772.776                                                           1877.066\nJan 2000                                                           1686.728                                                           1612.398\nFeb 2000                                                           1600.650                                                           1573.048\nMar 2000                                                           1894.683                                                           1870.744\nApr 2000                                                           1940.817                                                           1876.934\nMay 2000                                                           1900.155                                                           2027.264\nJun 2000                                                           1874.789                                                           1964.967\nJul 2000                                                           1960.627                                                           2096.933\nAug 2000                                                           2122.554                                                           2129.343\nSep 2000                                                           1853.289                                                           1825.504\nOct 2000                                                           1968.541                                                           1954.625\nNov 2000                                                           1995.939                                                           1956.900\nDec 2000                                                           2096.948                                                           1943.045\nJan 2001                                                           1751.672                                                           1723.803\nFeb 2001                                                           1490.385                                                           1729.989\nMar 2001                                                           1961.036                                                           1967.763\n\n\n\n# 2. 각 붓스트랩 시계열에 대해 ETS 모형 적용\nfit.ets &lt;- lapply(sim, \n                  function(x) ets(x))                         # 함수 ets() : ETS 모형\nfit.ets\n\n$structure.c.1708.917..1620.586..1972.715..1811.665..1974.964..\nETS(M,N,A) \n\nCall:\n ets(y = x) \n\n  Smoothing parameters:\n    alpha = 0.555 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 1807.9214 \n    s = 27.0154 -11.2593 0.0101 -121.9422 199.759 149.5166\n           37.7252 75.4579 59.7349 47.1898 -252.1883 -211.019\n\n  sigma:  0.0342\n\n     AIC     AICc      BIC \n1615.746 1620.232 1657.929 \n\n$structure.c.1622.42743753532..1692.92522074207..1917.87774380134..\nETS(A,N,A) \n\nCall:\n ets(y = x) \n\n  Smoothing parameters:\n    alpha = 0.5886 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 1820.029 \n    s = 48.0044 -4.4051 13.9424 -120.4869 199.0255 136.4745\n           39.6509 63.2035 27.5956 44.533 -242.9376 -204.6001\n\n  sigma:  51.7915\n\n     AIC     AICc      BIC \n1578.053 1582.539 1620.236 \n\n$structure.c.1678.35741584976..1681.4922251051..2030.56516157946..\nETS(M,N,A) \n\nCall:\n ets(y = x) \n\n  Smoothing parameters:\n    alpha = 0.5722 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 1812.414 \n    s = 39.244 -27.3364 18.7412 -124.4246 205.6108 158.6663\n           30.0723 61.1789 40.0399 66.2689 -275.0331 -193.0281\n\n  sigma:  0.0328\n\n     AIC     AICc      BIC \n1605.062 1609.548 1647.245 \n\n$structure.c.1679.09101331696..1582.97636089056..1854.1526980279..\nETS(A,N,A) \n\nCall:\n ets(y = x) \n\n  Smoothing parameters:\n    alpha = 0.4037 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 1814.2406 \n    s = 44.3045 8.6347 20.3252 -130.2983 187.9671 125.5879\n           29.6437 76.5735 36.8099 30.0867 -243.3027 -186.3322\n\n  sigma:  61.4745\n\n     AIC     AICc      BIC \n1620.217 1624.703 1662.400 \n\n$structure.c.1706.53385960804..1641.70380329126..1924.41014476705..\nETS(A,N,A) \n\nCall:\n ets(y = x) \n\n  Smoothing parameters:\n    alpha = 0.5625 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 1815.808 \n    s = 19.9874 -28.3351 8.237 -151.7746 199.1433 162.3617\n           42.0646 101.0539 84.9383 43.7667 -253.8362 -227.607\n\n  sigma:  56.2798\n\n     AIC     AICc      BIC \n1598.498 1602.984 1640.681 \n\n$structure.c.1716.50284051107..1597.00099324254..1821.50002277332..\nETS(M,N,A) \n\nCall:\n ets(y = x) \n\n  Smoothing parameters:\n    alpha = 0.5721 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 1820.7088 \n    s = 19.1546 -11.981 -0.1149 -142.6133 208.2123 154.9857\n           60.502 95.5317 38.9393 24.3711 -242.5745 -204.4131\n\n  sigma:  0.0288\n\n     AIC     AICc      BIC \n1572.530 1577.016 1614.713 \n\n$structure.c.1679.09101331696..1582.97636089056..1854.1526980279...1\nETS(A,N,A) \n\nCall:\n ets(y = x) \n\n  Smoothing parameters:\n    alpha = 0.5689 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 1815.0945 \n    s = 31.7731 -22.3832 -8.8311 -127.947 198.5839 157.5626\n           54.5011 100.5841 75.694 34.8147 -287.9225 -206.4299\n\n  sigma:  44.521\n\n     AIC     AICc      BIC \n1540.842 1545.328 1583.025 \n\n$structure.c.1678.35741584976..1659.14175244523..1922.31374524569..\nETS(M,N,A) \n\nCall:\n ets(y = x) \n\n  Smoothing parameters:\n    alpha = 0.4525 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 1814.3012 \n    s = 39.3974 -21.8034 18.4249 -127.9589 181.3757 137.2188\n           14.3669 70.7385 65.8784 75.874 -252.1677 -201.3446\n\n  sigma:  0.0302\n\n     AIC     AICc      BIC \n1585.353 1589.839 1627.536 \n\n$structure.c.1749.43655465283..1627.75975450604..1938.84571798435..\nETS(A,N,A) \n\nCall:\n ets(y = x) \n\n  Smoothing parameters:\n    alpha = 0.5507 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 1809.207 \n    s = 7.2392 -17.0861 -3.0939 -108.8207 201.9181 150.1434\n           47.653 93.2531 77.755 32.4511 -270.4003 -211.0119\n\n  sigma:  60.6588\n\n     AIC     AICc      BIC \n1616.931 1621.417 1659.114 \n\n$structure.c.1708.70814512987..1627.21507234922..1928.33469491881..\nETS(M,N,A) \n\nCall:\n ets(y = x) \n\n  Smoothing parameters:\n    alpha = 0.5731 \n    gamma = 2e-04 \n\n  Initial states:\n    l = 1814.7208 \n    s = 5.4728 -21.6853 12.0212 -98.8551 205.6608 131.325\n           36.4825 91.0304 38.7781 61.0381 -245.1723 -216.0964\n\n  sigma:  0.0312\n\n     AIC     AICc      BIC \n1592.930 1597.416 1635.112 \n\n\nCaution! ETS 모형 생성은 함수 ets()를 이용하며 각 붓스트랩 시계열에 ETS 모형을 적용하기 위해 함수 lapply()를 이용할 수 있다. 해당 함수는 붓스트랩 시계열 각각에 함수 ets()를 적용하며 리스트 형태로 출력한다.\n게다가, 맥(Mac)에서는 package \"parallel\"에서 제공하는 함수 mclapply()를 이용하면 병렬 처리가 가능하며, 옵션 mc.core에 사용할 코어 개수를 지정할 수 있다.\nResult! 총 10개의 ETS 예측 모형이 생성된 것을 알 수 있다.\n\n# 3. 예측\nstart  &lt;- tsp(train.ts)[2]+1/12                               # tsp(time series)[2] : Last Date +1/12 = First Date in Forecast\n\n## 3-1. 각 ETS 모형의 예측 결과 생성\nfc  &lt;- lapply(fit.ets, \n              function(x){ \n                forecast(x, h = nTest)[[\"mean\"]]              # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n                }) %&gt;%  \n  as.data.frame() %&gt;%                                         # Data Frame으로 변환\n  ts(frequency = 12, start = start)                           # 시계열 객체 ts로 변환\n\nfc\n\n         structure.c.1708.917..1620.586..1972.715..1811.665..1974.964.. structure.c.1622.42743753532..1692.92522074207..1917.87774380134..\nApr 2001                                                       2003.205                                                           1944.027\nMay 2001                                                       2018.952                                                           1979.631\nJun 2001                                                       1981.205                                                           1956.072\nJul 2001                                                       2092.997                                                           2052.898\nAug 2001                                                       2143.241                                                           2115.450\nSep 2001                                                       1821.540                                                           1795.938\nOct 2001                                                       1943.494                                                           1930.367\nNov 2001                                                       1932.226                                                           1912.019\nDec 2001                                                       1970.498                                                           1964.421\nJan 2002                                                       1732.468                                                           1711.829\nFeb 2002                                                       1691.293                                                           1673.494\nMar 2002                                                       1990.676                                                           1960.962\nApr 2002                                                       2003.205                                                           1944.027\nMay 2002                                                       2018.952                                                           1979.631\nJun 2002                                                       1981.205                                                           1956.072\nJul 2002                                                       2092.997                                                           2052.898\nAug 2002                                                       2143.241                                                           2115.450\nSep 2002                                                       1821.540                                                           1795.938\nOct 2002                                                       1943.494                                                           1930.367\nNov 2002                                                       1932.226                                                           1912.019\nDec 2002                                                       1970.498                                                           1964.421\nJan 2003                                                       1732.468                                                           1711.829\nFeb 2003                                                       1691.293                                                           1673.494\nMar 2003                                                       1990.676                                                           1960.962\nApr 2003                                                       2003.205                                                           1944.027\nMay 2003                                                       2018.952                                                           1979.631\nJun 2003                                                       1981.205                                                           1956.072\nJul 2003                                                       2092.997                                                           2052.898\nAug 2003                                                       2143.241                                                           2115.450\nSep 2003                                                       1821.540                                                           1795.938\nOct 2003                                                       1943.494                                                           1930.367\nNov 2003                                                       1932.226                                                           1912.019\nDec 2003                                                       1970.498                                                           1964.421\nJan 2004                                                       1732.468                                                           1711.829\nFeb 2004                                                       1691.293                                                           1673.494\nMar 2004                                                       1990.676                                                           1960.962\n         structure.c.1678.35741584976..1681.4922251051..2030.56516157946.. structure.c.1679.09101331696..1582.97636089056..1854.1526980279..\nApr 2001                                                          1951.591                                                          1981.128\nMay 2001                                                          1972.709                                                          2020.901\nJun 2001                                                          1941.636                                                          1973.971\nJul 2001                                                          2070.234                                                          2069.911\nAug 2001                                                          2117.171                                                          2132.285\nSep 2001                                                          1787.134                                                          1814.026\nOct 2001                                                          1930.298                                                          1964.648\nNov 2001                                                          1884.231                                                          1952.954\nDec 2001                                                          1950.804                                                          1988.624\nJan 2002                                                          1718.543                                                          1757.993\nFeb 2002                                                          1636.527                                                          1701.028\nMar 2002                                                          1977.830                                                          1974.410\nApr 2002                                                          1951.591                                                          1981.128\nMay 2002                                                          1972.709                                                          2020.901\nJun 2002                                                          1941.636                                                          1973.971\nJul 2002                                                          2070.234                                                          2069.911\nAug 2002                                                          2117.171                                                          2132.285\nSep 2002                                                          1787.134                                                          1814.026\nOct 2002                                                          1930.298                                                          1964.648\nNov 2002                                                          1884.231                                                          1952.954\nDec 2002                                                          1950.804                                                          1988.624\nJan 2003                                                          1718.543                                                          1757.993\nFeb 2003                                                          1636.527                                                          1701.028\nMar 2003                                                          1977.830                                                          1974.410\nApr 2003                                                          1951.591                                                          1981.128\nMay 2003                                                          1972.709                                                          2020.901\nJun 2003                                                          1941.636                                                          1973.971\nJul 2003                                                          2070.234                                                          2069.911\nAug 2003                                                          2117.171                                                          2132.285\nSep 2003                                                          1787.134                                                          1814.026\nOct 2003                                                          1930.298                                                          1964.648\nNov 2003                                                          1884.231                                                          1952.954\nDec 2003                                                          1950.804                                                          1988.624\nJan 2004                                                          1718.543                                                          1757.993\nFeb 2004                                                          1636.527                                                          1701.028\nMar 2004                                                          1977.830                                                          1974.410\n         structure.c.1706.53385960804..1641.70380329126..1924.41014476705.. structure.c.1716.50284051107..1597.00099324254..1821.50002277332..\nApr 2001                                                           2045.434                                                           2021.504\nMay 2001                                                           2061.554                                                           2078.087\nJun 2001                                                           2002.567                                                           2043.057\nJul 2001                                                           2122.865                                                           2137.546\nAug 2001                                                           2159.645                                                           2190.763\nSep 2001                                                           1808.731                                                           1839.945\nOct 2001                                                           1968.740                                                           1982.435\nNov 2001                                                           1932.169                                                           1970.575\nDec 2001                                                           1980.497                                                           2001.725\nJan 2002                                                           1732.907                                                           1778.152\nFeb 2002                                                           1706.667                                                           1739.980\nMar 2002                                                           2004.265                                                           2006.922\nApr 2002                                                           2045.434                                                           2021.504\nMay 2002                                                           2061.554                                                           2078.087\nJun 2002                                                           2002.567                                                           2043.057\nJul 2002                                                           2122.865                                                           2137.546\nAug 2002                                                           2159.645                                                           2190.763\nSep 2002                                                           1808.731                                                           1839.945\nOct 2002                                                           1968.740                                                           1982.435\nNov 2002                                                           1932.169                                                           1970.575\nDec 2002                                                           1980.497                                                           2001.725\nJan 2003                                                           1732.907                                                           1778.152\nFeb 2003                                                           1706.667                                                           1739.980\nMar 2003                                                           2004.265                                                           2006.922\nApr 2003                                                           2045.434                                                           2021.504\nMay 2003                                                           2061.554                                                           2078.087\nJun 2003                                                           2002.567                                                           2043.057\nJul 2003                                                           2122.865                                                           2137.546\nAug 2003                                                           2159.645                                                           2190.763\nSep 2003                                                           1808.731                                                           1839.945\nOct 2003                                                           1968.740                                                           1982.435\nNov 2003                                                           1932.169                                                           1970.575\nDec 2003                                                           1980.497                                                           2001.725\nJan 2004                                                           1732.907                                                           1778.152\nFeb 2004                                                           1706.667                                                           1739.980\nMar 2004                                                           2004.265                                                           2006.922\n         structure.c.1679.09101331696..1582.97636089056..1854.1526980279...1 structure.c.1678.35741584976..1659.14175244523..1922.31374524569..\nApr 2001                                                            2110.640                                                           2002.758\nMay 2001                                                            2135.537                                                           2007.625\nJun 2001                                                            2089.457                                                           1951.256\nJul 2001                                                            2192.516                                                           2074.107\nAug 2001                                                            2233.537                                                           2118.264\nSep 2001                                                            1907.014                                                           1808.928\nOct 2001                                                            2026.113                                                           1955.311\nNov 2001                                                            2012.567                                                           1915.083\nDec 2001                                                            2066.729                                                           1976.290\nJan 2002                                                            1828.534                                                           1735.550\nFeb 2002                                                            1747.042                                                           1684.724\nMar 2002                                                            2069.768                                                           2012.761\nApr 2002                                                            2110.640                                                           2002.758\nMay 2002                                                            2135.537                                                           2007.625\nJun 2002                                                            2089.457                                                           1951.256\nJul 2002                                                            2192.516                                                           2074.107\nAug 2002                                                            2233.537                                                           2118.264\nSep 2002                                                            1907.014                                                           1808.928\nOct 2002                                                            2026.113                                                           1955.311\nNov 2002                                                            2012.567                                                           1915.083\nDec 2002                                                            2066.729                                                           1976.290\nJan 2003                                                            1828.534                                                           1735.550\nFeb 2003                                                            1747.042                                                           1684.724\nMar 2003                                                            2069.768                                                           2012.761\nApr 2003                                                            2110.640                                                           2002.758\nMay 2003                                                            2135.537                                                           2007.625\nJun 2003                                                            2089.457                                                           1951.256\nJul 2003                                                            2192.516                                                           2074.107\nAug 2003                                                            2233.537                                                           2118.264\nSep 2003                                                            1907.014                                                           1808.928\nOct 2003                                                            2026.113                                                           1955.311\nNov 2003                                                            2012.567                                                           1915.083\nDec 2003                                                            2066.729                                                           1976.290\nJan 2004                                                            1828.534                                                           1735.550\nFeb 2004                                                            1747.042                                                           1684.724\nMar 2004                                                            2069.768                                                           2012.761\n         structure.c.1749.43655465283..1627.75975450604..1938.84571798435.. structure.c.1708.70814512987..1627.21507234922..1928.33469491881..\nApr 2001                                                           1978.931                                                           1968.874\nMay 2001                                                           1994.439                                                           2021.115\nJun 2001                                                           1948.845                                                           1966.562\nJul 2001                                                           2051.318                                                           2061.412\nAug 2001                                                           2103.103                                                           2135.746\nSep 2001                                                           1792.361                                                           1831.243\nOct 2001                                                           1898.095                                                           1942.113\nNov 2001                                                           1884.104                                                           1908.413\nDec 2001                                                           1908.430                                                           1935.556\nJan 2002                                                           1690.177                                                           1714.015\nFeb 2002                                                           1630.765                                                           1684.919\nMar 2002                                                           1933.643                                                           1991.120\nApr 2002                                                           1978.931                                                           1968.874\nMay 2002                                                           1994.439                                                           2021.115\nJun 2002                                                           1948.845                                                           1966.562\nJul 2002                                                           2051.318                                                           2061.412\nAug 2002                                                           2103.103                                                           2135.746\nSep 2002                                                           1792.361                                                           1831.243\nOct 2002                                                           1898.095                                                           1942.113\nNov 2002                                                           1884.104                                                           1908.413\nDec 2002                                                           1908.430                                                           1935.556\nJan 2003                                                           1690.177                                                           1714.015\nFeb 2003                                                           1630.765                                                           1684.919\nMar 2003                                                           1933.643                                                           1991.120\nApr 2003                                                           1978.931                                                           1968.874\nMay 2003                                                           1994.439                                                           2021.115\nJun 2003                                                           1948.845                                                           1966.562\nJul 2003                                                           2051.318                                                           2061.412\nAug 2003                                                           2103.103                                                           2135.746\nSep 2003                                                           1792.361                                                           1831.243\nOct 2003                                                           1898.095                                                           1942.113\nNov 2003                                                           1884.104                                                           1908.413\nDec 2003                                                           1908.430                                                           1935.556\nJan 2004                                                           1690.177                                                           1714.015\nFeb 2004                                                           1630.765                                                           1684.919\nMar 2004                                                           1933.643                                                           1991.120\n\n\nResult! 위에서 생성한 10개의 ETS 예측 모형 각각에 대해 예측값이 생성된 것을 확인할 수 있다.\n\n# Plot\nautoplot(train.ts) +                                          # 원 시계열  \n  autolayer(sim, colour = TRUE) +                             # 붓스트랩 시계열  \n  autolayer(fc, colour = TRUE) +                              # 특정 시점까지의 예측값\n  autolayer(train.ts, colour = FALSE) +                       # 원 시계열을 한 번 더 지정해서 맨 앞으로 가져오기 \n  ylab(\"Bootrstrapped series\") + \n  guides(colour = \"none\")\n\n\n\n\n\n\n\n\n\n# 4. 평균을 이용한 최종 예측 \napply(fc, 1, mean)                                            # 중앙값일 경우, mean -&gt; median\n\n [1] 2000.809 2029.055 1985.463 2092.580 2144.920 1820.686 1954.161 1930.434 1974.357 1740.017 1689.644 1992.236 2000.809 2029.055 1985.463 2092.580 2144.920 1820.686 1954.161 1930.434 1974.357\n[22] 1740.017 1689.644 1992.236 2000.809 2029.055 1985.463 2092.580 2144.920 1820.686 1954.161 1930.434 1974.357 1740.017 1689.644 1992.236\n\n\n\n\n12.3.1.2 Ver. 2\nCaution! 붓스트랩 시계열을 생성하고 각각에 ETS 예측 모형을 생성하는 과정은 함수 baggedETS()를 통해 수행할 수 있다. 예를 들어, 10개의 붓스트랩 시계열 각각에 대해 ETS 예측 모형을 생성하는 코드 lapply(bld.mbb.bootstrap(train.ts, 10), function(x){ets(x)})은\nbaggedETS(train.ts, bld.mbb.bootstrap(train.ts, 10))와 동일하다.\n\n# 1-4번 : 10개의 붓스트랩 시계열을 생성하고 각각에 ETS 예측 모형을 생성한 후 예측\nset.seed(10)                                                  # Seed 고정 -&gt; 동일한 결과를 출력하기 위해\nbaggedfc &lt;- train.ts %&gt;% \n  baggedETS(bld.mbb.bootstrap(train.ts, 10)) %&gt;%              # 10개의 붓스트랩 시계열을 생성한 후, 각각에 ETS 예측 모형 생성    \n  forecast(h = nTest)                                         # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n\nbaggedfc\n\n         Point Forecast   Lo 100   Hi 100\nApr 2001       2000.809 1944.027 2110.640\nMay 2001       2029.055 1972.709 2135.537\nJun 2001       1985.463 1941.636 2089.457\nJul 2001       2092.580 2051.318 2192.516\nAug 2001       2144.920 2103.103 2233.537\nSep 2001       1820.686 1787.134 1907.014\nOct 2001       1954.161 1898.095 2026.113\nNov 2001       1930.434 1884.104 2012.567\nDec 2001       1974.357 1908.430 2066.729\nJan 2002       1740.017 1690.177 1828.534\nFeb 2002       1689.644 1630.765 1747.042\nMar 2002       1992.236 1933.643 2069.768\nApr 2002       2000.809 1944.027 2110.640\nMay 2002       2029.055 1972.709 2135.537\nJun 2002       1985.463 1941.636 2089.457\nJul 2002       2092.580 2051.318 2192.516\nAug 2002       2144.920 2103.103 2233.537\nSep 2002       1820.686 1787.134 1907.014\nOct 2002       1954.161 1898.095 2026.113\nNov 2002       1930.434 1884.104 2012.567\nDec 2002       1974.357 1908.430 2066.729\nJan 2003       1740.017 1690.177 1828.534\nFeb 2003       1689.644 1630.765 1747.042\nMar 2003       1992.236 1933.643 2069.768\nApr 2003       2000.809 1944.027 2110.640\nMay 2003       2029.055 1972.709 2135.537\nJun 2003       1985.463 1941.636 2089.457\nJul 2003       2092.580 2051.318 2192.516\nAug 2003       2144.920 2103.103 2233.537\nSep 2003       1820.686 1787.134 1907.014\nOct 2003       1954.161 1898.095 2026.113\nNov 2003       1930.434 1884.104 2012.567\nDec 2003       1974.357 1908.430 2066.729\nJan 2004       1740.017 1690.177 1828.534\nFeb 2004       1689.644 1630.765 1747.042\nMar 2004       1992.236 1933.643 2069.768\n\n\nResult! 결과에서 Point Forecast는 특정 시점에서의 붓스트랩 예측값들의 평균이며, 위의 “Ver.1”에서 “4. 평균을 이용한 최종 예측”과 결과가 동일하다. Lo 100은 특정 시점에서의 붓스트랩 예측값들의 최솟값, Hi 100는 특정 시점에서의 붓스트랩 예측값들의 최댓값을 의미한다.\n\n# 특정 시점에서 각 붓스트랩 시계열의 예측값\nbaggedfc$forecasts_boot\n\n          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]     [,9]    [,10]\n [1,] 2003.205 1944.027 1951.591 1981.128 2045.434 2021.504 2110.640 2002.758 1978.931 1968.874\n [2,] 2018.952 1979.631 1972.709 2020.901 2061.554 2078.087 2135.537 2007.625 1994.439 2021.115\n [3,] 1981.205 1956.072 1941.636 1973.971 2002.567 2043.057 2089.457 1951.256 1948.845 1966.562\n [4,] 2092.997 2052.898 2070.234 2069.911 2122.865 2137.546 2192.516 2074.107 2051.318 2061.412\n [5,] 2143.241 2115.450 2117.171 2132.285 2159.645 2190.763 2233.537 2118.264 2103.103 2135.746\n [6,] 1821.540 1795.938 1787.134 1814.026 1808.731 1839.945 1907.014 1808.928 1792.361 1831.243\n [7,] 1943.494 1930.367 1930.298 1964.648 1968.740 1982.435 2026.113 1955.311 1898.095 1942.113\n [8,] 1932.226 1912.019 1884.231 1952.954 1932.169 1970.575 2012.567 1915.083 1884.104 1908.413\n [9,] 1970.498 1964.421 1950.804 1988.624 1980.497 2001.725 2066.729 1976.290 1908.430 1935.556\n[10,] 1732.468 1711.829 1718.543 1757.993 1732.907 1778.152 1828.534 1735.550 1690.177 1714.015\n[11,] 1691.293 1673.494 1636.527 1701.028 1706.667 1739.980 1747.042 1684.724 1630.765 1684.919\n[12,] 1990.676 1960.962 1977.830 1974.410 2004.265 2006.922 2069.768 2012.761 1933.643 1991.120\n[13,] 2003.205 1944.027 1951.591 1981.128 2045.434 2021.504 2110.640 2002.758 1978.931 1968.874\n[14,] 2018.952 1979.631 1972.709 2020.901 2061.554 2078.087 2135.537 2007.625 1994.439 2021.115\n[15,] 1981.205 1956.072 1941.636 1973.971 2002.567 2043.057 2089.457 1951.256 1948.845 1966.562\n[16,] 2092.997 2052.898 2070.234 2069.911 2122.865 2137.546 2192.516 2074.107 2051.318 2061.412\n[17,] 2143.241 2115.450 2117.171 2132.285 2159.645 2190.763 2233.537 2118.264 2103.103 2135.746\n[18,] 1821.540 1795.938 1787.134 1814.026 1808.731 1839.945 1907.014 1808.928 1792.361 1831.243\n[19,] 1943.494 1930.367 1930.298 1964.648 1968.740 1982.435 2026.113 1955.311 1898.095 1942.113\n[20,] 1932.226 1912.019 1884.231 1952.954 1932.169 1970.575 2012.567 1915.083 1884.104 1908.413\n[21,] 1970.498 1964.421 1950.804 1988.624 1980.497 2001.725 2066.729 1976.290 1908.430 1935.556\n[22,] 1732.468 1711.829 1718.543 1757.993 1732.907 1778.152 1828.534 1735.550 1690.177 1714.015\n[23,] 1691.293 1673.494 1636.527 1701.028 1706.667 1739.980 1747.042 1684.724 1630.765 1684.919\n[24,] 1990.676 1960.962 1977.830 1974.410 2004.265 2006.922 2069.768 2012.761 1933.643 1991.120\n[25,] 2003.205 1944.027 1951.591 1981.128 2045.434 2021.504 2110.640 2002.758 1978.931 1968.874\n[26,] 2018.952 1979.631 1972.709 2020.901 2061.554 2078.087 2135.537 2007.625 1994.439 2021.115\n[27,] 1981.205 1956.072 1941.636 1973.971 2002.567 2043.057 2089.457 1951.256 1948.845 1966.562\n[28,] 2092.997 2052.898 2070.234 2069.911 2122.865 2137.546 2192.516 2074.107 2051.318 2061.412\n[29,] 2143.241 2115.450 2117.171 2132.285 2159.645 2190.763 2233.537 2118.264 2103.103 2135.746\n[30,] 1821.540 1795.938 1787.134 1814.026 1808.731 1839.945 1907.014 1808.928 1792.361 1831.243\n[31,] 1943.494 1930.367 1930.298 1964.648 1968.740 1982.435 2026.113 1955.311 1898.095 1942.113\n[32,] 1932.226 1912.019 1884.231 1952.954 1932.169 1970.575 2012.567 1915.083 1884.104 1908.413\n[33,] 1970.498 1964.421 1950.804 1988.624 1980.497 2001.725 2066.729 1976.290 1908.430 1935.556\n[34,] 1732.468 1711.829 1718.543 1757.993 1732.907 1778.152 1828.534 1735.550 1690.177 1714.015\n[35,] 1691.293 1673.494 1636.527 1701.028 1706.667 1739.980 1747.042 1684.724 1630.765 1684.919\n[36,] 1990.676 1960.962 1977.830 1974.410 2004.265 2006.922 2069.768 2012.761 1933.643 1991.120\n\n\nResult! 열 번호는 생성된 10개의 붓스트랩 시계열 각각을 의미하며, 각 열의 값들은 특정 시점까지 붓스트랩 시계열에 대한 예측값이다.\n\n# 특정 시점에서 붓스트랩 예측값들의 평균\nbaggedfc$mean\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n2001                            2000.809 2029.055 1985.463 2092.580 2144.920 1820.686 1954.161 1930.434 1974.357\n2002 1740.017 1689.644 1992.236 2000.809 2029.055 1985.463 2092.580 2144.920 1820.686 1954.161 1930.434 1974.357\n2003 1740.017 1689.644 1992.236 2000.809 2029.055 1985.463 2092.580 2144.920 1820.686 1954.161 1930.434 1974.357\n2004 1740.017 1689.644 1992.236                                                                                 \n\n\n\n# 특정 시점에서 붓스트랩 예측값들의 중앙값\nbaggedfc$median\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n2001                            1991.943 2019.926 1970.267 2072.170 2134.016 1811.477 1949.403 1923.626 1973.394\n2002 1732.687 1688.106 1990.898 1991.943 2019.926 1970.267 2072.170 2134.016 1811.477 1949.403 1923.626 1973.394\n2003 1732.687 1688.106 1990.898 1991.943 2019.926 1970.267 2072.170 2134.016 1811.477 1949.403 1923.626 1973.394\n2004 1732.687 1688.106 1990.898                                                                                 \n\n\n\n# 95% Predictive Interval\nboot.pred &lt;- t(baggedfc$forecasts_boot)                       # 특정 시점에서 각 붓스트랩 시계열의 예측값\nPI.pred   &lt;- apply(boot.pred, 2, function(x) { quantile(x, probs = c(0.025, 0.975) ) })\n\nResult! 95% 예측 구간은 붓스트랩 시계열에 대한 예측값들의 분위수를 계산하여 얻을 수 있다.\n\n# Results for 95% Predictive Interval \ndata.frame(\"PI.lower\" = PI.pred[1,], \"PI.upper\" = PI.pred[2,], \n           \"length of PI\" = PI.pred[2,]-PI.pred[1,]) %&gt;%\n  as_tibble()\n\n# A tibble: 36 × 3\n   PI.lower PI.upper length.of.PI\n      &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;\n 1    1946.    2096.         150.\n 2    1974.    2123.         148.\n 3    1943.    2079.         136.\n 4    2052.    2180.         128.\n 5    2106.    2224.         118.\n 6    1788.    1892.         104.\n 7    1905.    2016.         111.\n 8    1884.    2003.         119.\n 9    1915.    2052.         138.\n10    1695.    1817.         122.\n# ℹ 26 more rows\n\n\n\n\n12.3.1.3 예측 결과 비교\n\n원 시계열을 이용한 예측 결과와 배깅을 이용한 예측 결과를 비교한다.\n\n\n# 원 시계열에 대한 예측\netsfc    &lt;- train.ts %&gt;% \n  ets() %&gt;%                                                   # ETS 예측 모형 생성\n  forecast(h = nTest)                                         # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n\n# Plot\nautoplot(train.ts) +                                          # 원 시계열 \n  ylab(\"Ridership\") +                                         # y축 라벨 \n  autolayer(etsfc, series = \"ETS\", PI = FALSE) +              # 원 시계열에 대한 예측 결과\n  autolayer(baggedfc, series = \"BaggedETS\", PI = FALSE) +     # 배깅을 이용한 예측 결과\n  guides(colour= guide_legend(title = \"Prediction\"))\n\n\n\n\n\n\n\n\n\n# Plot with Predictive Interval\n## 1. Original Prediction Result\nOriginal &lt;- data.frame(\"Date\" = as.numeric(time(test.ts)),                    # Date\n                       \"Y\" = c(test.ts),                                      # Test Dataset\n                       \"Pred\" = c(etsfc$mean),                                # Prediction Result\n                       \"PI.lower\" = c(etsfc$lower[,2]),                       # Lower of Predictive Interval\n                       \"PI.upper\" = c(etsfc$upper[,2]),                       # Upper of Predictive Interval\n                       \"Type\" = \"Original\"\n                       )\n\nOriginal %&gt;%\n  as_tibble\n\n# A tibble: 36 × 6\n    Date     Y  Pred PI.lower PI.upper Type    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;   \n 1 2001. 2024. 2003.    1869.    2138. Original\n 2 2001. 2047. 2019.    1864.    2174. Original\n 3 2001. 2073. 1981.    1811.    2151. Original\n 4 2002. 2127. 2093.    1902.    2284. Original\n 5 2002. 2203. 2143.    1935.    2352. Original\n 6 2002. 1708. 1822.    1612.    2032. Original\n 7 2002. 1951. 1943.    1718.    2169. Original\n 8 2002. 1974. 1932.    1696.    2169. Original\n 9 2002. 1985. 1970.    1722.    2219. Original\n10 2002  1760. 1732.    1481.    1984. Original\n# ℹ 26 more rows\n\n## 2. Bagging Prediction Result\nBagging &lt;- data.frame(\"Date\" = as.numeric(time(test.ts)),                     # Date\n                      \"Y\" = c(test.ts),                                       # Test Dataset\n                      \"Pred\" = c(baggedfc$mean),                              # Prediction Result\n                      \"PI.lower\" = PI.pred[1,],                               # Lower of Predictive Interval\n                      \"PI.upper\" = PI.pred[2,],                               # Upper of Predictive Interval\n                      \"Type\" = \"Bagging\" \n)\n\nBagging %&gt;%\n  as_tibble\n\n# A tibble: 36 × 6\n    Date     Y  Pred PI.lower PI.upper Type   \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;  \n 1 2001. 2024. 2001.    1946.    2096. Bagging\n 2 2001. 2047. 2029.    1974.    2123. Bagging\n 3 2001. 2073. 1985.    1943.    2079. Bagging\n 4 2002. 2127. 2093.    2052.    2180. Bagging\n 5 2002. 2203. 2145.    2106.    2224. Bagging\n 6 2002. 1708. 1821.    1788.    1892. Bagging\n 7 2002. 1951. 1954.    1905.    2016. Bagging\n 8 2002. 1974. 1930.    1884.    2003. Bagging\n 9 2002. 1985. 1974.    1915.    2052. Bagging\n10 2002  1760. 1740.    1695.    1817. Bagging\n# ℹ 26 more rows\n\n## 3. Combine\ndf &lt;- rbind(Original, Bagging)\n\ndf %&gt;%\n  as_tibble\n\n# A tibble: 72 × 6\n    Date     Y  Pred PI.lower PI.upper Type    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;   \n 1 2001. 2024. 2003.    1869.    2138. Original\n 2 2001. 2047. 2019.    1864.    2174. Original\n 3 2001. 2073. 1981.    1811.    2151. Original\n 4 2002. 2127. 2093.    1902.    2284. Original\n 5 2002. 2203. 2143.    1935.    2352. Original\n 6 2002. 1708. 1822.    1612.    2032. Original\n 7 2002. 1951. 1943.    1718.    2169. Original\n 8 2002. 1974. 1932.    1696.    2169. Original\n 9 2002. 1985. 1970.    1722.    2219. Original\n10 2002  1760. 1732.    1481.    1984. Original\n# ℹ 62 more rows\n\n## 4. Plot\nggplot(df, aes(x = Date, y = Pred, group = Type)) +\n  geom_line(aes(col = Type)) +\n  geom_line(aes(y = Y)) +                                                    # Test Dataset                \n  geom_ribbon(aes(ymin = PI.lower, ymax = PI.upper), fill = \"grey30\", alpha = 0.3) +\n  facet_wrap(~Type) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n# 예측 정확도\nforecast::accuracy(etsfc$mean, test.ts)\n\n               ME    RMSE      MAE      MPE     MAPE      ACF1 Theil's U\nTest set 49.72735 88.6281 73.96379 2.391188 3.707185 0.6542535 0.5135193\n\nforecast::accuracy(baggedfc$mean, test.ts)\n\n               ME     RMSE      MAE     MPE     MAPE      ACF1 Theil's U\nTest set 47.01337 86.93535 71.90957 2.25561 3.604955 0.6594568 0.5039968\n\n\n\n\n\n12.3.2 ARIMA 모형을 이용한 예측\n\n다음은 각 붓스트랩 시계열에 ARIMA 예측 모형을 적용하여 예측을 수행하는 방법이다.\n\nCaution! 일반적으로 ETS 모형보다 ARIMA 모형이 더 정확한 것으로 알려져 있으며, 신뢰할 수 있는 결과를 얻기 위해서 생성하고자 하는 붓스트랩 데이터셋의 개수는 1000개 이상이 되어야 한다. 여기서는 예시를 위해, 10개의 붓스트랩 시계열을 생성하여 예측을 수행한다.\n\n12.3.2.1 Ver. 1\n\n# 1. 10개의 붓스트랩 시계열 생성\nset.seed(10)                                                  # Seed 고정 -&gt; 동일한 결과를 출력하기 위해\nsim &lt;- bld.mbb.bootstrap(train.ts, 10) %&gt;%                    # 10개의 붓스트랩 시계열 생성                 \n  as.data.frame() %&gt;%                                         # Data Frame으로 변환\n  ts(frequency = 12, start = 1991)                            # 시계열 객체 ts로 변환\n\nsim\n\n         structure.c.1708.917..1620.586..1972.715..1811.665..1974.964.. structure.c.1622.42743753532..1692.92522074207..1917.87774380134..\nJan 1991                                                       1708.917                                                           1622.427\nFeb 1991                                                       1620.586                                                           1692.925\nMar 1991                                                       1972.715                                                           1917.878\nApr 1991                                                       1811.665                                                           1927.051\nMay 1991                                                       1974.964                                                           1896.977\nJun 1991                                                       1862.356                                                           1860.024\nJul 1991                                                       1939.860                                                           1920.411\nAug 1991                                                       2013.264                                                           1988.003\nSep 1991                                                       1595.657                                                           1593.912\nOct 1991                                                       1724.924                                                           1778.545\nNov 1991                                                       1675.667                                                           1811.236\nDec 1991                                                       1813.863                                                           1880.393\nJan 1992                                                       1614.827                                                           1649.308\nFeb 1992                                                       1557.088                                                           1526.239\nMar 1992                                                       1891.223                                                           1857.970\nApr 1992                                                       1955.981                                                           1825.309\nMay 1992                                                       1884.714                                                           1888.040\nJun 1992                                                       1623.042                                                           1861.262\nJul 1992                                                       1903.309                                                           1863.242\nAug 1992                                                       1996.712                                                           1956.475\nSep 1992                                                       1703.897                                                           1706.606\nOct 1992                                                       1810.000                                                           1820.205\nNov 1992                                                       1861.601                                                           1840.053\nDec 1992                                                       1875.122                                                           1909.621\nJan 1993                                                       1705.259                                                           1571.520\nFeb 1993                                                       1618.535                                                           1591.936\nMar 1993                                                       1836.709                                                           1890.402\nApr 1993                                                       1957.043                                                           1914.140\nMay 1993                                                       1917.185                                                           1931.129\nJun 1993                                                       1882.398                                                           1867.962\nJul 1993                                                       1933.009                                                           1873.961\nAug 1993                                                       1996.167                                                           1983.379\nSep 1993                                                       1672.841                                                           1701.722\nOct 1993                                                       1752.827                                                           1856.806\nNov 1993                                                       1720.377                                                           1856.825\nDec 1993                                                       1734.292                                                           1808.348\nJan 1994                                                       1563.365                                                           1589.769\nFeb 1994                                                       1573.959                                                           1505.010\nMar 1994                                                       1902.639                                                           1830.286\nApr 1994                                                       1833.888                                                           1843.636\nMay 1994                                                       1831.049                                                           1761.098\nJun 1994                                                       1775.755                                                           1753.302\nJul 1994                                                       1867.508                                                           1931.264\nAug 1994                                                       1906.608                                                           1961.799\nSep 1994                                                       1685.632                                                           1659.449\nOct 1994                                                       1778.546                                                           1804.432\nNov 1994                                                       1775.995                                                           1686.923\nDec 1994                                                       1783.350                                                           1781.791\nJan 1995                                                       1548.415                                                           1529.807\nFeb 1995                                                       1496.925                                                           1509.739\nMar 1995                                                       1798.316                                                           1797.566\nApr 1995                                                       1732.895                                                           1780.642\nMay 1995                                                       1772.345                                                           1796.128\nJun 1995                                                       1761.207                                                           1720.286\nJul 1995                                                       1791.655                                                           1791.655\nAug 1995                                                       1874.820                                                           1874.820\nSep 1995                                                       1571.309                                                           1571.309\nOct 1995                                                       1646.948                                                           1646.948\nNov 1995                                                       1672.631                                                           1672.631\nDec 1995                                                       1656.845                                                           1656.845\nJan 1996                                                       1381.758                                                           1381.758\nFeb 1996                                                       1360.852                                                           1360.852\nMar 1996                                                       1558.575                                                           1558.575\nApr 1996                                                       1608.420                                                           1608.420\nMay 1996                                                       1696.696                                                           1696.696\nJun 1996                                                       1693.183                                                           1693.183\nJul 1996                                                       1835.516                                                           1835.516\nAug 1996                                                       1942.573                                                           1942.573\nSep 1996                                                       1551.401                                                           1551.401\nOct 1996                                                       1686.508                                                           1686.508\nNov 1996                                                       1576.204                                                           1576.204\nDec 1996                                                       1700.433                                                           1700.433\nJan 1997                                                       1396.588                                                           1396.588\nFeb 1997                                                       1371.690                                                           1371.690\nMar 1997                                                       1707.522                                                           1707.522\nApr 1997                                                       1654.604                                                           1654.604\nMay 1997                                                       1762.903                                                           1762.903\nJun 1997                                                       1775.800                                                           1775.800\nJul 1997                                                       1934.219                                                           1879.459\nAug 1997                                                       2008.055                                                           1873.554\nSep 1997                                                       1615.924                                                           1573.191\nOct 1997                                                       1773.910                                                           1728.875\nNov 1997                                                       1732.368                                                           1662.009\nDec 1997                                                       1796.626                                                           1766.769\nJan 1998                                                       1570.330                                                           1574.412\nFeb 1998                                                       1412.691                                                           1567.474\nMar 1998                                                       1754.641                                                           1885.200\nApr 1998                                                       1824.932                                                           1808.399\nMay 1998                                                       1843.289                                                           1871.755\nJun 1998                                                       1825.964                                                           1793.652\nJul 1998                                                       1968.172                                                           1935.587\nAug 1998                                                       1921.645                                                           2005.900\nSep 1998                                                       1669.597                                                           1576.111\nOct 1998                                                       1791.474                                                           1741.790\nNov 1998                                                       1816.714                                                           1803.500\nDec 1998                                                       1846.754                                                           1824.824\nJan 1999                                                       1599.427                                                           1607.221\nFeb 1999                                                       1548.804                                                           1588.800\nMar 1999                                                       1832.333                                                           1787.614\nApr 1999                                                       1839.720                                                           1849.404\nMay 1999                                                       1846.498                                                           1874.599\nJun 1999                                                       1864.852                                                           1859.175\nJul 1999                                                       1965.743                                                           1968.708\nAug 1999                                                       1949.002                                                           1953.762\nSep 1999                                                       1607.373                                                           1680.764\nOct 1999                                                       1803.664                                                           1843.693\nNov 1999                                                       1850.309                                                           1806.174\nDec 1999                                                       1836.435                                                           1901.017\nJan 2000                                                       1541.660                                                           1624.734\nFeb 2000                                                       1616.928                                                           1566.973\nMar 2000                                                       1919.538                                                           1906.078\nApr 2000                                                       1971.493                                                           1814.823\nMay 2000                                                       1992.301                                                           1909.074\nJun 2000                                                       2009.763                                                           1927.685\nJul 2000                                                       2053.996                                                           2087.675\nAug 2000                                                       2097.471                                                           2173.090\nSep 2000                                                       1823.706                                                           1909.370\nOct 2000                                                       1976.997                                                           1964.622\nNov 2000                                                       1981.408                                                           1968.509\nDec 2000                                                       2000.153                                                           1905.106\nJan 2001                                                       1683.148                                                           1752.476\nFeb 2001                                                       1663.404                                                           1647.207\nMar 2001                                                       2007.928                                                           1966.341\n         structure.c.1678.35741584976..1681.4922251051..2030.56516157946.. structure.c.1679.09101331696..1582.97636089056..1854.1526980279..\nJan 1991                                                          1678.357                                                          1679.091\nFeb 1991                                                          1681.492                                                          1582.976\nMar 1991                                                          2030.565                                                          1854.153\nApr 1991                                                          1909.715                                                          1824.543\nMay 1991                                                          1707.672                                                          1948.536\nJun 1991                                                          1814.613                                                          1884.080\nJul 1991                                                          1953.030                                                          1977.161\nAug 1991                                                          2018.897                                                          2012.104\nSep 1991                                                          1664.064                                                          1662.339\nOct 1991                                                          1837.319                                                          1789.657\nNov 1991                                                          1792.579                                                          1751.282\nDec 1991                                                          1890.302                                                          1849.137\nJan 1992                                                          1601.081                                                          1594.626\nFeb 1992                                                          1471.881                                                          1480.169\nMar 1992                                                          1902.656                                                          1759.681\nApr 1992                                                          1843.294                                                          1828.779\nMay 1992                                                          1902.050                                                          1913.314\nJun 1992                                                          1812.347                                                          1810.883\nJul 1992                                                          1948.720                                                          1862.454\nAug 1992                                                          2009.130                                                          2022.809\nSep 1992                                                          1652.774                                                          1691.644\nOct 1992                                                          1764.466                                                          1859.573\nNov 1992                                                          1744.186                                                          1831.273\nDec 1992                                                          1864.154                                                          1928.531\nJan 1993                                                          1687.119                                                          1617.655\nFeb 1993                                                          1647.772                                                          1561.623\nMar 1993                                                          2011.240                                                          1907.212\nApr 1993                                                          1895.509                                                          1923.698\nMay 1993                                                          1698.584                                                          1917.891\nJun 1993                                                          1805.908                                                          1774.831\nJul 1993                                                          1944.706                                                          1885.784\nAug 1993                                                          2012.618                                                          1894.410\nSep 1993                                                          1659.830                                                          1670.687\nOct 1993                                                          1833.486                                                          1835.852\nNov 1993                                                          1789.146                                                          1807.466\nDec 1993                                                          1884.937                                                          1869.565\nJan 1994                                                          1593.784                                                          1681.975\nFeb 1994                                                          1461.151                                                          1526.627\nMar 1994                                                          1888.494                                                          1604.728\nApr 1994                                                          1824.016                                                          1768.493\nMay 1994                                                          1877.655                                                          1839.089\nJun 1994                                                          1781.841                                                          1817.476\nJul 1994                                                          1912.104                                                          1904.024\nAug 1994                                                          1964.604                                                          2005.660\nSep 1994                                                          1600.339                                                          1650.166\nOct 1994                                                          1701.164                                                          1833.994\nNov 1994                                                          1670.018                                                          1776.053\nDec 1994                                                          1777.971                                                          1722.051\nJan 1995                                                          1588.923                                                          1603.123\nFeb 1995                                                          1452.095                                                          1487.476\nMar 1995                                                          1728.915                                                          1804.590\nApr 1995                                                          1710.934                                                          1744.815\nMay 1995                                                          1837.092                                                          1765.814\nJun 1995                                                          1753.859                                                          1740.908\nJul 1995                                                          1864.888                                                          1753.852\nAug 1995                                                          1878.693                                                          1802.717\nSep 1995                                                          1556.252                                                          1433.929\nOct 1995                                                          1668.300                                                          1651.517\nNov 1995                                                          1653.503                                                          1677.050\nDec 1995                                                          1628.933                                                          1693.512\nJan 1996                                                          1398.977                                                          1476.946\nFeb 1996                                                          1401.229                                                          1492.910\nMar 1996                                                          1635.065                                                          1687.493\nApr 1996                                                          1681.681                                                          1467.500\nMay 1996                                                          1745.835                                                          1664.799\nJun 1996                                                          1666.100                                                          1660.405\nJul 1996                                                          1826.137                                                          1798.654\nAug 1996                                                          1834.947                                                          1830.058\nSep 1996                                                          1490.499                                                          1567.830\nOct 1996                                                          1640.832                                                          1665.250\nNov 1996                                                          1530.071                                                          1724.462\nDec 1996                                                          1618.318                                                          1720.493\nJan 1997                                                          1434.740                                                          1396.521\nFeb 1997                                                          1342.755                                                          1487.072\nMar 1997                                                          1736.512                                                          1732.076\nApr 1997                                                          1681.170                                                          1763.915\nMay 1997                                                          1735.585                                                          1723.959\nJun 1997                                                          1727.544                                                          1817.264\nJul 1997                                                          1786.679                                                          1875.023\nAug 1997                                                          1912.432                                                          1956.299\nSep 1997                                                          1647.110                                                          1594.113\nOct 1997                                                          1812.625                                                          1743.318\nNov 1997                                                          1823.076                                                          1745.173\nDec 1997                                                          1782.184                                                          1744.885\nJan 1998                                                          1571.190                                                          1486.986\nFeb 1998                                                          1490.295                                                          1426.740\nMar 1998                                                          1819.434                                                          1806.552\nApr 1998                                                          1835.503                                                          1866.848\nMay 1998                                                          1755.685                                                          1930.585\nJun 1998                                                          1753.802                                                          1821.509\nJul 1998                                                          1937.678                                                          1902.990\nAug 1998                                                          1978.295                                                          1950.898\nSep 1998                                                          1686.027                                                          1616.993\nOct 1998                                                          1839.168                                                          1736.449\nNov 1998                                                          1729.816                                                          1834.961\nDec 1998                                                          1830.707                                                          1846.467\nJan 1999                                                          1584.744                                                          1617.332\nFeb 1999                                                          1499.040                                                          1548.713\nMar 1999                                                          1827.695                                                          1862.706\nApr 1999                                                          1763.164                                                          1860.957\nMay 1999                                                          1859.851                                                          1787.161\nJun 1999                                                          1860.614                                                          1779.077\nJul 1999                                                          2006.899                                                          1956.752\nAug 1999                                                          2075.282                                                          1994.572\nSep 1999                                                          1677.697                                                          1699.509\nOct 1999                                                          1838.659                                                          1857.722\nNov 1999                                                          1800.092                                                          1753.442\nDec 1999                                                          1874.152                                                          1865.091\nJan 2000                                                          1657.656                                                          1629.886\nFeb 2000                                                          1512.841                                                          1630.692\nMar 2000                                                          1867.616                                                          1939.396\nApr 2000                                                          1949.159                                                          1946.643\nMay 2000                                                          1978.768                                                          1986.300\nJun 2000                                                          1965.637                                                          1931.394\nJul 2000                                                          2112.039                                                          2060.708\nAug 2000                                                          2065.252                                                          2093.635\nSep 2000                                                          1812.944                                                          1842.987\nOct 2000                                                          1937.025                                                          1963.216\nNov 2000                                                          1964.469                                                          1888.650\nDec 2000                                                          1998.205                                                          1906.451\nJan 2001                                                          1754.572                                                          1733.525\nFeb 2001                                                          1664.201                                                          1741.216\nMar 2001                                                          1952.834                                                          1985.800\n         structure.c.1706.53385960804..1641.70380329126..1924.41014476705.. structure.c.1716.50284051107..1597.00099324254..1821.50002277332..\nJan 1991                                                           1706.534                                                           1716.503\nFeb 1991                                                           1641.704                                                           1597.001\nMar 1991                                                           1924.410                                                           1821.500\nApr 1991                                                           1905.629                                                           1914.582\nMay 1991                                                           1906.356                                                           1920.359\nJun 1991                                                           1858.348                                                           1901.518\nJul 1991                                                           1934.376                                                           1976.176\nAug 1991                                                           2040.498                                                           2071.011\nSep 1991                                                           1700.295                                                           1663.756\nOct 1991                                                           1747.889                                                           1769.028\nNov 1991                                                           1709.726                                                           1796.584\nDec 1991                                                           1806.682                                                           1813.211\nJan 1992                                                           1608.817                                                           1590.912\nFeb 1992                                                           1502.965                                                           1573.266\nMar 1992                                                           1741.113                                                           1772.855\nApr 1992                                                           1851.792                                                           1841.191\nMay 1992                                                           1875.168                                                           1872.931\nJun 1992                                                           1873.024                                                           1863.905\nJul 1992                                                           1964.379                                                           1972.776\nAug 1992                                                           2072.764                                                           2020.843\nSep 1992                                                           1679.058                                                           1697.104\nOct 1992                                                           1837.640                                                           1808.275\nNov 1992                                                           1840.420                                                           1813.938\nDec 1992                                                           1828.862                                                           1833.825\nJan 1993                                                           1611.918                                                           1664.095\nFeb 1993                                                           1615.044                                                           1612.079\nMar 1993                                                           1849.757                                                           1844.997\nApr 1993                                                           1887.459                                                           1814.068\nMay 1993                                                           1942.699                                                           1902.670\nJun 1993                                                           1849.527                                                           1893.662\nJul 1993                                                           1996.128                                                           1931.545\nAug 1993                                                           1992.976                                                           1909.901\nSep 1993                                                           1636.564                                                           1686.519\nOct 1993                                                           1778.238                                                           1791.697\nNov 1993                                                           1658.815                                                           1798.796\nDec 1993                                                           1738.153                                                           1774.617\nJan 1994                                                           1545.664                                                           1545.052\nFeb 1994                                                           1538.174                                                           1543.999\nMar 1994                                                           1866.530                                                           1774.532\nApr 1994                                                           1918.339                                                           1819.598\nMay 1994                                                           1876.133                                                           1882.201\nJun 1994                                                           1837.440                                                           1799.234\nJul 1994                                                           1843.061                                                           1956.038\nAug 1994                                                           1974.220                                                           1956.482\nSep 1994                                                           1583.345                                                           1603.665\nOct 1994                                                           1789.385                                                           1745.516\nNov 1994                                                           1689.714                                                           1626.271\nDec 1994                                                           1849.061                                                           1706.215\nJan 1995                                                           1537.958                                                           1514.334\nFeb 1995                                                           1508.444                                                           1502.656\nMar 1995                                                           1754.326                                                           1826.824\nApr 1995                                                           1763.999                                                           1868.433\nMay 1995                                                           1791.402                                                           1816.028\nJun 1995                                                           1695.419                                                           1766.505\nJul 1995                                                           1776.726                                                           1761.297\nAug 1995                                                           1797.698                                                           1883.674\nSep 1995                                                           1539.872                                                           1484.019\nOct 1995                                                           1709.816                                                           1608.633\nNov 1995                                                           1718.119                                                           1659.813\nDec 1995                                                           1680.020                                                           1621.352\nJan 1996                                                           1397.576                                                           1418.796\nFeb 1996                                                           1344.844                                                           1405.738\nMar 1996                                                           1629.154                                                           1671.958\nApr 1996                                                           1622.923                                                           1719.922\nMay 1996                                                           1760.831                                                           1707.018\nJun 1996                                                           1691.660                                                           1636.546\nJul 1996                                                           1816.751                                                           1772.941\nAug 1996                                                           1847.705                                                           1722.963\nSep 1996                                                           1542.412                                                           1454.277\nOct 1996                                                           1655.025                                                           1636.581\nNov 1996                                                           1610.574                                                           1670.537\nDec 1996                                                           1632.273                                                           1739.199\nJan 1997                                                           1376.825                                                           1552.686\nFeb 1997                                                           1415.983                                                           1441.353\nMar 1997                                                           1783.041                                                           1758.379\nApr 1997                                                           1822.258                                                           1663.794\nMay 1997                                                           1795.675                                                           1790.238\nJun 1997                                                           1726.460                                                           1690.321\nJul 1997                                                           1839.641                                                           1824.805\nAug 1997                                                           1880.624                                                           1910.777\nSep 1997                                                           1560.233                                                           1535.065\nOct 1997                                                           1793.940                                                           1730.530\nNov 1997                                                           1764.010                                                           1784.176\nDec 1997                                                           1814.106                                                           1776.366\nJan 1998                                                           1550.166                                                           1509.254\nFeb 1998                                                           1518.736                                                           1488.906\nMar 1998                                                           1821.925                                                           1687.189\nApr 1998                                                           1830.578                                                           1738.204\nMay 1998                                                           1810.060                                                           1827.650\nJun 1998                                                           1787.400                                                           1826.817\nJul 1998                                                           1949.634                                                           1971.831\nAug 1998                                                           1937.484                                                           2080.604\nSep 1998                                                           1667.282                                                           1691.146\nOct 1998                                                           1768.856                                                           1825.928\nNov 1998                                                           1795.157                                                           1715.297\nDec 1998                                                           1746.211                                                           1837.246\nJan 1999                                                           1516.375                                                           1531.118\nFeb 1999                                                           1437.391                                                           1499.040\nMar 1999                                                           1844.915                                                           1827.695\nApr 1999                                                           1889.750                                                           1763.164\nMay 1999                                                           1906.115                                                           1859.851\nJun 1999                                                           1890.645                                                           1860.614\nJul 1999                                                           2060.390                                                           2006.899\nAug 1999                                                           2006.190                                                           2075.282\nSep 1999                                                           1466.583                                                           1677.697\nOct 1999                                                           1762.656                                                           1838.659\nNov 1999                                                           1800.479                                                           1807.965\nDec 1999                                                           1873.534                                                           1862.014\nJan 2000                                                           1619.846                                                           1593.253\nFeb 2000                                                           1644.304                                                           1544.705\nMar 2000                                                           1930.496                                                           1843.911\nApr 2000                                                           2009.216                                                           1934.187\nMay 2000                                                           2011.250                                                           2037.719\nJun 2000                                                           1889.466                                                           2030.621\nJul 2000                                                           2137.662                                                           2082.368\nAug 2000                                                           2129.888                                                           2104.249\nSep 2000                                                           1836.015                                                           1779.665\nOct 2000                                                           1969.672                                                           1890.469\nNov 2000                                                           1880.362                                                           1879.030\nDec 2000                                                           2049.427                                                           2024.771\nJan 2001                                                           1748.040                                                           1761.697\nFeb 2001                                                           1729.952                                                           1733.421\nMar 2001                                                           1987.263                                                           2016.014\n         structure.c.1679.09101331696..1582.97636089056..1854.1526980279...1 structure.c.1678.35741584976..1659.14175244523..1922.31374524569..\nJan 1991                                                            1679.091                                                           1678.357\nFeb 1991                                                            1582.976                                                           1659.142\nMar 1991                                                            1854.153                                                           1922.314\nApr 1991                                                            1824.543                                                           1844.306\nMay 1991                                                            1920.349                                                           1876.054\nJun 1991                                                            1921.101                                                           1845.581\nJul 1991                                                            2049.940                                                           1882.285\nAug 1991                                                            2022.430                                                           1989.658\nSep 1991                                                            1656.617                                                           1705.957\nOct 1991                                                            1766.063                                                           1860.640\nNov 1991                                                            1732.828                                                           1860.258\nDec 1991                                                            1758.021                                                           1813.713\nJan 1992                                                            1617.095                                                           1597.066\nFeb 1992                                                            1547.381                                                           1515.739\nMar 1992                                                            1861.927                                                           1844.448\nApr 1992                                                            1842.749                                                           1862.914\nMay 1992                                                            1891.539                                                           1785.492\nJun 1992                                                            1851.091                                                           1783.807\nJul 1992                                                            1973.526                                                           1967.880\nAug 1992                                                            1973.095                                                           2006.325\nSep 1992                                                            1673.320                                                           1711.884\nOct 1992                                                            1849.196                                                           1867.734\nNov 1992                                                            1776.930                                                           1761.091\nDec 1992                                                            1865.659                                                           1867.974\nJan 1993                                                            1600.773                                                           1628.004\nFeb 1993                                                            1539.333                                                           1616.302\nMar 1993                                                            1835.377                                                           2011.240\nApr 1993                                                            1932.387                                                           1895.509\nMay 1993                                                            1930.842                                                           1698.584\nJun 1993                                                            1885.867                                                           1805.908\nJul 1993                                                            1961.760                                                           1944.706\nAug 1993                                                            2016.736                                                           2012.618\nSep 1993                                                            1687.470                                                           1659.830\nOct 1993                                                            1812.305                                                           1833.486\nNov 1993                                                            1742.887                                                           1789.146\nDec 1993                                                            1791.595                                                           1884.937\nJan 1994                                                            1590.293                                                           1593.784\nFeb 1994                                                            1474.199                                                           1461.151\nMar 1994                                                            1818.910                                                           1888.494\nApr 1994                                                            1849.530                                                           1824.016\nMay 1994                                                            1844.784                                                           1877.655\nJun 1994                                                            1844.960                                                           1781.841\nJul 1994                                                            1908.913                                                           1912.104\nAug 1994                                                            1928.327                                                           1964.604\nSep 1994                                                            1625.749                                                           1600.339\nOct 1994                                                            1639.603                                                           1701.164\nNov 1994                                                            1673.879                                                           1670.018\nDec 1994                                                            1760.270                                                           1777.971\nJan 1995                                                            1473.324                                                           1588.923\nFeb 1995                                                            1485.373                                                           1566.786\nMar 1995                                                            1775.471                                                           1808.118\nApr 1995                                                            1796.373                                                           1712.266\nMay 1995                                                            1810.526                                                           1861.748\nJun 1995                                                            1746.735                                                           1740.202\nJul 1995                                                            1839.997                                                           1861.419\nAug 1995                                                            1859.322                                                           1849.942\nSep 1995                                                            1534.008                                                           1535.684\nOct 1995                                                            1622.599                                                           1653.671\nNov 1995                                                            1666.748                                                           1594.025\nDec 1995                                                            1688.187                                                           1606.423\nJan 1996                                                            1369.659                                                           1341.676\nFeb 1996                                                            1302.417                                                           1374.301\nMar 1996                                                            1669.346                                                           1734.826\nApr 1996                                                            1718.331                                                           1765.409\nMay 1996                                                            1689.562                                                           1730.193\nJun 1996                                                            1581.626                                                           1652.365\nJul 1996                                                            1800.813                                                           1756.932\nAug 1996                                                            1842.336                                                           1793.542\nSep 1996                                                            1563.337                                                           1468.780\nOct 1996                                                            1665.752                                                           1700.715\nNov 1996                                                            1713.810                                                           1669.014\nDec 1996                                                            1677.498                                                           1720.434\nJan 1997                                                            1497.907                                                           1457.820\nFeb 1997                                                            1357.273                                                           1432.364\nMar 1997                                                            1729.973                                                           1724.091\nApr 1997                                                            1734.796                                                           1757.274\nMay 1997                                                            1808.065                                                           1825.345\nJun 1997                                                            1766.042                                                           1687.464\nJul 1997                                                            1881.556                                                           1872.920\nAug 1997                                                            1934.877                                                           1927.180\nSep 1997                                                            1603.492                                                           1645.671\nOct 1997                                                            1741.642                                                           1767.374\nNov 1997                                                            1714.100                                                           1756.885\nDec 1997                                                            1817.608                                                           1789.215\nJan 1998                                                            1568.750                                                           1530.794\nFeb 1998                                                            1454.724                                                           1496.492\nMar 1998                                                            1734.667                                                           1776.224\nApr 1998                                                            1801.369                                                           1843.823\nMay 1998                                                            1883.507                                                           1869.315\nJun 1998                                                            1780.878                                                           1758.081\nJul 1998                                                            1832.251                                                           1850.819\nAug 1998                                                            1994.779                                                           1971.765\nSep 1998                                                            1665.787                                                           1703.932\nOct 1998                                                            1831.007                                                           1768.866\nNov 1998                                                            1799.998                                                           1698.074\nDec 1998                                                            1891.263                                                           1841.308\nJan 1999                                                            1557.513                                                           1586.981\nFeb 1999                                                            1494.551                                                           1580.640\nMar 1999                                                            1789.073                                                           1844.765\nApr 1999                                                            1892.018                                                           1871.988\nMay 1999                                                            1896.407                                                           1864.766\nJun 1999                                                            1861.349                                                           1843.870\nJul 1999                                                            1947.158                                                           1967.323\nAug 1999                                                            2013.015                                                           1906.968\nSep 1999                                                            1694.631                                                           1627.347\nOct 1999                                                            1832.873                                                           1827.227\nNov 1999                                                            1776.862                                                           1810.091\nDec 1999                                                            1842.957                                                           1881.521\nJan 2000                                                            1659.041                                                           1677.579\nFeb 2000                                                            1559.634                                                           1543.795\nMar 2000                                                            1921.034                                                           1923.348\nApr 2000                                                            1965.625                                                           1931.960\nMay 2000                                                            1974.851                                                           2009.017\nJun 2000                                                            1985.133                                                           1965.254\nJul 2000                                                            2059.193                                                           2079.028\nAug 2000                                                            2088.430                                                           2129.434\nSep 2000                                                            1795.674                                                           1795.131\nOct 2000                                                            1819.889                                                           1933.388\nNov 2000                                                            1864.526                                                           1905.953\nDec 2000                                                            1960.636                                                           2012.201\nJan 2001                                                            1771.741                                                           1766.080\nFeb 2001                                                            1768.180                                                           1655.429\nMar 2001                                                            2089.283                                                           2016.014\n         structure.c.1749.43655465283..1627.75975450604..1938.84571798435.. structure.c.1708.70814512987..1627.21507234922..1928.33469491881..\nJan 1991                                                           1749.437                                                           1708.708\nFeb 1991                                                           1627.760                                                           1627.215\nMar 1991                                                           1938.846                                                           1928.335\nApr 1991                                                           1876.787                                                           1915.532\nMay 1991                                                           1916.161                                                           1940.967\nJun 1991                                                           1864.956                                                           1828.921\nJul 1991                                                           1925.845                                                           1946.391\nAug 1991                                                           1948.833                                                           2033.563\nSep 1991                                                           1600.716                                                           1633.460\nOct 1991                                                           1795.521                                                           1797.026\nNov 1991                                                           1838.500                                                           1723.810\nDec 1991                                                           1801.824                                                           1739.657\nJan 1992                                                           1451.300                                                           1570.662\nFeb 1992                                                           1456.045                                                           1584.688\nMar 1992                                                           1813.865                                                           1916.801\nApr 1992                                                           1858.474                                                           1853.166\nMay 1992                                                           1924.284                                                           1855.443\nJun 1992                                                           1935.966                                                           1806.260\nJul 1992                                                           1978.278                                                           1904.124\nAug 1992                                                           2040.613                                                           1951.134\nSep 1992                                                           1618.404                                                           1738.067\nOct 1992                                                           1832.627                                                           1841.848\nNov 1992                                                           1763.949                                                           1850.163\nDec 1992                                                           1819.859                                                           1869.533\nJan 1993                                                           1611.600                                                           1646.612\nFeb 1993                                                           1505.697                                                           1603.488\nMar 1993                                                           1875.653                                                           1913.247\nApr 1993                                                           1915.579                                                           1850.662\nMay 1993                                                           1976.381                                                           1892.948\nJun 1993                                                           1934.154                                                           1882.435\nJul 1993                                                           1954.820                                                           1913.508\nAug 1993                                                           2026.759                                                           2001.860\nSep 1993                                                           1660.036                                                           1703.535\nOct 1993                                                           1804.568                                                           1785.708\nNov 1993                                                           1803.722                                                           1707.581\nDec 1993                                                           1820.877                                                           1703.964\nJan 1994                                                           1638.393                                                           1561.955\nFeb 1994                                                           1547.490                                                           1561.236\nMar 1994                                                           1761.484                                                           1846.693\nApr 1994                                                           1889.182                                                           1877.749\nMay 1994                                                           1856.687                                                           1969.375\nJun 1994                                                           1832.105                                                           1814.769\nJul 1994                                                           1892.920                                                           1703.615\nAug 1994                                                           1959.673                                                           1914.262\nSep 1994                                                           1639.942                                                           1627.524\nOct 1994                                                           1720.106                                                           1771.229\nNov 1994                                                           1687.833                                                           1733.367\nDec 1994                                                           1702.355                                                           1819.770\nJan 1995                                                           1532.035                                                           1543.003\nFeb 1995                                                           1538.441                                                           1556.580\nMar 1995                                                           1862.932                                                           1808.118\nApr 1995                                                           1783.982                                                           1712.266\nMay 1995                                                           1770.944                                                           1861.748\nJun 1995                                                           1704.820                                                           1740.202\nJul 1995                                                           1785.744                                                           1861.419\nAug 1995                                                           1816.062                                                           1849.942\nSep 1995                                                           1586.305                                                           1535.684\nOct 1995                                                           1672.508                                                           1653.671\nNov 1995                                                           1663.246                                                           1588.591\nDec 1995                                                           1669.694                                                           1645.593\nJan 1996                                                           1403.298                                                           1334.872\nFeb 1996                                                           1368.437                                                           1357.326\nMar 1996                                                           1647.609                                                           1707.563\nApr 1996                                                           1714.039                                                           1745.294\nMay 1996                                                           1738.361                                                           1793.044\nJun 1996                                                           1624.448                                                           1670.519\nJul 1996                                                           1714.505                                                           1812.794\nAug 1996                                                           1833.735                                                           1830.265\nSep 1996                                                           1564.187                                                           1538.913\nOct 1996                                                           1629.447                                                           1679.825\nNov 1996                                                           1558.981                                                           1559.768\nDec 1996                                                           1704.496                                                           1638.162\nJan 1997                                                           1452.451                                                           1467.413\nFeb 1997                                                           1453.289                                                           1413.922\nMar 1997                                                           1737.623                                                           1746.403\nApr 1997                                                           1801.400                                                           1782.490\nMay 1997                                                           1767.303                                                           1721.168\nJun 1997                                                           1719.682                                                           1749.995\nJul 1997                                                           1883.682                                                           1866.872\nAug 1997                                                           1967.152                                                           1957.594\nSep 1997                                                           1662.610                                                           1637.352\nOct 1997                                                           1769.322                                                           1759.962\nNov 1997                                                           1685.461                                                           1738.450\nDec 1997                                                           1748.211                                                           1823.491\nJan 1998                                                           1531.337                                                           1537.408\nFeb 1998                                                           1382.994                                                           1466.823\nMar 1998                                                           1734.797                                                           1793.103\nApr 1998                                                           1792.258                                                           1690.597\nMay 1998                                                           1866.455                                                           1773.595\nJun 1998                                                           1854.839                                                           1788.012\nJul 1998                                                           2022.953                                                           1943.809\nAug 1998                                                           2005.726                                                           2029.482\nSep 1998                                                           1698.003                                                           1766.023\nOct 1998                                                           1720.471                                                           1819.071\nNov 1998                                                           1798.887                                                           1820.754\nDec 1998                                                           1771.033                                                           1753.656\nJan 1999                                                           1542.677                                                           1597.331\nFeb 1999                                                           1524.704                                                           1487.481\nMar 1999                                                           1763.905                                                           1802.031\nApr 1999                                                           1828.608                                                           1826.953\nMay 1999                                                           1906.452                                                           1794.407\nJun 1999                                                           1896.108                                                           1814.012\nJul 1999                                                           2020.427                                                           1971.405\nAug 1999                                                           1995.074                                                           2061.754\nSep 1999                                                           1705.662                                                           1757.905\nOct 1999                                                           1800.194                                                           1810.694\nNov 1999                                                           1825.035                                                           1897.388\nDec 1999                                                           1772.776                                                           1877.066\nJan 2000                                                           1686.728                                                           1612.398\nFeb 2000                                                           1600.650                                                           1573.048\nMar 2000                                                           1894.683                                                           1870.744\nApr 2000                                                           1940.817                                                           1876.934\nMay 2000                                                           1900.155                                                           2027.264\nJun 2000                                                           1874.789                                                           1964.967\nJul 2000                                                           1960.627                                                           2096.933\nAug 2000                                                           2122.554                                                           2129.343\nSep 2000                                                           1853.289                                                           1825.504\nOct 2000                                                           1968.541                                                           1954.625\nNov 2000                                                           1995.939                                                           1956.900\nDec 2000                                                           2096.948                                                           1943.045\nJan 2001                                                           1751.672                                                           1723.803\nFeb 2001                                                           1490.385                                                           1729.989\nMar 2001                                                           1961.036                                                           1967.763\n\n# 2. 각 붓스트랩 시계열에 대해 ARIMA 모형 적용\nfit.arima &lt;- lapply(sim, \n                    function(x) auto.arima(x))                # 함수 auto.arima() : ARIMA 모형\n\nfit.arima\n\n$structure.c.1708.917..1620.586..1972.715..1811.665..1974.964..\nSeries: x \nARIMA(1,1,1)(0,1,1)[12] \n\nCoefficients:\n         ar1      ma1     sma1\n      0.3221  -0.7446  -0.7017\ns.e.  0.1644   0.1185   0.1021\n\nsigma^2 = 4032:  log likelihood = -615.44\nAIC=1238.88   AICc=1239.26   BIC=1249.68\n\n$structure.c.1622.42743753532..1692.92522074207..1917.87774380134..\nSeries: x \nARIMA(0,1,1)(0,1,1)[12] \n\nCoefficients:\n          ma1     sma1\n      -0.4323  -0.8579\ns.e.   0.1066   0.1456\n\nsigma^2 = 2985:  log likelihood = -602.97\nAIC=1211.93   AICc=1212.16   BIC=1220.04\n\n$structure.c.1678.35741584976..1681.4922251051..2030.56516157946..\nSeries: x \nARIMA(2,1,2)(0,1,2)[12] \n\nCoefficients:\n         ar1      ar2      ma1     ma2     sma1    sma2\n      1.4362  -0.5765  -1.8491  0.9276  -0.8973  0.2306\ns.e.  0.1078   0.0999   0.0616  0.0578   0.1068  0.0885\n\nsigma^2 = 3369:  log likelihood = -604.82\nAIC=1223.64   AICc=1224.74   BIC=1242.54\n\n$structure.c.1679.09101331696..1582.97636089056..1854.1526980279..\nSeries: x \nARIMA(0,1,2)(2,1,0)[12] \n\nCoefficients:\n          ma1      ma2     sar1     sar2\n      -0.4736  -0.2348  -0.6650  -0.3113\ns.e.   0.0912   0.0859   0.0899   0.0912\n\nsigma^2 = 4852:  log likelihood = -624.17\nAIC=1258.34   AICc=1258.92   BIC=1271.84\n\n$structure.c.1706.53385960804..1641.70380329126..1924.41014476705..\nSeries: x \nARIMA(2,1,2)(1,1,1)[12] \n\nCoefficients:\n         ar1      ar2      ma1     ma2     sar1     sma1\n      1.3380  -0.6218  -1.7113  0.8734  -0.1731  -0.7100\ns.e.  0.1153   0.1099   0.1015  0.0734   0.1470   0.1434\n\nsigma^2 = 3258:  log likelihood = -604.26\nAIC=1222.52   AICc=1223.61   BIC=1241.42\n\n$structure.c.1716.50284051107..1597.00099324254..1821.50002277332..\nSeries: x \nARIMA(1,1,1)(0,1,1)[12] \n\nCoefficients:\n         ar1      ma1     sma1\n      0.3895  -0.7607  -0.7813\ns.e.  0.1439   0.0988   0.1152\n\nsigma^2 = 2894:  log likelihood = -598.74\nAIC=1205.48   AICc=1205.86   BIC=1216.28\n\n$structure.c.1679.09101331696..1582.97636089056..1854.1526980279...1\nSeries: x \nARIMA(0,1,1)(0,1,1)[12] \n\nCoefficients:\n          ma1    sma1\n      -0.4339  -0.816\ns.e.   0.1117   0.176\n\nsigma^2 = 2206:  log likelihood = -585.08\nAIC=1176.17   AICc=1176.4   BIC=1184.27\n\n$structure.c.1678.35741584976..1659.14175244523..1922.31374524569..\nSeries: x \nARIMA(0,1,2)(0,1,1)[12] \n\nCoefficients:\n          ma1      ma2     sma1\n      -0.4215  -0.2237  -0.8035\ns.e.   0.0934   0.0860   0.1238\n\nsigma^2 = 3100:  log likelihood = -603.1\nAIC=1214.2   AICc=1214.58   BIC=1225\n\n$structure.c.1749.43655465283..1627.75975450604..1938.84571798435..\nSeries: x \nARIMA(1,1,1)(0,1,1)[12] \n\nCoefficients:\n         ar1      ma1     sma1\n      0.4191  -0.7898  -0.7898\ns.e.  0.1336   0.0871   0.1273\n\nsigma^2 = 3818:  log likelihood = -614.21\nAIC=1236.41   AICc=1236.79   BIC=1247.22\n\n$structure.c.1708.70814512987..1627.21507234922..1928.33469491881..\nSeries: x \nARIMA(1,1,1)(0,1,1)[12] \n\nCoefficients:\n         ar1      ma1     sma1\n      0.3687  -0.7724  -0.7445\ns.e.  0.1466   0.0979   0.1104\n\nsigma^2 = 3384:  log likelihood = -606.59\nAIC=1221.17   AICc=1221.55   BIC=1231.97\n\n\nCaution! ARIMA 모형 생성은 함수 auto.arima()를 이용한다.\nResult! 총 10개의 ARIMA 예측 모형이 생성된 것을 알 수 있다.\n\n# 3. 예측\nstart  &lt;- tsp(train.ts)[2]+1/12                               # tsp(time series)[2] : Last Date +1/12 = First Date in Forecast\n\n## 3-1. 각 ARIMA 모형의 예측 결과 생성\nfc  &lt;- lapply(fit.arima, \n              function(x){ \n                forecast(x, h = nTest)[[\"mean\"]]              # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n              }) %&gt;%  \n  as.data.frame() %&gt;%                                         # Data Frame으로 변환\n  ts(frequency = 12, start = start)                           # 시계열 객체 ts로 변환\n\nfc\n\n         structure.c.1708.917..1620.586..1972.715..1811.665..1974.964.. structure.c.1622.42743753532..1692.92522074207..1917.87774380134..\nApr 2001                                                       2019.638                                                           1946.126\nMay 2001                                                       2047.291                                                           1990.483\nJun 2001                                                       2041.622                                                           1966.504\nJul 2001                                                       2138.616                                                           2073.705\nAug 2001                                                       2168.222                                                           2132.357\nSep 2001                                                       1857.933                                                           1815.232\nOct 2001                                                       2004.558                                                           1946.543\nNov 2001                                                       2007.457                                                           1928.296\nDec 2001                                                       2033.645                                                           1969.384\nJan 2002                                                       1758.009                                                           1728.930\nFeb 2002                                                       1735.541                                                           1689.149\nMar 2002                                                       2049.103                                                           1980.485\nApr 2002                                                       2067.463                                                           1963.555\nMay 2002                                                       2097.259                                                           2007.911\nJun 2002                                                       2092.279                                                           1983.933\nJul 2002                                                       2189.496                                                           2091.133\nAug 2002                                                       2219.174                                                           2149.786\nSep 2002                                                       1908.908                                                           1832.661\nOct 2002                                                       2055.540                                                           1963.971\nNov 2002                                                       2058.441                                                           1945.725\nDec 2002                                                       2084.631                                                           1986.813\nJan 2003                                                       1808.995                                                           1746.359\nFeb 2003                                                       1786.527                                                           1706.577\nMar 2003                                                       2100.089                                                           1997.913\nApr 2003                                                       2118.449                                                           1980.983\nMay 2003                                                       2148.244                                                           2025.340\nJun 2003                                                       2143.265                                                           2001.361\nJul 2003                                                       2240.482                                                           2108.562\nAug 2003                                                       2270.159                                                           2167.215\nSep 2003                                                       1959.893                                                           1850.089\nOct 2003                                                       2106.526                                                           1981.400\nNov 2003                                                       2109.427                                                           1963.154\nDec 2003                                                       2135.616                                                           2004.241\nJan 2004                                                       1859.980                                                           1763.787\nFeb 2004                                                       1837.513                                                           1724.006\nMar 2004                                                       2151.075                                                           2015.342\n         structure.c.1678.35741584976..1681.4922251051..2030.56516157946.. structure.c.1679.09101331696..1582.97636089056..1854.1526980279..\nApr 2001                                                          1959.780                                                          2018.250\nMay 2001                                                          2007.728                                                          2037.752\nJun 2001                                                          2002.863                                                          1982.542\nJul 2001                                                          2148.797                                                          2114.069\nAug 2001                                                          2200.887                                                          2153.390\nSep 2001                                                          1875.048                                                          1861.116\nOct 2001                                                          2025.012                                                          1994.538\nNov 2001                                                          1974.805                                                          1963.343\nDec 2001                                                          2028.643                                                          2012.374\nJan 2002                                                          1802.989                                                          1799.925\nFeb 2002                                                          1699.039                                                          1781.426\nMar 2002                                                          2032.671                                                          2070.293\nApr 2002                                                          2041.260                                                          2083.183\nMay 2002                                                          2077.558                                                          2080.770\nJun 2002                                                          2067.220                                                          2040.338\nJul 2002                                                          2212.247                                                          2185.448\nAug 2002                                                          2239.092                                                          2222.041\nSep 2002                                                          1927.974                                                          1943.620\nOct 2002                                                          2073.749                                                          2080.093\nNov 2002                                                          2045.561                                                          2010.808\nDec 2002                                                          2098.291                                                          2068.288\nJan 2003                                                          1868.975                                                          1862.732\nFeb 2003                                                          1765.405                                                          1859.505\nMar 2003                                                          2089.463                                                          2138.886\nApr 2003                                                          2103.630                                                          2156.937\nMay 2003                                                          2143.637                                                          2175.371\nJun 2003                                                          2135.408                                                          2125.207\nJul 2003                                                          2281.327                                                          2260.596\nAug 2003                                                          2308.236                                                          2297.012\nSep 2003                                                          1996.696                                                          2022.338\nOct 2003                                                          2141.829                                                          2152.676\nNov 2003                                                          2112.960                                                          2095.217\nDec 2003                                                          2165.084                                                          2137.357\nJan 2004                                                          1935.290                                                          1939.521\nFeb 2004                                                          1831.382                                                          1934.292\nMar 2004                                                          2155.231                                                          2206.195\n         structure.c.1706.53385960804..1641.70380329126..1924.41014476705.. structure.c.1716.50284051107..1597.00099324254..1821.50002277332..\nApr 2001                                                           2047.047                                                           2020.052\nMay 2001                                                           2071.845                                                           2084.582\nJun 2001                                                           2020.729                                                           2053.314\nJul 2001                                                           2159.599                                                           2154.900\nAug 2001                                                           2155.499                                                           2205.186\nSep 2001                                                           1780.384                                                           1852.720\nOct 2001                                                           1960.800                                                           1993.420\nNov 2001                                                           1944.741                                                           1977.642\nDec 2001                                                           1994.697                                                           2044.239\nJan 2002                                                           1740.931                                                           1797.758\nFeb 2002                                                           1723.938                                                           1758.853\nMar 2002                                                           2037.394                                                           2036.464\nApr 2002                                                           2083.846                                                           2053.551\nMay 2002                                                           2096.466                                                           2123.163\nJun 2002                                                           2032.419                                                           2093.874\nJul 2002                                                           2194.410                                                           2196.231\nAug 2002                                                           2195.716                                                           2246.818\nSep 2002                                                           1840.143                                                           1894.469\nOct 2002                                                           2016.035                                                           2035.214\nNov 2002                                                           1988.667                                                           2019.454\nDec 2002                                                           2058.862                                                           2086.058\nJan 2003                                                           1795.485                                                           1839.579\nFeb 2003                                                           1776.713                                                           1800.675\nMar 2003                                                           2079.170                                                           2078.287\nApr 2003                                                           2127.209                                                           2095.374\nMay 2003                                                           2141.766                                                           2164.986\nJun 2003                                                           2080.179                                                           2135.698\nJul 2003                                                           2238.568                                                           2238.054\nAug 2003                                                           2239.337                                                           2288.641\nSep 2003                                                           1880.666                                                           1936.292\nOct 2003                                                           2057.473                                                           2077.038\nNov 2003                                                           2032.064                                                           2061.277\nDec 2003                                                           2098.674                                                           2127.881\nJan 2004                                                           1836.851                                                           1881.403\nFeb 2004                                                           1818.291                                                           1842.499\nMar 2004                                                           2122.592                                                           2120.110\n         structure.c.1679.09101331696..1582.97636089056..1854.1526980279...1 structure.c.1678.35741584976..1659.14175244523..1922.31374524569..\nApr 2001                                                            2114.515                                                           2018.252\nMay 2001                                                            2141.721                                                           2036.507\nJun 2001                                                            2100.250                                                           1976.389\nJul 2001                                                            2197.710                                                           2098.849\nAug 2001                                                            2249.223                                                           2138.361\nSep 2001                                                            1934.896                                                           1831.641\nOct 2001                                                            2038.874                                                           1976.682\nNov 2001                                                            2031.588                                                           1940.156\nDec 2001                                                            2097.246                                                           2017.477\nJan 2002                                                            1866.162                                                           1776.861\nFeb 2002                                                            1796.292                                                           1715.759\nMar 2002                                                            2119.440                                                           2044.700\nApr 2002                                                            2161.096                                                           2045.575\nMay 2002                                                            2188.302                                                           2067.707\nJun 2002                                                            2146.831                                                           2007.589\nJul 2002                                                            2244.290                                                           2130.049\nAug 2002                                                            2295.804                                                           2169.560\nSep 2002                                                            1981.477                                                           1862.841\nOct 2002                                                            2085.455                                                           2007.881\nNov 2002                                                            2078.169                                                           1971.355\nDec 2002                                                            2143.827                                                           2048.676\nJan 2003                                                            1912.743                                                           1808.061\nFeb 2003                                                            1842.873                                                           1746.959\nMar 2003                                                            2166.021                                                           2075.900\nApr 2003                                                            2207.677                                                           2076.774\nMay 2003                                                            2234.883                                                           2098.906\nJun 2003                                                            2193.412                                                           2038.789\nJul 2003                                                            2290.871                                                           2161.249\nAug 2003                                                            2342.384                                                           2200.760\nSep 2003                                                            2028.058                                                           1894.041\nOct 2003                                                            2132.036                                                           2039.081\nNov 2003                                                            2124.750                                                           2002.555\nDec 2003                                                            2190.408                                                           2079.876\nJan 2004                                                            1959.324                                                           1839.261\nFeb 2004                                                            1889.454                                                           1778.159\nMar 2004                                                            2212.602                                                           2107.100\n         structure.c.1749.43655465283..1627.75975450604..1938.84571798435.. structure.c.1708.70814512987..1627.21507234922..1928.33469491881..\nApr 2001                                                           2001.373                                                           1967.715\nMay 2001                                                           2017.679                                                           2029.788\nJun 2001                                                           1982.402                                                           1993.337\nJul 2001                                                           2086.002                                                           2115.100\nAug 2001                                                           2147.804                                                           2182.032\nSep 2001                                                           1849.676                                                           1883.818\nOct 2001                                                           1949.154                                                           1986.041\nNov 2001                                                           1950.808                                                           1980.423\nDec 2001                                                           1983.631                                                           1988.060\nJan 2002                                                           1754.202                                                           1762.691\nFeb 2002                                                           1650.766                                                           1728.377\nMar 2002                                                           1983.425                                                           2020.869\nApr 2002                                                           2027.536                                                           2012.731\nMay 2002                                                           2045.424                                                           2071.821\nJun 2002                                                           2010.810                                                           2034.271\nJul 2002                                                           2114.688                                                           2155.629\nAug 2002                                                           2176.606                                                           2222.411\nSep 2002                                                           1878.527                                                           1924.142\nOct 2002                                                           1978.026                                                           2026.345\nNov 2002                                                           1979.688                                                           2020.719\nDec 2002                                                           2012.515                                                           2028.353\nJan 2003                                                           1783.087                                                           1802.984\nFeb 2003                                                           1679.652                                                           1768.669\nMar 2003                                                           2012.311                                                           2061.161\nApr 2003                                                           2056.423                                                           2053.023\nMay 2003                                                           2074.310                                                           2112.113\nJun 2003                                                           2039.696                                                           2074.563\nJul 2003                                                           2143.575                                                           2195.920\nAug 2003                                                           2205.493                                                           2262.703\nSep 2003                                                           1907.413                                                           1964.434\nOct 2003                                                           2006.912                                                           2066.637\nNov 2003                                                           2008.575                                                           2061.010\nDec 2003                                                           2041.401                                                           2068.645\nJan 2004                                                           1811.973                                                           1843.275\nFeb 2004                                                           1708.538                                                           1808.961\nMar 2004                                                           2041.197                                                           2101.453\n\n\nResult! 위에서 생성한 10개의 ARIMA 예측 모형 각각에 대해 예측값이 생성된 것을 확인할 수 있다.\n\n# Plot\nautoplot(train.ts) +                                          # 원 시계열  \n  autolayer(sim, colour = TRUE) +                             # 붓스트랩 시계열  \n  autolayer(fc, colour = TRUE) +                              # 특정 시점까지의 예측값\n  autolayer(train.ts, colour = FALSE) +                       # 원 시계열을 한 번 더 지정해서 맨 앞으로 가져오기 \n  ylab(\"Bootrstrapped series\") + \n  guides(colour = \"none\")\n\n\n\n\n\n\n\n\n\n# 4. 평균을 이용한 최종 예측 \napply(fc, 1, mean)                                            # 중앙값일 경우, mean -&gt; median\n\n [1] 2011.275 2046.538 2011.995 2128.735 2173.296 1854.247 1987.562 1969.926 2016.940 1778.846 1727.914 2037.484 2053.980 2085.638 2050.956 2171.362 2213.701 1899.476 2032.231 2011.859 2061.631\n[22] 1822.900 1773.356 2079.920 2097.648 2131.956 2096.758 2215.920 2258.194 1943.992 2076.161 2057.099 2104.918 1867.066 1817.309 2123.290\n\n\n\n\n12.3.2.2 Ver. 2\nCaution! 붓스트랩 시계열을 생성하고 각각에 ARIMA 예측 모형을 생성하는 과정은 함수 baggedModel()를 통해 수행할 수 있다. 예를 들어, 10개의 붓스트랩 시계열 각각에 대해 ARIMA 예측 모형을 생성하는 코드 lapply(bld.mbb.bootstrap(train.ts, 10), function(x){auto.arima(x)})은\nbaggedModel(train.ts, bld.mbb.bootstrap(train.ts, 10), fn = auto.arima)와 동일하다.\n\n# 1-4번 : 10개의 붓스트랩 시계열을 생성하고 각각에 ARIMA 예측 모형을 생성한 후 예측\nset.seed(10)                                                          # Seed 고정 -&gt; 동일한 결과를 출력하기 위해\nbaggedfc &lt;- train.ts %&gt;% \n  baggedModel(bld.mbb.bootstrap(train.ts, 10), fn = auto.arima) %&gt;%   # 10개의 붓스트랩 시계열을 생성한 후, 각각에 ARIMA 예측 모형 생성    \n  forecast(h = nTest)                                                 # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n\nbaggedfc\n\n         Point Forecast   Lo 100   Hi 100\nApr 2001       2011.275 1946.126 2114.515\nMay 2001       2046.538 1990.483 2141.721\nJun 2001       2011.995 1966.504 2100.250\nJul 2001       2128.735 2073.705 2197.710\nAug 2001       2173.296 2132.357 2249.223\nSep 2001       1854.247 1780.384 1934.896\nOct 2001       1987.562 1946.543 2038.874\nNov 2001       1969.926 1928.296 2031.588\nDec 2001       2016.940 1969.384 2097.246\nJan 2002       1778.846 1728.930 1866.162\nFeb 2002       1727.914 1650.766 1796.292\nMar 2002       2037.484 1980.485 2119.440\nApr 2002       2053.980 1963.555 2161.096\nMay 2002       2085.638 2007.911 2188.302\nJun 2002       2050.956 1983.933 2146.831\nJul 2002       2171.362 2091.133 2244.290\nAug 2002       2213.701 2149.786 2295.804\nSep 2002       1899.476 1832.661 1981.477\nOct 2002       2032.231 1963.971 2085.455\nNov 2002       2011.859 1945.725 2078.169\nDec 2002       2061.631 1986.813 2143.827\nJan 2003       1822.900 1746.359 1912.743\nFeb 2003       1773.356 1679.652 1859.505\nMar 2003       2079.920 1997.913 2166.021\nApr 2003       2097.648 1980.983 2207.677\nMay 2003       2131.956 2025.340 2234.883\nJun 2003       2096.758 2001.361 2193.412\nJul 2003       2215.920 2108.562 2290.871\nAug 2003       2258.194 2167.215 2342.384\nSep 2003       1943.992 1850.089 2028.058\nOct 2003       2076.161 1981.400 2152.676\nNov 2003       2057.099 1963.154 2124.750\nDec 2003       2104.918 2004.241 2190.408\nJan 2004       1867.066 1763.787 1959.324\nFeb 2004       1817.309 1708.538 1934.292\nMar 2004       2123.290 2015.342 2212.602\n\n\nResult! 결과에서 Point Forecast는 특정 시점에서의 붓스트랩 예측값들의 평균이며, 위의 “Ver.1”에서 “4. 평균을 이용한 최종 예측”과 결과가 동일하다. Lo 100은 특정 시점에서의 붓스트랩 예측값들의 최솟값, Hi 100는 특정 시점에서의 붓스트랩 예측값들의 최댓값을 의미한다.\n\n# 특정 시점에서 각 붓스트랩 시계열의 예측값\nbaggedfc$forecasts_boot\n\n          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]     [,9]    [,10]\n [1,] 2019.638 1946.126 1959.780 2018.250 2047.047 2020.052 2114.515 2018.252 2001.373 1967.715\n [2,] 2047.291 1990.483 2007.728 2037.752 2071.845 2084.582 2141.721 2036.507 2017.679 2029.788\n [3,] 2041.622 1966.504 2002.863 1982.542 2020.729 2053.314 2100.250 1976.389 1982.402 1993.337\n [4,] 2138.616 2073.705 2148.797 2114.069 2159.599 2154.900 2197.710 2098.849 2086.002 2115.100\n [5,] 2168.222 2132.357 2200.887 2153.390 2155.499 2205.186 2249.223 2138.361 2147.804 2182.032\n [6,] 1857.933 1815.232 1875.048 1861.116 1780.384 1852.720 1934.896 1831.641 1849.676 1883.818\n [7,] 2004.558 1946.543 2025.012 1994.538 1960.800 1993.420 2038.874 1976.682 1949.154 1986.041\n [8,] 2007.457 1928.296 1974.805 1963.343 1944.741 1977.642 2031.588 1940.156 1950.808 1980.423\n [9,] 2033.645 1969.384 2028.643 2012.374 1994.697 2044.239 2097.246 2017.477 1983.631 1988.060\n[10,] 1758.009 1728.930 1802.989 1799.925 1740.931 1797.758 1866.162 1776.861 1754.202 1762.691\n[11,] 1735.541 1689.149 1699.039 1781.426 1723.938 1758.853 1796.292 1715.759 1650.766 1728.377\n[12,] 2049.103 1980.485 2032.671 2070.293 2037.394 2036.464 2119.440 2044.700 1983.425 2020.869\n[13,] 2067.463 1963.555 2041.260 2083.183 2083.846 2053.551 2161.096 2045.575 2027.536 2012.731\n[14,] 2097.259 2007.911 2077.558 2080.770 2096.466 2123.163 2188.302 2067.707 2045.424 2071.821\n[15,] 2092.279 1983.933 2067.220 2040.338 2032.419 2093.874 2146.831 2007.589 2010.810 2034.271\n[16,] 2189.496 2091.133 2212.247 2185.448 2194.410 2196.231 2244.290 2130.049 2114.688 2155.629\n[17,] 2219.174 2149.786 2239.092 2222.041 2195.716 2246.818 2295.804 2169.560 2176.606 2222.411\n[18,] 1908.908 1832.661 1927.974 1943.620 1840.143 1894.469 1981.477 1862.841 1878.527 1924.142\n[19,] 2055.540 1963.971 2073.749 2080.093 2016.035 2035.214 2085.455 2007.881 1978.026 2026.345\n[20,] 2058.441 1945.725 2045.561 2010.808 1988.667 2019.454 2078.169 1971.355 1979.688 2020.719\n[21,] 2084.631 1986.813 2098.291 2068.288 2058.862 2086.058 2143.827 2048.676 2012.515 2028.353\n[22,] 1808.995 1746.359 1868.975 1862.732 1795.485 1839.579 1912.743 1808.061 1783.087 1802.984\n[23,] 1786.527 1706.577 1765.405 1859.505 1776.713 1800.675 1842.873 1746.959 1679.652 1768.669\n[24,] 2100.089 1997.913 2089.463 2138.886 2079.170 2078.287 2166.021 2075.900 2012.311 2061.161\n[25,] 2118.449 1980.983 2103.630 2156.937 2127.209 2095.374 2207.677 2076.774 2056.423 2053.023\n[26,] 2148.244 2025.340 2143.637 2175.371 2141.766 2164.986 2234.883 2098.906 2074.310 2112.113\n[27,] 2143.265 2001.361 2135.408 2125.207 2080.179 2135.698 2193.412 2038.789 2039.696 2074.563\n[28,] 2240.482 2108.562 2281.327 2260.596 2238.568 2238.054 2290.871 2161.249 2143.575 2195.920\n[29,] 2270.159 2167.215 2308.236 2297.012 2239.337 2288.641 2342.384 2200.760 2205.493 2262.703\n[30,] 1959.893 1850.089 1996.696 2022.338 1880.666 1936.292 2028.058 1894.041 1907.413 1964.434\n[31,] 2106.526 1981.400 2141.829 2152.676 2057.473 2077.038 2132.036 2039.081 2006.912 2066.637\n[32,] 2109.427 1963.154 2112.960 2095.217 2032.064 2061.277 2124.750 2002.555 2008.575 2061.010\n[33,] 2135.616 2004.241 2165.084 2137.357 2098.674 2127.881 2190.408 2079.876 2041.401 2068.645\n[34,] 1859.980 1763.787 1935.290 1939.521 1836.851 1881.403 1959.324 1839.261 1811.973 1843.275\n[35,] 1837.513 1724.006 1831.382 1934.292 1818.291 1842.499 1889.454 1778.159 1708.538 1808.961\n[36,] 2151.075 2015.342 2155.231 2206.195 2122.592 2120.110 2212.602 2107.100 2041.197 2101.453\n\n\nResult! 열 번호는 생성된 10개의 붓스트랩 시계열 각각을 의미하며, 각 열의 값들은 특정 시점까지 붓스트랩 시계열에 대한 예측값이다.\n\n# 특정 시점에서의 붓스트랩 예측값들의 평균\nbaggedfc$mean\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n2001                            2011.275 2046.538 2011.995 2128.735 2173.296 1854.247 1987.562 1969.926 2016.940\n2002 1778.846 1727.914 2037.484 2053.980 2085.638 2050.956 2171.362 2213.701 1899.476 2032.231 2011.859 2061.631\n2003 1822.900 1773.356 2079.920 2097.648 2131.956 2096.758 2215.920 2258.194 1943.992 2076.161 2057.099 2104.918\n2004 1867.066 1817.309 2123.290                                                                                 \n\n\n\n# 특정 시점에서의 붓스트랩 예측값들의 중앙값\nbaggedfc$median\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug      Sep      Oct      Nov      Dec\n2001                            2018.251 2037.130 1998.100 2126.858 2161.861 1855.327 1989.731 1969.074 2014.925\n2002 1769.776 1726.158 2036.929 2049.563 2079.164 2037.304 2187.472 2220.607 1901.688 2030.780 2015.131 2063.575\n2003 1808.528 1772.691 2078.728 2099.502 2142.702 2102.693 2238.311 2266.431 1948.093 2071.837 2061.144 2113.278\n2004 1851.628 1824.837 2121.351                                                                                 \n\n\n\n# 95% Predictive Interval\nboot.pred &lt;- t(baggedfc$forecasts_boot)                       # 특정 시점에서 각 붓스트랩 시계열의 예측값\nPI.pred   &lt;- apply(boot.pred, 2, function(x) { quantile(x, probs = c(0.025, 0.975) ) })\n\nResult! 95% 예측 구간은 붓스트랩 시계열에 대한 예측값들의 분위수를 계산하여 얻을 수 있다.\n\n# Results for 95% Predictive Interval \ndata.frame(\"PI.lower\" = PI.pred[1,], \"PI.upper\" = PI.pred[2,], \n           \"length of PI\" = PI.pred[2,]-PI.pred[1,]) %&gt;%\n  as_tibble()\n\n# A tibble: 36 × 3\n   PI.lower PI.upper length.of.PI\n      &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;\n 1    1949.    2099.        150. \n 2    1994.    2129.        135. \n 3    1969.    2090.        121. \n 4    2076.    2189.        113. \n 5    2134.    2239.        106. \n 6    1788.    1923.        135. \n 7    1947.    2036.         88.6\n 8    1931.    2026.         95.2\n 9    1973.    2085.        113. \n10    1732.    1852.        120. \n# ℹ 26 more rows\n\n\n\n\n12.3.2.3 예측 결과 비교\n\n원 시계열을 이용한 예측 결과와 배깅을 이용한 예측 결과를 비교한다.\n\n\n# 원 시계열에 대한 예측\narimafc    &lt;- train.ts %&gt;% \n  auto.arima() %&gt;%                                            # ARIMA 예측 모형 생성\n  forecast(h = nTest)                                         # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n\n# Plot\nautoplot(train.ts) +                                          # 원 시계열 \n  ylab(\"Ridership\") +                                         # y축 라벨 \n  autolayer(arimafc, series = \"auto.arima\", PI = FALSE) +     # 원 시계열에 대한 예측 결과\n  autolayer(baggedfc, series = \"BaggedARIMA\", PI = FALSE) +   # 배깅을 이용한 예측 결과\n  guides(colour= guide_legend(title = \"Prediction\"))\n\n\n\n\n\n\n\n\n\n# Plot with Predictive Interval\n## 1. Original Prediction Result\nOriginal &lt;- data.frame(\"Date\" = as.numeric(time(test.ts)),                    # Date\n                       \"Y\" = c(test.ts),                                      # Test Dataset\n                       \"Pred\" = c(arimafc$mean),                              # Prediction Result\n                       \"PI.lower\" = c(arimafc$lower[,2]),                     # Lower of Predictive Interval\n                       \"PI.upper\" = c(arimafc$upper[,2]),                     # Upper of Predictive Interval\n                       \"Type\" = \"Original\"\n)\n\nOriginal %&gt;%\n  as_tibble\n\n# A tibble: 36 × 6\n    Date     Y  Pred PI.lower PI.upper Type    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;   \n 1 2001. 2024. 2020.    1895.    2144. Original\n 2 2001. 2047. 2047.    1904.    2191. Original\n 3 2001. 2073. 2042.    1888.    2196. Original\n 4 2002. 2127. 2139.    1977.    2300. Original\n 5 2002. 2203. 2168.    2000.    2337. Original\n 6 2002. 1708. 1858.    1683.    2033. Original\n 7 2002. 1951. 2005.    1823.    2186. Original\n 8 2002. 1974. 2007.    1820.    2195. Original\n 9 2002. 1985. 2034.    1841.    2227. Original\n10 2002  1760. 1758.    1559.    1957. Original\n# ℹ 26 more rows\n\n## 2. Bagging Prediction Result\nBagging &lt;- data.frame(\"Date\" = as.numeric(time(test.ts)),                     # Date\n                      \"Y\" = c(test.ts),                                       # Test Dataset\n                      \"Pred\" = c(baggedfc$mean),                              # Prediction Result\n                      \"PI.lower\" = PI.pred[1,],                               # Lower of Predictive Interval\n                      \"PI.upper\" = PI.pred[2,],                               # Upper of Predictive Interval\n                      \"Type\" = \"Bagging\" \n)\n\nBagging %&gt;%\n  as_tibble\n\n# A tibble: 36 × 6\n    Date     Y  Pred PI.lower PI.upper Type   \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;  \n 1 2001. 2024. 2011.    1949.    2099. Bagging\n 2 2001. 2047. 2047.    1994.    2129. Bagging\n 3 2001. 2073. 2012.    1969.    2090. Bagging\n 4 2002. 2127. 2129.    2076.    2189. Bagging\n 5 2002. 2203. 2173.    2134.    2239. Bagging\n 6 2002. 1708. 1854.    1788.    1923. Bagging\n 7 2002. 1951. 1988.    1947.    2036. Bagging\n 8 2002. 1974. 1970.    1931.    2026. Bagging\n 9 2002. 1985. 2017.    1973.    2085. Bagging\n10 2002  1760. 1779.    1732.    1852. Bagging\n# ℹ 26 more rows\n\n## 3. Combine\ndf &lt;- rbind(Original, Bagging)\n\ndf %&gt;%\n  as_tibble\n\n# A tibble: 72 × 6\n    Date     Y  Pred PI.lower PI.upper Type    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;   \n 1 2001. 2024. 2020.    1895.    2144. Original\n 2 2001. 2047. 2047.    1904.    2191. Original\n 3 2001. 2073. 2042.    1888.    2196. Original\n 4 2002. 2127. 2139.    1977.    2300. Original\n 5 2002. 2203. 2168.    2000.    2337. Original\n 6 2002. 1708. 1858.    1683.    2033. Original\n 7 2002. 1951. 2005.    1823.    2186. Original\n 8 2002. 1974. 2007.    1820.    2195. Original\n 9 2002. 1985. 2034.    1841.    2227. Original\n10 2002  1760. 1758.    1559.    1957. Original\n# ℹ 62 more rows\n\n## 4. Plot\nggplot(df, aes(x = Date, y = Pred, group = Type)) +\n  geom_line(aes(col = Type)) +\n  geom_line(aes(y = Y)) +                                                    # Test Dataset                \n  geom_ribbon(aes(ymin = PI.lower, ymax = PI.upper), fill = \"grey30\", alpha = 0.3) +\n  facet_wrap(~Type) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n# 예측 정확도\nforecast::accuracy(arimafc$mean, test.ts)\n\n                ME     RMSE     MAE      MPE     MAPE      ACF1 Theil's U\nTest set -45.98599 76.50042 53.0434 -2.38829 2.739223 0.5795161 0.4483051\n\nforecast::accuracy(baggedfc$mean, test.ts)\n\n                ME     RMSE      MAE       MPE     MAPE      ACF1 Theil's U\nTest set -28.79187 67.63581 46.62996 -1.543973 2.417507 0.5488607 0.3926581",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bootstrap and Bagging</span>"
    ]
  },
  {
    "objectID": "Ensemble.html",
    "href": "Ensemble.html",
    "title": "13  Ensemble",
    "section": "",
    "text": "13.1 Amtrak\n예제 데이터로 사용하는 \"Amtrak.csv\"은 1991년 1월부터 2004년 3월까지 미국 철도 회사인 암트랙에서 제공한 월간 승객 수(단위 : 1,000명)가 기록되어져 있다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Ensemble</span>"
    ]
  },
  {
    "objectID": "Ensemble.html#amtrak",
    "href": "Ensemble.html#amtrak",
    "title": "13  Ensemble",
    "section": "",
    "text": "13.1.1 데이터 불러오기\n\npacman::p_load(\"forecast\",\n               \"forecastHybrid\",                   # For Ensemble \n               \"dplyr\")\n\nAmtrak.data &lt;- read.csv(\".../Amtrak.csv\")          # 데이터 불러오기\n\nAmtrak.data %&gt;%\n  as_tibble\n\n\n\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n\n\n\n\n13.1.2 데이터 전처리\n\n# Convert to ts for Target\nridership.ts &lt;- ts(Amtrak.data$Ridership, \n                   start = c(1991, 2),            # 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   frequency = 12)                # 주기 / 월별 시계열로 1년에 12번 관측\n\n\n# 시계열 그림\nplot(ridership.ts, \n     xlab = \"Time\", ylab = \"Ridership (in 000s)\",\n     ylim = c(1300, 2300))\n\n\n\n\n\n\n\n\nCaution! CSV 파일로 불러온 데이터를 살펴보면 승객 수를 포함하는 변수 Ridership가 수치형임을 알 수 있다. 시계열 데이터 분석을 위해 함수 ts()를 이용하여 해당 변수를 시계열 객체로 변환해야 한다.\nResult! 시계열 그림을 살펴보면 Amtrak 데이터는 U자 형태의 추세를 발견할 수 있으며, 여름(7월과 8월) 동안에 승객이 급증하는 뚜렷한 계절변동도 볼 수 있다.\n\n\n13.1.3 데이터 분할\nCaution! 시계열 데이터 분석 시 모형의 과적합을 피하고 미래 데이터에 대한 예측력을 계산하기 위해 Training Dataset과 Test Dataset으로 분할해야 한다. 시계열 데이터의 경우, 시간에 의존하기 때문에 시간 순서를 고려하여 데이터를 분할해야 한다. 즉, 앞 시점의 데이터를 Training Dataset로 사용하여 모형을 구축하고, 뒷 시점의 데이터를 Test Dataset로 사용하여 구축된 모형의 성능을 평가한다. 여기서는 데이터 분할을 위해 함수 window()를 사용한다.\n\n# Partition for Target\ntrain.ts &lt;- window(ridership.ts, \n                   start = c(1991, 2),            # 분할하고자 하는 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   end = c(2001, 3))              # 분할하고자 하는 시계열의 마지막 연도 / c(2001, 3) : 2001년 3월\n\ntest.ts &lt;- window(ridership.ts,\n                   start = c(2001, 4))            # 분할하고자 하는 시계열의 시작 연도 / c(2001, 4) : 2001년 4월\n\nnTrain   &lt;- length(train.ts)                      # Training Dataset의 데이터 포인트 개수\n\nnTest   &lt;- length(test.ts)                        # Test Dataset의 데이터 포인트 개수\n\ntrain.ts %&gt;%\n  as_tibble\n\n# A tibble: 122 × 1\n       x\n   &lt;dbl&gt;\n 1 1709.\n 2 1621.\n 3 1973.\n 4 1812.\n 5 1975.\n 6 1862.\n 7 1940.\n 8 2013.\n 9 1596.\n10 1725.\n# ℹ 112 more rows\n\ntest.ts %&gt;%\n  as_tibble\n\n# A tibble: 37 × 1\n       x\n   &lt;dbl&gt;\n 1 2008.\n 2 2024.\n 3 2047.\n 4 2073.\n 5 2127.\n 6 2203.\n 7 1708.\n 8 1951.\n 9 1974.\n10 1985.\n# ℹ 27 more rows\n\nnTrain\n\n[1] 122\n\nnTest\n\n[1] 37",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Ensemble</span>"
    ]
  },
  {
    "objectID": "Ensemble.html#ensemble",
    "href": "Ensemble.html#ensemble",
    "title": "13  Ensemble",
    "section": "13.2 Ensemble",
    "text": "13.2 Ensemble\n\n여기에서는 forecastHybrid 패키지를 활용하여 다양한 예측 모형을 결합한 앙상블(Ensemble) 예측을 수행하는 방법을 다룬다. 시계열 모형은 각각의 특성에 따라 예측력이 다르므로, 여러 모형을 결합하여 예측 정확도를 향상시킬 수 있다. 특히 forecastHybrid는 ARIMA, ETS, NNETAR, STLM 등 여러 모형을 자동으로 결합해주는 기능을 제공한다.\n\n\nset.seed(100)\nfit &lt;- hybridModel(train.ts, \n                   models = \"afnst\", \n                   weights = \"cv\", \n                   parallel = TRUE,\n                   num.cores = 8) \n\nCode!\n\n인자 models에 입력할 수 있는 모형은 다음과 같다:\n\n\n\n\n\n\n\n\n\n코드\n모형명\n설명\n\n\n\n\na\nARIMA\nBox-Jenkins ARIMA 모형 (자동 모수 선택 포함)\n\n\ne\nETS\n지수 평활법 (Error, Trend, Seasonal을 자동 선택)\n\n\nn\nNNETAR\n비선형 신경망 기반 자기회귀 모형 (Neural Network Autoregression)\n\n\ns\nSTLM\nSeasonal Decomposition + AR 모형 (계절 분해 후 AR모형 적용)\n\n\nt\nTBATS\n복잡한 다중 계절성과 트렌드/변동성 처리 가능\n\n\nb\nBATS\nTBATS의 일반화 형태로, Box-Cox 변환 + ARMA 오차 포함 시계열 모형\n\n\nf\nTheta\nTheta method (간단하지만 M3 대회에서 강력한 성능을 보인 모형)\n\n\n\n\n\n인자 weights는 각 개별 모형의 예측 결과를 결합할 때의 가중치 방식을 결정하는 중요한 요소이다. 이 인자를 어떻게 설정하느냐에 따라 앙상블 모형의 최종 예측 결과가 달라지므로, 이해하고 적절히 사용하는 것이 매우 중요하다.\n\n\n역할: 앙상블 예측은 단순 평균이 아니라, 각 모형의 예측 결과에 서로 다른 가중치를 부여하여 합산하는 방식이다.\n\n인자 weights는 각 모형에 할당되는 가중치의 계산 방식을 결정한다.\n잘 설계된 가중치는 성능이 우수한 모형의 기여도를 높이고, 부정확한 모형의 영향력을 줄여준다.\n\n\nweights에 입력할 수 있는 옵션\n\n\n\n\n\n\n\n\n옵션\n설명\n사용 예시\n\n\n\n\n\"equal\"\n모든 모형에 동일한 가중치를 부여함. 가장 단순한 방식.\n기본값\n\n\n\"insample\"\n학습 데이터(in-sample)의 예측 오차에 따라 가중치를 부여함.\n\n\n\n\"cv\"\n시계열 교차검증(cross-validation)을 통해 예측 성능 기반으로 가중치 계산\n추천\n\n\nnumeric 벡터\n사용자가 직접 지정한 가중치 벡터 (각 모형 수에 맞춰야 함)\nweights = c(0.4, 0.2, 0.1, 0.2, 0.1)\n\n\n\n\n# ARIMA에 대한 결과 확인\nfit$auto.arima\n\nSeries: y \nARIMA(1,1,1)(0,1,1)[12] \n\nCoefficients:\n         ar1      ma1     sma1\n      0.3283  -0.7479  -0.7038\ns.e.  0.1669   0.1204   0.1019\n\nsigma^2 = 4058:  log likelihood = -610.25\nAIC=1228.5   AICc=1228.89   BIC=1239.27\n\nsummary(fit$auto.arima)           # Fitting for auto.arima function\n\nSeries: y \nARIMA(1,1,1)(0,1,1)[12] \n\nCoefficients:\n         ar1      ma1     sma1\n      0.3283  -0.7479  -0.7038\ns.e.  0.1669   0.1204   0.1019\n\nsigma^2 = 4058:  log likelihood = -610.25\nAIC=1228.5   AICc=1228.89   BIC=1239.27\n\nTraining set error measures:\n                   ME     RMSE      MAE       MPE     MAPE      MASE        ACF1\nTraining set 6.576241 59.37774 45.65479 0.2881609 2.601098 0.5538053 -0.03470734",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Ensemble</span>"
    ]
  },
  {
    "objectID": "Ensemble.html#예측",
    "href": "Ensemble.html#예측",
    "title": "13  Ensemble",
    "section": "13.3 예측",
    "text": "13.3 예측\n\npred   &lt;- forecast(fit,\n                   h = nTest)    # Test Dataset의 데이터 포인트 개수만큼 예측값 계산 \n\n# 예측값\npred\n\n         Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\nApr 2001       1949.271 1740.712 2060.912 1695.044 2100.744\nMay 2001       1973.780 1825.111 2095.270 1769.349 2145.250\nJun 2001       2011.249 1874.444 2134.014 1808.545 2187.532\nJul 2001       1993.049 1848.713 2134.570 1794.861 2190.777\nAug 2001       2092.364 1941.210 2236.676 1884.986 2295.265\nSep 2001       2130.277 1974.642 2283.678 1911.852 2347.990\nOct 2001       1850.760 1677.195 2075.482 1608.926 2139.969\nNov 2001       1960.235 1787.452 2118.726 1718.640 2179.863\nDec 2001       1960.826 1785.478 2128.148 1709.913 2188.422\nJan 2002       1986.123 1802.088 2151.372 1726.974 2220.320\nFeb 2002       1730.978 1553.836 1900.729 1471.620 1963.097\nMar 2002       1679.736 1502.288 1860.377 1416.941 1933.044\nApr 2002       1951.783 1689.227 2174.885 1605.771 2253.139\nMay 2002       1976.867 1767.151 2203.697 1696.570 2285.450\nJun 2002       2015.803 1839.620 2240.285 1752.919 2324.919\nJul 2002       1999.186 1778.283 2240.451 1687.148 2327.728\nAug 2002       2098.253 1901.874 2342.718 1812.917 2432.516\nSep 2002       2136.410 1930.015 2377.201 1833.956 2469.436\nOct 2002       1874.175 1610.084 2170.855 1505.410 2223.308\nNov 2002       1978.327 1727.213 2222.146 1626.512 2319.061\nDec 2002       1977.811 1723.008 2229.204 1613.435 2328.375\nJan 2003       2001.415 1745.429 2259.675 1640.321 2361.053\nFeb 2003       1770.153 1494.872 2057.430 1380.611 2132.367\nMar 2003       1700.743 1444.903 1969.731 1328.368 2075.384\nApr 2003       1960.988 1673.703 2283.675 1576.619 2394.618\nMay 2003       1982.339 1735.957 2312.668 1641.148 2427.205\nJun 2003       2021.436 1792.263 2349.615 1671.041 2467.223\nJul 2003       2005.265 1729.245 2350.202 1612.150 2470.676\nAug 2003       2104.154 1858.539 2452.922 1739.489 2576.155\nSep 2003       2142.463 1882.964 2487.875 1761.997 2613.794\nOct 2003       1888.196 1561.354 2200.757 1430.003 2311.018\nNov 2003       1993.211 1681.907 2333.797 1557.222 2464.914\nDec 2003       1992.965 1676.207 2341.357 1540.921 2474.996\nJan 2004       2015.863 1701.674 2372.337 1573.404 2508.452\nFeb 2004       1799.797 1449.501 2146.595 1310.391 2240.107\nMar 2004       1724.775 1400.246 2083.426 1259.262 2224.362\nApr 2004       1977.599 1672.876 2397.210 1577.958 2543.352\n\n\n\n# 예측 정확도\nforecast::accuracy(pred, test.ts) \n\n                   ME     RMSE      MAE        MPE     MAPE      MASE      ACF1 Theil's U\nTraining set  2.04853 62.01226 50.14847 -0.1143187 2.904593 0.6083148 0.1746752        NA\nTest set     36.61818 83.19876 70.01543  1.6983184 3.518814 0.8493065 0.5900636 0.4920212",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Ensemble</span>"
    ]
  },
  {
    "objectID": "Neuron.html",
    "href": "Neuron.html",
    "title": "14  Neural Network Model",
    "section": "",
    "text": "14.1 Introduction",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Neural Network Model</span>"
    ]
  },
  {
    "objectID": "Neuron.html#introduction",
    "href": "Neuron.html#introduction",
    "title": "14  Neural Network Model",
    "section": "",
    "text": "시계열 데이터에 신경망을 이용하여 모형 적합과 예측을 할 수 있다.\nRidership on Amtrak Trains(미국 철도 회사 “Amtrak”에서 수집한 1991년 1월~2004년 3월까지 매달 환승 고객 수) 예제를 이용하여 신경망 자기회귀모형이 실제 데이터에 어떻게 적용되는지 설명한다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Neural Network Model</span>"
    ]
  },
  {
    "objectID": "Neuron.html#신경망",
    "href": "Neuron.html#신경망",
    "title": "14  Neural Network Model",
    "section": "14.2 신경망",
    "text": "14.2 신경망\n\n신경망은 예측변수(또는 입력값)가 밑바닥 계층을 이루고 예측값(또는 출력값)이 꼭대기 계층을 이루며 이 두 계층 중간에는 숨겨진 뉴런을 포함하는 계층이 있을 수 있다.\n숨겨진 계층이 없는 경우는 선형 회귀와 같다.\n아래의 그림은 4개의 예측변수를 고려하는 선형 회귀의 신경망 버전이다.\n\n\n\n\n\n선형 회귀에 대응되는 단순한 신경망.\n\n\n\n\n숨겨진 뉴런이 중간 계층에 있으면 신경망은 비선형이 되며 숨겨진 계층의 수와 각 숨겨진 계층의 노드 수는 반드시 미리 정해야한다.\n다음 그림은 단순한 예제를 나타낸다.\n\n\n\n\n\n4개의 입력값과 1개의 숨은 층에 3개의 숨은 뉴런이 있는 신경망.\n\n\n\n\n각 계층의 노드는 이전의 계층에서부터 입력값을 받는데 한 계층의 노드의 출력값은 다음 계층의 입력값이 된다.\n각 마디의 입력값은 가중 선형 형태로 결합이 되며, 결과는 출력되기 전에 비선형 함수에 의해 수정된다.\n\n예를 들어 위의 그림에서 숨겨진 뉴런 \\(j\\)로 들어가는 입력값은\n\n\n\\[\n\\begin{aligned}\nz_{j}=b_{j}+\\sum_{i=1}^{4}\\omega_{i,j}x_{i}.\n\\end{aligned}\n\\]\n\n이것은 다음 계층의 입력값이 되기전 비선형 함수에 의해 수정된다.\n\n\\[\n\\begin{aligned}\ns(z)=\\frac{1}{1+e^{-z}}.\n\\end{aligned}\n\\]\n\n다음 계층의 노드로 들어 갈 때 각 계층의 출력값은 \\(s(z)\\)이며, 이것은 또 다시 가중 선형 형태로 결합되어 다음 계층의 노드의 입력값으로 들어간다.\n비선형 함수로 수정됨으로써 극단적인 입력값의 효과를 줄이는 경향이 있기에 이상치에 덜 민감하다.\n매개변수 \\(b_{j}\\), \\(\\omega_{i,j}\\)는 data로부터 학습된 것이며 가중치의 값은 종종 너무 커지지 않도록 제한된다.\n\n“학습된”의 의미는 처음에는 가중치 값을 무작위로 주지만 관측된 data를 이용하여 가중치는 update된다.\n\n신경망으로 출력된 예측값에는 무작위성이 있다.\n\n다른 무작위 시작점을 가지고 연결망을 여러번 훈련시키고, 결과들의 평균을 구한다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Neural Network Model</span>"
    ]
  },
  {
    "objectID": "Neuron.html#신경망-자기회귀",
    "href": "Neuron.html#신경망-자기회귀",
    "title": "14  Neural Network Model",
    "section": "14.3 신경망 자기회귀",
    "text": "14.3 신경망 자기회귀\n\n시계열의 시차값이 신경망의 입력값으로써 사용될 수 있으며 이것을 신경망 자기회귀 또는 NNAR 모형이라고 부른다.\n\n\n14.3.1 데이터 불러오기\n\npacman::p_load(\"forecast\",\n               \"ggplot2\",\n               \"dplyr\")\n\nAmtrak.data &lt;- read.csv(\".../Amtrak.csv\")          # 데이터 불러오기\n\nAmtrak.data %&gt;%\n  as_tibble\n\n\n\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n\n\n\n\n14.3.2 데이터 전처리\n\n# Convert to ts for Target\nridership.ts &lt;- ts(Amtrak.data$Ridership, \n                   start = c(1991, 2),            # 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   frequency = 12)                # 주기 / 월별 시계열로 1년에 12번 관측\n\n\n# 시계열 그림\nplot(ridership.ts, \n     xlab = \"Time\", ylab = \"Ridership (in 000s)\",\n     ylim = c(1300, 2300))\n\n\n\n\n\n\n\n\nCaution! CSV 파일로 불러온 데이터를 살펴보면 승객 수를 포함하는 변수 Ridership가 수치형임을 알 수 있다. 시계열 데이터 분석을 위해 함수 ts()를 이용하여 해당 변수를 시계열 객체로 변환해야 한다.\nResult! 시계열 그림을 살펴보면 Amtrak 데이터는 U자 형태의 추세를 발견할 수 있으며, 여름(7월과 8월) 동안에 승객이 급증하는 뚜렷한 계절변동도 볼 수 있다.\n\n\n14.3.3 모형 적합\n\nNNAR(\\(p,k\\))에서 \\(p\\)는 입력값으로써 사용된 시차의 수, \\(k\\)는 숨겨진 계층의 노드 수를 의미한다.\nNNAR(\\(p,k\\))는 출력값 \\(y_{t}\\)를 예측하기 위해 마지막 \\(p\\)개의 관측값 (\\(y_{t-1}\\), \\(y_{t-2}\\), \\(\\ldots\\), \\(y_{t-p}\\))을 입력값으로 사용하고 숨겨진 계층에 \\(k\\)개의 뉴런이 있는 신경망이다.\n\nNNAR(\\(p,0\\))는 ARIMA(\\(p,0,0\\)) 모형과 같지만 정상성을 보장하는 모수에 대한 제약이 없다. (ARIMA(\\(p,0,0\\)) 모형은 모수가 1보다 작아야 정상성 만족)\n\n계절성 data에 대하여, 같은 계절의 마지막 관측값을 입력값으로 넣는 것도 유용하다.\n계절성이 있는 경우 모형은 NNAR\\((p,P,k)_{m}\\)로써 \\(P\\)는 입력값으로써 사용된 계절성 시차의 수이며 \\(m\\)은 주기를 의미한다.\nNNAR\\((p,P,k)_{m}\\)은 \\(y_{t-1}\\), \\(\\ldots\\), \\(y_{t-p}\\), \\(y_{t-m}\\), \\(y_{t-2m}\\), \\(\\ldots\\), \\(y_{t-mP}\\)를 입력값으로써 사용하고, 숨겨진 계층에 \\(k\\)개의 뉴런이 있다.\n\nNNAR\\((p,P,k)_{m}\\)은 ARIMA\\((p,0,0)(P,0,0)_{m}\\) 모형과 같지만 정상성을 보장하는 모수에 대한 제약이 없다.\n\nR 함수 nnetar()은 NNAR\\((p,P,k)_{m}\\) 모델을 적합시키며, \\(p\\)와 \\(P\\)값들을 정하지 않으면, 자동적으로 선택된다.\n\n비계절성에 대해서는 AR(\\(p\\)) 모형에 대하여 최적의 시차수가 기본값이다.\n계절성 시계열에 대해서는 기본값은 \\(P\\)=1이고 \\(p\\)는 계절성으로 조정된 데이터에 맞춘 최적 선형 모델로 고른다.\n\n\\(k\\)를 정하지 않으면 \\(k=(p+P+1)/2\\)로 둔다. (가장 가까운 정수로 반올림)\n\n\n\nset.seed(10)\nfit &lt;- nnetar(ridership.ts,  repeats = 200, \n              lambda = \"auto\")                            # If lambda=\"auto\", then a transformation is automatically selected using BoxCox.lambda\n                                                          # 200 networks to fit with different random starting weights & averaged./ Size : The number of hidden node\n\nautoplot(forecast(fit, h = 30)) + \n  ylab(\"Ridership\")\n\n\n\n\n\n\n\n\n\n예측할 때는 연결망을 반복하여 적용한다.\n\n한 단계 앞을 예측할 때는 단순히 주어진 과거 데이터를 입력값으로 사용하며 두 단계 앞을 예측할 때는 한 단계 예측값을 과거 데이터와 함께 입력으로 사용한다.\n필요한 모든 예측값을 계산할 때까지 이 과정을 수행한다.\n\n\n\n\n14.3.4 예측 구간\n\n신경망 모델 \\(y_{t}=f(\\)y\\(_{t-1})+\\epsilon_{t}\\)에서 오차는 정규분포를 따른다고 가정하기에 정규분포로부터 오차값을 무작위로 얻어 반복적으로 시뮬레이션할 수 있다.\n\n예를 들어 \\(T+1\\)에서 \\(\\epsilon^{*}_{T+1}\\)이 오차의 분포로부터 무작위로 뽑은 것이라고 하면, \\(y^{*}_{T+1}=f(\\)y\\(_{T})+\\epsilon^{*}_{T+1}\\)로 \\(y_{T+1}\\)에 대한 추정값을 얻을 수 있다. 이 때, \\(y^{*}_{T+1}\\)은 \\(y_{T+1}\\)에 대한 예측분포로부터 뽑을 수 있는 하나의 가능한 값이다.\n\n\n\nsim &lt;- ts(matrix(0, nrow = 30L, \n                 ncol = 9L), \n          start = end(ridership.ts)[1L] + 1L) \n\n\nset.seed(10)\nfor(i in seq(9)){\n  \n  sim[,i] &lt;- simulate(fit, nsim = 30L)\n\n}\n\nautoplot(ridership.ts) + \n  autolayer(sim) +\n  ylab(\"Ridership\")\n\n\n\n\n\n\n\n\n\nset.seed(10)\nfcast &lt;- forecast(fit,\n                  PI = TRUE, \n                  npaths = 1000,                       # Npaths : How many simulation/ Normal error \n                  h = 30) \n\nautoplot(fcast) + \n  ylab(\"Ridership\")\n\n\n\n\n\n\n\n\n\nsimulate 함수를 이용히여 예측구간을 구할 수도 있지만 forecast() 함수의 PI=TRUE를 통하여 예측구간을 얻을 수 있다.\n\n오차는 기본적으로 정규분포에서 추출한다.",
    "crumbs": [
      "Advanced Model",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Neural Network Model</span>"
    ]
  },
  {
    "objectID": "ML.html",
    "href": "ML.html",
    "title": "15  Machine Learning",
    "section": "",
    "text": "15.1 Introduction",
    "crumbs": [
      "ML & DL",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Machine Learning</span>"
    ]
  },
  {
    "objectID": "ML.html#introduction",
    "href": "ML.html#introduction",
    "title": "15  Machine Learning",
    "section": "",
    "text": "트리 기반 머신 러닝 기법(Tree-based on Machine Learning Technique)을 시계열에 적용하는 방법에 대해 정리한다.\n\n\n트리 기반 머신 러닝 기법(Tree-based on Machine Learning Technique)은 몇 가지 장점을 가지고 있어 모델링에 널리 사용되는 머신 러닝 방법이다.\n\n이해하기 쉽다.\n트리 구조는 시각화 하기에 간단하며, 탐색적 분석에 유용하다.\n빠르다.\n예측 정확도가 우수하다.\n\n하지만, 이상치에 예민하다는 단점이 있다.\n\n트리는 Training Data를 바탕으로 간단한 규치만 배우면서 만들어지기 때문이다.\n\n그렇기 때문에, 트리 기반 머신러닝 기법은 추세를 포착할 수 없다.\n\nRef. 1, 2, 3, 4, 5\n\n그래서 분해(Decomposition)을 이용하여, 추세(Trend)가 제거된 Detrend Data에 트리 기반 머신 러닝 기법을 적용해야한다.\n\n추세는 적절한 시계열 모형을 이용하여 예측한다.\n\n최종 예측 = 머신 러닝의 예측값 + 추세의 예측값",
    "crumbs": [
      "ML & DL",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Machine Learning</span>"
    ]
  },
  {
    "objectID": "ML.html#application",
    "href": "ML.html#application",
    "title": "15  Machine Learning",
    "section": "15.2 Application",
    "text": "15.2 Application\n\nRidership on Amtrak Trains(미국 철도 회사 “Amtrak”에서 수집한 1991년 1월~2004년 3월까지 매달 환승 고객 수) 예제를 이용하여 트리 기반 머신 러닝 기법이 실제 데이터에 어떻게 적용되는지 설명한다.\n\n\n15.2.1 데이터 불러오기\n\npacman::p_load( \"dplyr\", \"xts\", \n                \"caret\", \"caretEnsemble\",\n                \"forecast\", \n                \"ggplot2\")\n\nlibrary(doParallel)\nlibrary(parallel)\n\nregisterDoParallel(cores=detectCores())\n\n# In Mac\n# guess_encoding(\"Amtrak.csv\")\n# Amtrak.data &lt;- read.csv(\"Amtrak.csv\", fileEncoding=\"EUC-KR\")\n\nAmtrak.data  &lt;- read.csv(\".../Amtrak.csv\")\n\nAmtrak.data %&gt;%\n  as_tibble\n\n\n\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n\n\n\n\n15.2.2 데이터 전처리\n\n# Convert to ts for Target\nridership.ts &lt;- ts(Amtrak.data$Ridership, \n                   start = c(1991, 2),            # 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   frequency = 12)                # 주기 / 월별 시계열로 1년에 12번 관측\n\n# 시계열 그림\nplot(ridership.ts, \n     xlab = \"Time\", ylab = \"Ridership (in 000s)\",\n     ylim = c(1300, 2300))\n\n\n\n\n\n\n\n\nCaution! CSV 파일로 불러온 데이터를 살펴보면 승객 수를 포함하는 변수 Ridership가 수치형임을 알 수 있다. 시계열 데이터 분석을 위해 함수 ts()를 이용하여 해당 변수를 시계열 객체로 변환해야 한다.\nResult! 시계열 그림을 살펴보면 Amtrak 데이터는 U자 형태의 추세를 발견할 수 있으며, 여름(7월과 8월) 동안에 승객이 급증하는 뚜렷한 계절변동도 볼 수 있다.\n\n\n15.2.3 데이터 분할\nCaution! 시계열 데이터 분석 시 모형의 과적합을 피하고 미래 데이터에 대한 예측력을 계산하기 위해 Training Dataset과 Test Dataset으로 분할해야 한다. 시계열 데이터의 경우, 시간에 의존하기 때문에 시간 순서를 고려하여 데이터를 분할해야 한다. 즉, 앞 시점의 데이터를 Training Dataset로 사용하여 모형을 구축하고, 뒷 시점의 데이터를 Test Dataset로 사용하여 구축된 모형의 성능을 평가한다. 여기서는 데이터 분할을 위해 함수 window()를 사용한다.\n\n# Partition for Target\ntrain.ts &lt;- window(ridership.ts, \n                   start = c(1991, 2),            # 분할하고자 하는 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   end = c(2001, 3))              # 분할하고자 하는 시계열의 마지막 연도 / c(2001, 3) : 2001년 3월\n\ntest.ts &lt;- window(ridership.ts,\n                   start = c(2001, 4))            # 분할하고자 하는 시계열의 시작 연도 / c(2001, 4) : 2001년 4월\n\nnTrain   &lt;- length(train.ts)                      # Training Dataset의 데이터 포인트 개수\n\nnTest   &lt;- length(test.ts)                        # Test Dataset의 데이터 포인트 개수\n\ntrain.ts %&gt;%\n  as_tibble\n\n# A tibble: 122 × 1\n       x\n   &lt;dbl&gt;\n 1 1709.\n 2 1621.\n 3 1973.\n 4 1812.\n 5 1975.\n 6 1862.\n 7 1940.\n 8 2013.\n 9 1596.\n10 1725.\n# ℹ 112 more rows\n\ntest.ts %&gt;%\n  as_tibble\n\n# A tibble: 37 × 1\n       x\n   &lt;dbl&gt;\n 1 2008.\n 2 2024.\n 3 2047.\n 4 2073.\n 5 2127.\n 6 2203.\n 7 1708.\n 8 1951.\n 9 1974.\n10 1985.\n# ℹ 27 more rows\n\nnTrain\n\n[1] 122\n\nnTest\n\n[1] 37\n\n\n\n\n15.2.4 예측 변수 생성\n\n머신 러닝 기법을 적용하기 위해 예측 변수(Predictor Variable)를 생성하였다.\n\n퓨리에 항(Fourier Terms)\n달(Month)\n\n\n\n# 1. Fourier Term\nFT      &lt;- fourier(train.ts, K = 2)                  # K : sine, cosine 쌍의 개수/시계열 데이터의 계절 주기가 2개 이상일 때, K는 계절 주기 수만큼 필요\nFT.Test &lt;- fourier(train.ts, K = 2, h = nTest)\n\n# 2. Month\nxts(ridership.ts, order = as.Date(ridership.ts))\n\n               [,1]\n1991-02-01 1708.917\n1991-03-01 1620.586\n1991-04-01 1972.715\n1991-05-01 1811.665\n1991-06-01 1974.964\n1991-07-01 1862.356\n1991-08-01 1939.860\n1991-09-01 2013.264\n1991-10-01 1595.657\n1991-11-01 1724.924\n1991-12-01 1675.667\n1992-01-01 1813.863\n1992-02-01 1614.827\n1992-03-01 1557.088\n1992-04-01 1891.223\n1992-05-01 1955.981\n1992-06-01 1884.714\n1992-07-01 1623.042\n1992-08-01 1903.309\n1992-09-01 1996.712\n1992-10-01 1703.897\n1992-11-01 1810.000\n1992-12-01 1861.601\n1993-01-01 1875.122\n1993-02-01 1705.259\n1993-03-01 1618.535\n1993-04-01 1836.709\n1993-05-01 1957.043\n1993-06-01 1917.185\n1993-07-01 1882.398\n1993-08-01 1933.009\n1993-09-01 1996.167\n1993-10-01 1672.841\n1993-11-01 1752.827\n1993-12-01 1720.377\n1994-01-01 1734.292\n1994-02-01 1563.365\n1994-03-01 1573.959\n1994-04-01 1902.639\n1994-05-01 1833.888\n1994-06-01 1831.049\n1994-07-01 1775.755\n1994-08-01 1867.508\n1994-09-01 1906.608\n1994-10-01 1685.632\n1994-11-01 1778.546\n1994-12-01 1775.995\n1995-01-01 1783.350\n1995-02-01 1548.415\n1995-03-01 1496.925\n1995-04-01 1798.316\n1995-05-01 1732.895\n1995-06-01 1772.345\n1995-07-01 1761.207\n1995-08-01 1791.655\n1995-09-01 1874.820\n1995-10-01 1571.309\n1995-11-01 1646.948\n1995-12-01 1672.631\n1996-01-01 1656.845\n1996-02-01 1381.758\n1996-03-01 1360.852\n1996-04-01 1558.575\n1996-05-01 1608.420\n1996-06-01 1696.696\n1996-07-01 1693.183\n1996-08-01 1835.516\n1996-09-01 1942.573\n1996-10-01 1551.401\n1996-11-01 1686.508\n1996-12-01 1576.204\n1997-01-01 1700.433\n1997-02-01 1396.588\n1997-03-01 1371.690\n1997-04-01 1707.522\n1997-05-01 1654.604\n1997-06-01 1762.903\n1997-07-01 1775.800\n1997-08-01 1934.219\n1997-09-01 2008.055\n1997-10-01 1615.924\n1997-11-01 1773.910\n1997-12-01 1732.368\n1998-01-01 1796.626\n1998-02-01 1570.330\n1998-03-01 1412.691\n1998-04-01 1754.641\n1998-05-01 1824.932\n1998-06-01 1843.289\n1998-07-01 1825.964\n1998-08-01 1968.172\n1998-09-01 1921.645\n1998-10-01 1669.597\n1998-11-01 1791.474\n1998-12-01 1816.714\n1999-01-01 1846.754\n1999-02-01 1599.427\n1999-03-01 1548.804\n1999-04-01 1832.333\n1999-05-01 1839.720\n1999-06-01 1846.498\n1999-07-01 1864.852\n1999-08-01 1965.743\n1999-09-01 1949.002\n1999-10-01 1607.373\n1999-11-01 1803.664\n1999-12-01 1850.309\n2000-01-01 1836.435\n2000-02-01 1541.660\n2000-03-01 1616.928\n2000-04-01 1919.538\n2000-05-01 1971.493\n2000-06-01 1992.301\n2000-07-01 2009.763\n2000-08-01 2053.996\n2000-09-01 2097.471\n2000-10-01 1823.706\n2000-11-01 1976.997\n2000-12-01 1981.408\n2001-01-01 2000.153\n2001-02-01 1683.148\n2001-03-01 1663.404\n2001-04-01 2007.928\n2001-05-01 2023.792\n2001-06-01 2047.008\n2001-07-01 2072.913\n2001-08-01 2126.717\n2001-09-01 2202.638\n2001-10-01 1707.693\n2001-11-01 1950.716\n2001-12-01 1973.614\n2002-01-01 1984.729\n2002-02-01 1759.629\n2002-03-01 1770.595\n2002-04-01 2019.912\n2002-05-01 2048.398\n2002-06-01 2068.763\n2002-07-01 1994.267\n2002-08-01 2075.258\n2002-09-01 2026.560\n2002-10-01 1734.155\n2002-11-01 1916.771\n2002-12-01 1858.345\n2003-01-01 1996.352\n2003-02-01 1778.033\n2003-03-01 1749.489\n2003-04-01 2066.466\n2003-05-01 2098.899\n2003-06-01 2104.911\n2003-07-01 2129.671\n2003-08-01 2223.349\n2003-09-01 2174.360\n2003-10-01 1931.406\n2003-11-01 2121.470\n2003-12-01 2076.054\n2004-01-01 2140.677\n2004-02-01 1831.508\n2004-03-01 1838.006\n2004-04-01 2132.446\n\nMonth  &lt;- as.Date(ridership.ts) %&gt;%                  # Date 추출\n  lubridate::month()                                 # Month 추출\n\n## 퓨리에 항과 합치기\nTrain.X &lt;- cbind(\"Month\"= Month[1:length(train.ts)], FT) \nTest.X  &lt;- cbind(\"Month\"= Month[-(1:length(train.ts))], FT.Test)  \n\n\n\n15.2.5 분해\n\n트리 기반 머신러닝 기법은 추세를 포착하기 못하기 떄문에, 추세를 제거한 Detrend Data를 필요로 한다.\nSeasonal and Trend decomposition using Loess (STL) 분해를 이용하여 시계열 데이터를 추세, 계절성과 나머지 성분으로 분해하였다.\n\n만약, 시계열 데이터가 다중 계절성을 갖는다면, mstl()을 이용할 수 있다.\n\n추세를 제거하고 계절성과 나머지 성분을 더한 값을 Target으로 한 Training Dataset을 생성한다.\n\n\ndecomp.ts &lt;- stl(train.ts, s.window = \"periodic\", robust = TRUE)$time.series \n# decomp.ts &lt;- mstl(Power.msts, s.window = \"periodic\", robust = TRUE) # 다중 계절성인 경우\n\n# Target without Trend\nTarget &lt;- decomp.ts %&gt;% \n  data.frame %&gt;%\n  rowwise() %&gt;%                                        # 행별로 작업\n  dplyr::mutate(y=sum( seasonal, remainder )) %&gt;%      # Target = Season + Remainder =&gt; Detrend\n  dplyr::select(y)\n\n\nTrain.Data &lt;- cbind(Target, Train.X)\n\n\n\n15.2.6 머신 러닝 적용\n\n위에서 생성한 Training Dataset에 머신 러닝 기법을 적용한다.\ncaret package를 이용하여, 가장 대표적인 랜덤포레스트(Random Forest)와 eXtreme Gradient Boosting(XGBoost)를 적용해보았다.\n\nHyperparameter는 Random Search를 이용하여 최적의 조합을 찾았다.\n\n게다가, caretEnsemble package를 이용하여, 앙상블(Ensemble) 기법 Stacking도 적용해보았다.\n\n\n15.2.6.1 Random Forest\n\nBagging을 이용한 트리 기반 모형이다.\n나무를 분할할 때 랜덤적으로 후보 예측 변수를 선택함으로써, 생성된 나무들의 연관성은 감소된다.\nRandom Forest에서 Hyperparameter는 mtry로 트리가 분할될 때 랜덤적으로 선택되는 후보군 예측 변수 갯수이다.\n\n\nset.seed(100)\nfitControl &lt;- trainControl(method = \"adaptive_cv\",   # cv, repeatedcv\n                           number = 5,\n                           repeats = 5,\n                           adaptive = list(min = 5,\n                                           alpha = 0.05,\n                                           method = \"BT\",\n                                           complete = TRUE),\n                           search = \"random\",\n                           allowParallel = TRUE) \n\nRF &lt;- function(train, tuneLength, ntree = 500, nodesize = 5){\n  \n  set.seed(100)                                        # seed 고정 For Cross Validation\n  caret.rf &lt;- caret::train(y~., data = train, \n                           method = \"parRF\",           # Tune Parameter : mtry\n                           trControl = fitControl,\n                           tuneLength = tuneLength,   \n                           ntree = ntree,             \n                           nodesize = nodesize,        # nodesize : Terminal Node의 최소 크기\n                           importance = TRUE)   \n  \n  return(caret.rf)\n  \n}\n\nRF.Caret &lt;- RF(Train.Data, \n               tuneLength = 2,     # tuneLength (탐색할 후보 모수 갯수)\n               ntree = 100)        # ntree : 생성할 Tree 수\n\nRF.Caret\n\nParallel Random Forest \n\n122 samples\n  5 predictor\n\nNo pre-processing\nResampling: Adaptively Cross-Validated (5 fold, repeated 5 times) \nSummary of sample sizes: 97, 98, 98, 98, 97, 98, ... \nResampling results across tuning parameters:\n\n  mtry  RMSE      Rsquared   MAE       Resamples\n  1     63.10983  0.8093260  47.98518   5       \n  3     59.44825  0.8251996  45.54272  25       \n\nRMSE was used to select the optimal model using the smallest value.\nThe final value used for the model was mtry = 3.\n\nRF.Caret$finalModel\n\n\nCall:\n randomForest(x = \"x\", y = \"y\", ntree = 17, mtry = 3L, nodesize = 5,      importance = TRUE) \n               Type of random forest: regression\n                     Number of trees: 102\nNo. of variables tried at each split: 3\n\nRF.Caret$finalModel$tuneValue\n\n  mtry\n2    3\n\n\n\n\n15.2.6.2 XGBoost\n\nBoosting을 이용한 트리 기반 모형이다.\n손실함수와 경사하강법을 이용하는 Gradient Boosting의 단점을 해결하기 위해 제안되었다.\n가장 큰 특징으로는, 병렬 처리로 인해 빠르고 조기 종료가 가능하다는 것이다.\nXGBoost에서 Hyperparameter는 다음과 같다.\n\nnrounds : 반복 수\nmax_depth : Tree의 최대 깊이\neta : Learning Late\ngamma : 분할하기 위해 필요한 최소 손실 감소, 클수록 분할이 쉽게 일어나지 않음\ncolsample_bytree : Tree 생성 때 사용할 예측변수 비율\nmin_child_weight : 한 leaf 노드에 요구되는 관측치에 대한 가중치의 최소 합\nsubsample : 모델 구축시 사용할 Data비율로 1이면 전체 Data 사용\n\n\n\nset.seed(100)\nfitControl &lt;- trainControl(method = \"adaptive_cv\",   # cv, repeatedcv\n                           number = 5,\n                           repeats = 5,\n                           adaptive = list(min = 5,\n                                           alpha = 0.05,\n                                           method = \"BT\",\n                                           complete = TRUE),\n                           search = \"random\",\n                           allowParallel = TRUE) \n\nXGBoost &lt;- function(train, tuneLength){\n  \n  set.seed(100)                                         # seed 고정 For Cross Validation\n  caret.xgb &lt;- caret::train(y~., data = train, \n                            method = \"xgbTree\",          \n                            trControl = fitControl,\n                            # objective = \"reg:squarederror\", # error(The following parameters were provided multiple times)\n                            tuneLength = tuneLength     # tuneLength (탐색할 후보 모수 갯수)\n  )   \n  \n  return(caret.xgb)\n  \n}\n\nXGB.Caret &lt;- XGBoost(Train.Data, 2)\nXGB.Caret\n\neXtreme Gradient Boosting \n\n122 samples\n  5 predictor\n\nNo pre-processing\nResampling: Adaptively Cross-Validated (5 fold, repeated 5 times) \nSummary of sample sizes: 97, 98, 98, 98, 97, 98, ... \nResampling results across tuning parameters:\n\n  eta        max_depth  gamma     colsample_bytree  min_child_weight  subsample  nrounds  RMSE      Rsquared   MAE       Resamples\n  0.2228220  9          1.702621  0.6528662         3                 0.7517663  624      57.50332  0.8364905  44.61057   5       \n  0.4876292  3          5.465586  0.5499986         5                 0.8219133  358      56.30900  0.8395436  43.37319  25       \n\nRMSE was used to select the optimal model using the smallest value.\nThe final values used for the model were nrounds = 358, max_depth = 3, eta = 0.4876292, gamma = 5.465586, colsample_bytree = 0.5499986, min_child_weight = 5 and subsample = 0.8219133.\n\nXGB.Caret$finalModel\n\n##### xgb.Booster\nraw: 351.4 Kb \ncall:\n  xgboost::xgb.train(params = list(eta = param$eta, max_depth = param$max_depth, \n    gamma = param$gamma, colsample_bytree = param$colsample_bytree, \n    min_child_weight = param$min_child_weight, subsample = param$subsample), \n    data = x, nrounds = param$nrounds, objective = \"reg:squarederror\")\nparams (as set within xgb.train):\n  eta = \"0.48762916797353\", max_depth = \"3\", gamma = \"5.46558595029637\", colsample_bytree = \"0.549998590815812\", min_child_weight = \"5\", subsample = \"0.82191331172362\", objective = \"reg:squarederror\", validate_parameters = \"TRUE\"\nxgb.attributes:\n  niter\ncallbacks:\n  cb.print.evaluation(period = print_every_n)\n# of features: 5 \nniter: 358\nnfeatures : 5 \nxNames : Month `S1-12` `C1-12` `S2-12` `C2-12` \nproblemType : Regression \ntuneValue :\n      nrounds max_depth       eta    gamma colsample_bytree min_child_weight subsample\n2     358         3 0.4876292 5.465586        0.5499986                5 0.8219133\nobsLevels : NA \nparam :\n    list()\n\nXGB.Caret$finalModel$tuneValue\n\n  nrounds max_depth       eta    gamma colsample_bytree min_child_weight subsample\n2     358         3 0.4876292 5.465586        0.5499986                5 0.8219133\n\n\n\n\n15.2.6.3 Stacking\n\nStacking은 앙상블 기법 중 하나로, 비슷한 성능을 가진 모형들을 결합함으로써, 예측 성능을 항상 시키기 위해 적용될 수 있다.\nStacking은 두 종류의 모형들이 필요하다.\n\nIndividual Model : 원본 Training Data을 이용하여 학습할 모형\n\nIndividual Model은 여러개의 서로 다른 머신 러닝 알고리즘로 구성\n\nFinal Model : Individual Model들의 예측 결과를 결합한 Data를 Training Data로 사용하여 학습할 모형\n\nStacking의 적용 알고리즘은 다음과 같다.\n\n원본 Training Data에 서로 다른 머신 러닝 알고리즘을 이용하여 예측 결과를 생성한다.\n생성된 예측 결과를 결합하여 Final Model에 대한 Training Data를 생성한다.\n위에서 생성된 Training Data를 이용하여 Final Model을 학습시킨다.\n원본 Training Data를 기반으로 학습한 모형에 원본 Test Data를 이용하여 예측 결과를 생성한다.\n생성된 예측 결과를 결합하여 Final Model에 대한 Test Data를 생성한다.\n위에서 생성된 Test Data를 이용하여 Final Model의 예측 결과와 원본 Test Data의 Target과 비교한다.\n\n자세한 코드는 여기를 참조한다.\n\n앞써, 원본 Training Data에 적합시킨 Random Forest와 XGBoost의 Hyperparameter 결과를 기반으로 생성된 예측 결과들을 결합하여 스태킹하였다.\n\ncaretEnsemble package의 caretList()를 이용하여, Individual Model을 선언하고, caretStack()으로 Final Model을 선언한다.\n\n\n# Ref. https://cran.r-project.org/web/packages/caretEnsemble/vignettes/caretEnsemble-intro.html\n#      https://github.com/zachmayer/caretEnsemble/blob/master/R/caretStack.R\n\n\n# 1. Modeling for Stacking (Declare Individual Model)\nset.seed(100)\nfitControl &lt;- trainControl(method = \"repeatedcv\",        # adaptive_cv\n                           number = 5,\n                           repeats = 5,\n                           # adaptive = list(min = 5,\n                           #                 alpha = 0.05,\n                           #                 method = \"BT\",\n                           #                 complete = TRUE),\n                           # search = \"random\",            # grid\n                           savePredictions = \"final\",      # 최적 모수에 대한 예측 저장\n                           # classProbs = TRUE,            # 각 클래스에 대한 확률 저장(Classification)\n                           index = createResample(Train.Data$y, 1),  # index : 각 resapling에 대한 요소, Training에 사용되는 행 번호/ createResample : 붓스트랩\n                           allowParallel = TRUE) \n\n\n# 원본 Training Data에 학습시킨 Hyperparameter 결과\nalg_tune_list &lt;- list(                            # Do not use custom names in list. Will give prediction error with greedy ensemble. Bug in caret.\n  parRF = caretModelSpec(method=\"parRF\",\n                         importance = TRUE,\n                         nodeside = 5,\n                         tuneGrid = expand.grid(mtry=RF.Caret$finalModel$tuneValue$mtry)),\n  xgbTree = caretModelSpec(method=\"xgbTree\",\n                           tuneGrid = expand.grid(nrounds = XGB.Caret$finalModel$tuneValue$nrounds,\n                                                  max_depth = XGB.Caret$finalModel$tuneValue$max_depth,\n                                                  eta = XGB.Caret$finalModel$tuneValue$eta,\n                                                  gamma = XGB.Caret$finalModel$tuneValue$gamma,\n                                                  colsample_bytree = XGB.Caret$finalModel$tuneValue$colsample_bytree,\n                                                  min_child_weight = XGB.Caret$finalModel$tuneValue$min_child_weight,\n                                                  subsample = XGB.Caret$finalModel$tuneValue$subsample)))\n\nset.seed(100)\nmulti_mod &lt;- caretList(y~., data = Train.Data, trControl = fitControl, \n                       tuneList = alg_tune_list)  # search = \"grid\"     \n\n\nmulti_mod$parRF\n\nParallel Random Forest \n\n122 samples\n  5 predictor\n\nNo pre-processing\nResampling: Cross-Validated (5 fold, repeated 5 times) \nSummary of sample sizes: 122 \nResampling results:\n\n  RMSE      Rsquared  MAE     \n  56.16162  0.834962  43.05662\n\nTuning parameter 'mtry' was held constant at a value of 3\n\nmulti_mod$xgbTree\n\neXtreme Gradient Boosting \n\n122 samples\n  5 predictor\n\nNo pre-processing\nResampling: Cross-Validated (5 fold, repeated 5 times) \nSummary of sample sizes: 122 \nResampling results:\n\n  RMSE      Rsquared   MAE     \n  57.12452  0.8319228  42.75148\n\nTuning parameter 'nrounds' was held constant at a value of 358\nTuning parameter 'max_depth' was held constant at a value of 3\nTuning parameter 'eta' was held constant at a value of 0.4876292\n\nTuning parameter 'gamma' was held constant at a value of 5.465586\nTuning parameter 'colsample_bytree' was held constant at a value of 0.5499986\nTuning parameter 'min_child_weight' was held\n constant at a value of 5\nTuning parameter 'subsample' was held constant at a value of 0.8219133\n\n\n\n# 2. Stacking (개별 모형들의 예측값을 결합한 Data를 Training data로 쓰는 Final Model)\n\nset.seed(100)\nstackControl &lt;- trainControl(method = \"adaptive_cv\",\n                             number = 5,\n                             repeats = 5,\n                             adaptive = list(min = 5,\n                                             alpha = 0.05,\n                                             method = \"BT\",\n                                             complete = TRUE),\n                             search = \"random\",\n                             allowParallel = TRUE) \n\nset.seed(100)\nstack.xgb &lt;- caretStack(multi_mod, method = \"xgbTree\",  # Final Model\n                        trControl = stackControl, \n                        tuneLength = 2)                 # 모수 후보 갯수\n\n\nstack.xgb\n\nA xgbTree ensemble of 2 base models: parRF, xgbTree\n\nEnsemble results:\neXtreme Gradient Boosting \n\n38 samples\n 2 predictor\n\nNo pre-processing\nResampling: Adaptively Cross-Validated (5 fold, repeated 5 times) \nSummary of sample sizes: 30, 31, 31, 30, 30, 30, ... \nResampling results across tuning parameters:\n\n  eta        max_depth  gamma     colsample_bytree  min_child_weight  subsample  nrounds  RMSE      Rsquared   MAE       Resamples\n  0.2228220  9          1.702621  0.6528662         3                 0.7517663  624      52.61384  0.8761797  43.05825  25       \n  0.4876292  3          5.465586  0.5499986         5                 0.8219133  358      52.54666  0.8693930  43.80968   5       \n\nRMSE was used to select the optimal model using the smallest value.\nThe final values used for the model were nrounds = 624, max_depth = 9, eta = 0.222822, gamma = 1.702621, colsample_bytree = 0.6528662, min_child_weight = 3 and subsample = 0.7517663.\n\nstack.xgb$ens_model$finalModel\n\n##### xgb.Booster\nraw: 654 Kb \ncall:\n  xgboost::xgb.train(params = list(eta = param$eta, max_depth = param$max_depth, \n    gamma = param$gamma, colsample_bytree = param$colsample_bytree, \n    min_child_weight = param$min_child_weight, subsample = param$subsample), \n    data = x, nrounds = param$nrounds, objective = \"reg:squarederror\")\nparams (as set within xgb.train):\n  eta = \"0.222822001739405\", max_depth = \"9\", gamma = \"1.70262051047757\", colsample_bytree = \"0.652866207249463\", min_child_weight = \"3\", subsample = \"0.751766284287442\", objective = \"reg:squarederror\", validate_parameters = \"TRUE\"\nxgb.attributes:\n  niter\ncallbacks:\n  cb.print.evaluation(period = print_every_n)\n# of features: 2 \nniter: 624\nnfeatures : 2 \nxNames : parRF xgbTree \nproblemType : Regression \ntuneValue :\n      nrounds max_depth      eta    gamma colsample_bytree min_child_weight subsample\n1     624         9 0.222822 1.702621        0.6528662                3 0.7517663\nobsLevels : NA \nparam :\n    list()\n\nstack.xgb$ens_model$finalModel$tuneValue\n\n  nrounds max_depth      eta    gamma colsample_bytree min_child_weight subsample\n1     624         9 0.222822 1.702621        0.6528662                3 0.7517663\n\n\n\n\n15.2.6.4 Stacking with GLM\n\nStacking의 Final Model를 Generalized Linear Model(GLM)으로 하면, Individual Model들의 예측 결과들에 가중치를 곱하여 더한 것과 같다.\ncaretEnsemble package의 caretEnsemble()를 이용하면 Final Model이 GLM이며, 여기의 R code를 확인하면 된다.\n최종 예측 결과 \\(\\hat{Y}\\)는 다음과 같다.\n\n\\[\n\\begin{aligned}\n           \\hat{Y} = \\beta_{0} + \\sum^{m}_{i=1}  \\hat{y}_{i}\n\\end{aligned}\n\\]\n\n\\(m\\) : Individual Model 개수\n\\(\\hat{y}_{i}\\) : \\(i\\)번째 Individual Model의 예측 결과\n\n\nset.seed(100)\ngreedyEnsemble &lt;- caretEnsemble(multi_mod, trControl = trainControl(method = \"cv\", number=5))\ngreedyEnsemble\n\nA glm ensemble of 2 base models: parRF, xgbTree\n\nEnsemble results:\nGeneralized Linear Model \n\n38 samples\n 2 predictor\n\nNo pre-processing\nResampling: Cross-Validated (5 fold) \nSummary of sample sizes: 30, 31, 31, 30, 30 \nResampling results:\n\n  RMSE      Rsquared   MAE     \n  57.85064  0.8220711  43.60171\n\ngreedyEnsemble$ens_model$finalModel\n\n\nCall:  NULL\n\nCoefficients:\n(Intercept)        parRF      xgbTree  \n    -8.9459       0.6312       0.3265  \n\nDegrees of Freedom: 37 Total (i.e. Null);  35 Residual\nNull Deviance:      704600 \nResidual Deviance: 115500   AIC: 420.6\n\nsummary(greedyEnsemble)\n\nThe following models were ensembled: parRF, xgbTree \nThey were weighted: \n-8.9459 0.6312 0.3265\nThe resulting RMSE is: 57.8506\nThe fit for each individual model on the RMSE is: \n  method     RMSE RMSESD\n   parRF 56.16162     NA\n xgbTree 57.12452     NA\n\n\n\n15.2.6.4.1 변수 중요도\n\nVI &lt;- varImp(greedyEnsemble) \nvarImp(greedyEnsemble)\n\n            overall     parRF    xgbTree\n`C2-12`  0.04640824  0.000000  0.1361284\n`S1-12`  3.58731235  1.685183  7.2646621\n`S2-12` 24.20118115 36.719376  0.0000000\n`C1-12` 29.38080906 34.725737 19.0475635\nMonth   42.78428920 26.869704 73.5516460\n\nVI$x &lt;- as.character(row.names(VI))\nVI2 &lt;- reshape2::melt(VI, id.vars=\"x\",\n                      variable.name=\"Type\",\n                      value.name='VI')\n\nggplot(VI2, aes(x=reorder(x, VI), y=VI)) + \n  geom_bar(stat=\"identity\", position=position_dodge(), show.legend = F) + \n  facet_wrap(.~ Type, nrow=1) +\n  xlab(\"\") +      \n  ylab(\"\") +\n  coord_flip() +\n  theme_bw() +\n  theme(axis.text.x = element_text(size = 13),  # angle = 45, vjust = 1, hjust = 1\n        axis.text.y = element_text(size = 13),\n        axis.title = element_blank(),\n        plot.title = element_blank(),\n        legend.title = element_blank(),\n        strip.text.x = element_text(size=15, color=\"black\"))\n\n\n\n\n\n\n\n\n\n\n\n\n15.2.7 예측\n\n최종 예측은 추세의 예측값과 머신 러닝 기법에 의한 예측값을 더하여 생성된다.\n\n추세는 시계열 모형 (예: ARIMA)을 이용하여 예측\n\n\n\n15.2.7.1 추세 예측\n\n여기에서는 ARIMA 모형을 이용하여 추세를 예측하였다.\n\n\n# Trend \ntrend.part        &lt;- data.frame(decomp.ts)$trend %&gt;% # Only Trend of Training Data\n  ts()\n\n# Fitting ARIMA for Trend \ntrend.fit.arima   &lt;- auto.arima(trend.part)\n\n# Forecast \ntrend.arima.pred  &lt;- forecast(trend.fit.arima, nTest)\ntrend.arima.pred$mean \n\nTime Series:\nStart = 123 \nEnd = 159 \nFrequency = 1 \n [1] 1966.465 1970.881 1975.297 1979.538 1983.778 1987.971 1992.164 1996.344 2000.524 2004.701 2008.877 2013.053 2017.228 2021.403 2025.578 2029.753 2033.928 2038.104 2042.279 2046.454 2050.629\n[22] 2054.804 2058.979 2063.154 2067.329 2071.504 2075.679 2079.854 2084.029 2088.204 2092.379 2096.554 2100.729 2104.904 2109.079 2113.255 2117.430\n\n\n\n\n15.2.7.2 최종 예측\n\n# 최종 예측(Seasonal + Remainder + Trend)\nPred.RF        &lt;- predict(RF.Caret, Test.X) + trend.arima.pred$mean   \nPred.XGB       &lt;- predict(XGB.Caret, Test.X) + trend.arima.pred$mean\nstack.Pred.XGB &lt;- predict(stack.xgb, Test.X) + trend.arima.pred$mean\nstack.Pred.GLM &lt;- predict(greedyEnsemble, Test.X) + trend.arima.pred$mean\n\n\n# Accuracy\nacc_RF        &lt;- accuracy(c(Pred.RF), test.ts)\nacc_XGB       &lt;- accuracy(c(Pred.XGB), test.ts)\nacc_stack.XGB &lt;- accuracy(c(stack.Pred.XGB), test.ts)\nacc_stack.GLM &lt;- accuracy(c(stack.Pred.GLM), test.ts)\n\nacc_RF\n\n                ME     RMSE      MAE       MPE    MAPE      ACF1 Theil's U\nTest set -42.32877 74.74778 51.49535 -2.204272 2.65509 0.5875656 0.4437575\n\nacc_XGB\n\n               ME     RMSE      MAE       MPE     MAPE      ACF1 Theil's U\nTest set -44.1703 75.31189 53.66022 -2.324207 2.784019 0.5157991 0.4438984\n\nacc_stack.XGB\n\n                ME     RMSE      MAE       MPE     MAPE      ACF1 Theil's U\nTest set -50.11774 89.17262 65.40117 -2.630807 3.360414 0.3994761 0.5275868\n\nacc_stack.GLM\n\n               ME     RMSE      MAE       MPE     MAPE      ACF1 Theil's U\nTest set -36.0741 72.51314 50.15821 -1.913242 2.594745 0.5638888 0.4281346",
    "crumbs": [
      "ML & DL",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Machine Learning</span>"
    ]
  },
  {
    "objectID": "DL.html",
    "href": "DL.html",
    "title": "16  Deep Learning",
    "section": "",
    "text": "16.1 Data Loading\npacman::p_load(\"doParallel\", \"parallel\",\n               \"data.table\", \"readr\",\n               \"skimr\", \"summarytools\", \"DT\",\n               \"dplyr\", \"magrittr\",\n               \"ggplot2\",\n               \"caret\", \"recipes\",\n               \"keras\",                                                  # keras's Ver. 2.9.0\n               \"tfdatasets\")                                             # For as_array_iterator   \n\nregisterDoParallel(cores=detectCores())\n\ntensorflow::as_tensor(1)                                                 # systemMemory and maxCacheSize\n\ntf.Tensor(1.0, shape=(), dtype=float64)\n# Loading as Tibble Type\nAmtrak.data &lt;- readr::read_csv(\".../Amtrak.csv\")                 \n\nAmtrak.data %&gt;%\n  as_tibble\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n코드 설명 함수 readr::read_csv()는 CSV 파일을 tibble 형태로 읽어온다. 이는 데이터 가독성과 처리 속도를 높이며, Package \"tidyverse\"와의 호환성을 향상시킨다.",
    "crumbs": [
      "ML & DL",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Deep Learning</span>"
    ]
  },
  {
    "objectID": "DL.html#feature-extraction",
    "href": "DL.html#feature-extraction",
    "title": "16  Deep Learning",
    "section": "16.2 Feature Extraction",
    "text": "16.2 Feature Extraction\n\n# 1. Generate New Variables\nAmtrak.data &lt;- Amtrak.data %&gt;%\n  mutate(Date.Time = as.Date(Month, format = \"%d/%m/%Y\"),       # 날짜를 나타내는 변수 \n         Month = factor(lubridate::month(Date.Time)))           # 월(Month)을 나타내는 변수\n\nAmtrak.data\n\n# A tibble: 159 × 3\n   Month Ridership Date.Time \n   &lt;fct&gt;     &lt;dbl&gt; &lt;date&gt;    \n 1 1         1709. 1991-01-01\n 2 2         1621. 1991-02-01\n 3 3         1973. 1991-03-01\n 4 4         1812. 1991-04-01\n 5 5         1975. 1991-05-01\n 6 6         1862. 1991-06-01\n 7 7         1940. 1991-07-01\n 8 8         2013. 1991-08-01\n 9 9         1596. 1991-09-01\n10 10        1725. 1991-10-01\n# ℹ 149 more rows\n\n# 2. Convert Factor to One-hot Encoding\ndata_recipe  &lt;- recipe(Ridership ~ ., data = Amtrak.data) %&gt;%   # Define Formula / Ridership: Target\n  step_dummy(Month, one_hot = TRUE) %&gt;%                         # One-hot Encoding\n  prep(training = Amtrak.data, retain = TRUE)                  \n\nAmtrak.data1 &lt;- juice(data_recipe)                               \n\nAmtrak.data1\n\n# A tibble: 159 × 14\n   Date.Time  Ridership Month_X1 Month_X2 Month_X3 Month_X4 Month_X5 Month_X6 Month_X7 Month_X8 Month_X9 Month_X10 Month_X11 Month_X12\n   &lt;date&gt;         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 1991-01-01     1709.        1        0        0        0        0        0        0        0        0         0         0         0\n 2 1991-02-01     1621.        0        1        0        0        0        0        0        0        0         0         0         0\n 3 1991-03-01     1973.        0        0        1        0        0        0        0        0        0         0         0         0\n 4 1991-04-01     1812.        0        0        0        1        0        0        0        0        0         0         0         0\n 5 1991-05-01     1975.        0        0        0        0        1        0        0        0        0         0         0         0\n 6 1991-06-01     1862.        0        0        0        0        0        1        0        0        0         0         0         0\n 7 1991-07-01     1940.        0        0        0        0        0        0        1        0        0         0         0         0\n 8 1991-08-01     2013.        0        0        0        0        0        0        0        1        0         0         0         0\n 9 1991-09-01     1596.        0        0        0        0        0        0        0        0        1         0         0         0\n10 1991-10-01     1725.        0        0        0        0        0        0        0        0        0         1         0         0\n# ℹ 149 more rows\n\n\n코드 설명\n\nDate.Time = as.Date(Month, format = \"%d/%m/%Y\")\n\n변수 Month를 날짜 형식(Date)으로 변환한다.\n옵션 format을 이용하여 날짜 형식을 지정한다.\n\n\"%d/%m/%Y\"는 “일/월/연도” 형식을 의미한다.\n\n\nMonth = factor(lubridate::month(Date.Time))\n\n함수 lubridate::month()를 이용하여 변수 Date.Time에서 월(Month)을 추출한다.\n추출한 월을 범주형(Factor) 데이터로 변환한다.\n\nstep_dummy(Month, one_hot = TRUE)\n\n범주형 변수 Month를 원-핫 인코딩(One-hot Encoding) 변환을 이용하여 수치형 변수로 변환한다.\n각 범주에 대해 하나의 열을 생성하며, 관측치가 해당 범주에 속하면 1, 그렇지 않으면 0을 할당한다.\n\nprep()\n\n정의한 레시피를 실행하여 전처리를 수행한다.\ntraining = Amtrak.data: 학습 데이터로 전처리를 수행한다.\nretain = TRUE: 변환된 데이터 객체를 메모리에 유지한다.\n\njuice()\n\nprep() 결과로 변환된 데이터를 반환한다.\n전처리된 데이터를 최종적으로 얻기 위해 사용한다.",
    "crumbs": [
      "ML & DL",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Deep Learning</span>"
    ]
  },
  {
    "objectID": "DL.html#data-partition",
    "href": "DL.html#data-partition",
    "title": "16  Deep Learning",
    "section": "16.3 Data Partition",
    "text": "16.3 Data Partition\n\nnum_train_samples &lt;- round(nrow(Amtrak.data1) * 0.55)                            \nnum_val_samples   &lt;- round(nrow(Amtrak.data1) * 0.25)                           \nnum_test_samples  &lt;- nrow(Amtrak.data1) - num_train_samples - num_val_samples   \n\ntrain_df &lt;- Amtrak.data1[seq(num_train_samples), ]              # First 55% of Rows, 1:87 \nval_df   &lt;- Amtrak.data1[seq(from = nrow(train_df) + 1,         # Next 25% of Rows, 88:127\n                             length.out = num_val_samples), ]           \ntest_df  &lt;- Amtrak.data1[seq(to = nrow(Amtrak.data1),           # Last 20% of Rows, 128:159\n                             length.out = num_test_samples), ]\n\n\n# Training Dataset (TrD)\nDT::datatable(train_df)   \n\n\n\n\n\n\n# Validation Dataset (VaD)\nDT::datatable(val_df)  \n\n\n\n\n\n\n# Test Dataset (TeD)\nDT::datatable(test_df)",
    "crumbs": [
      "ML & DL",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Deep Learning</span>"
    ]
  },
  {
    "objectID": "DL.html#sec-preprocess",
    "href": "DL.html#sec-preprocess",
    "title": "16  Deep Learning",
    "section": "16.4 Preprocess",
    "text": "16.4 Preprocess\n\n16.4.1 Standardization\n\n# 1. Standardization for Numeric Feature\n## Name of Feature \ninput_data_colnames &lt;- names(Amtrak.data1) %&gt;%           \n  setdiff(c(\"Date.Time\", \"Ridership\"))                          # 사용하지 않는 변수 \"Date.Time\"와 Target Ridership 제거            \n\ninput_data_colnames\n\n [1] \"Month_X1\"  \"Month_X2\"  \"Month_X3\"  \"Month_X4\"  \"Month_X5\"  \"Month_X6\"  \"Month_X7\"  \"Month_X8\"  \"Month_X9\"  \"Month_X10\" \"Month_X11\" \"Month_X12\"\n\n\nCaution! 표준화는 수치형 Feature에 적용하며, 해당 데이터셋에서는 Feature로 고려하는 모든 변수(Month_X1, Month_X2, Month_X3, Month_X4, Month_X5, Month_X6, Month_X7, Month_X8, Month_X9, Month_X10, Month_X11, Month_X12)가 수치형이다.\n\n## Standardization\ndata_recipe  &lt;- recipe(Ridership ~ ., data = train_df) %&gt;%      # Define Formula / Ridership: Target\n  step_normalize(all_of(input_data_colnames)) %&gt;%               # Standardization for All Feature\n  prep(training = train_df, retain = TRUE)                      # Calculation for Standardization\n\nstandard_train_df &lt;- juice(data_recipe)                         # Standardized TrD\nstandard_val_df   &lt;- bake(data_recipe, val_df)                  # Standardized VaD\nstandard_test_df  &lt;- bake(data_recipe, test_df)                 # Standardized TeD\n\nCaution! Training Dataset의 수치형 Feature에 대한 평균과 표준편차를 이용하여 Training Dataset, Validation Dataset, 그리고 Test Dataset에 표준화를 수행한다.\n코드 설명\n\nstep_normalize(all_of(input_data_colnames))\n\nTarget Ridership을 제외한 모든 수치형 Feature에 대해 표준화를 수행한다.\n\n표준화란 데이터를 평균 = 0, 표준편차 = 1에 맞도록 변환하는 과정이다.\n\n\n\n\n# Standardized TrD\nDT::datatable(standard_train_df)                            \n\n\n\n\n\n\n# Standardized TrD\nDT::datatable(standard_val_df)                            \n\n\n\n\n\n\n# Standardized TrD\nDT::datatable(standard_test_df)                            \n\n\n\n\n\n\n\n16.4.2 (Input, Target) Dataset 생성\n\n머신러닝 기법과 달리 딥러닝 기법을 시계열 데이터에 적용하기 위해서는 주어진 데이터셋을 작게 쪼개어 (Input, Target) Dataset을 여러 개 생성하여야 한다.\n\n\n\n\n\n주어진 Dataset을 (Input, Target) Dataset으로 작게 분할하기 위해 다음과 같은 문제를 생각해야 한다.\n\n관측한 시계열 데이터의 시간 단위(Unit of Time)\n예측하고자 하는 시계열 데이터의 시간 단위\n얼마만큼의 과거 데이터를 바탕으로 미래의 시계열 데이터 값을 예측하고자 하는가?\n\n즉, 예측을 위해 사용하고자 하는 과거 데이터의 관측 기간\n\n\n위의 3가지 문제를 바탕으로 Dataset을 분할하는 옵션을 설정한다.\n\nSampling Rate (SR): 예측하고자 하는 시계열 데이터의 시간 단위당 관측한 Data Point 개수(간격)\n\n예를 들어, 전력량이 2시간마다 관측되었을 때, 3일 후의 전력량을 예측한다면 SR은 “12”이다.\n\n예측하고자 하는 시계열 데이터는 3일 후의 전력량으로, 시간 단위가 “일(Day)”이며 전력량은 하루 당(Per Day) 12개의 Data Point가 관측된다.\n\n\nSequence Length (SL): Input의 Data Point 개수(미래의 시계열 데이터 값을 예측하기 위해 고려하는 과거 데이터 길이)\n\n예를 들어, 지난 5일 동안 관측된 기온을 기반으로 5시간 후의 기온을 예측하고자 한다. 이때 10분마다 기온을 관측하였다고 가정한다.\n\n지난 5일 동안 관측한 Data Point 개수는 1×6×24시간×5일 = 720개이다.\nCaution! 딥러닝에서는 예측하고자 하는 시계열 데이터의 시간 단위당 오로지 1개의 Data Point만을 고려하여 (Input, Target) Dataset을 생성한다.\n5시간 후의 기온을 예측하므로 예측하고자 하는 시계열 데이터의 시간 단위는 시(Hour)이다.\n\n시당(Per Hour) 오로지 1개의 Data Point만을 고려하므로 SL은 720(=1개×6개×24시간×5일)이 아니라 120(=1개×24시간×5일)이 된다.\n\n\n\n\n\n\\(k\\) : 예측 시점\n\n예를 들어, 4일 후 시계열 데이터 값을 예측한다면 \\(k\\)는 4가 된다.\n\nDelay : Target의 Index를 계산할 때 사용\n\nDelay = SR \\(\\times\\) (SL \\(+k-\\) 1)\n\n\n현재 예제로 사용하는 Amtrak Dataset은 1달 단위로 관측하였으며, 지난 1년 간의 데이터를 이용하여 1달 후의 승객 수(Ridership)을 예측하고자 한다.\n\n관측한 시계열 데이터의 시간 단위 : 1달마다 관측 → “월(Month)”\n예측하고자 하는 시계열 데이터의 시간 단위 : 1달 후의 승객 수를 예측 → “월(Month)”\n예측을 위해 사용하고자 하는 과거 데이터의 관측 기간 : 1년\n\nSR = 1 ← 예측하고자 하는 시계열 데이터의 시간 단위(월)당 관측한 Data Point 개수\nSL = 12 ← 지난 1년 동안 관측된 승객 수를 기반으로 예측하므로 12(=1개 \\(\\times\\) 12달)\n\\(k\\) = 1 ← 1달 후의 승객 수를 예측하므로 1\nDelay = 1 \\(\\times\\) (12 \\(+\\) 1 \\(-\\) 1) = 12\n\n\n\n\n\n\n\n\n\nFigure 16.1: Without Feature\n\n\n\n\n\n\n\n\n\nFigure 16.2: With Feature\n\n\n\nCaution! Package \"keras\"에서 제공하는 함수 timeseries_dataset_from_array()를 이용하면 쉽게 (Input, Target) Dataset을 생성할 수 있으며, 결과는 TF Dataset 객체로 반환한다.\n\n## Define Option\nsampling_rate &lt;- 1          \nsequence_length &lt;- 12      \nk &lt;- 1\ndelay &lt;- sampling_rate * (sequence_length + k - 1)    \nbatch_size &lt;- 16\n\n\n## Define Input and Target Partition Function\ndf_to_inputs_and_targets &lt;- function(df) {\n  \n  inputs &lt;- df[input_data_colnames] %&gt;%                                  # inputs : Standardized Features\n    as.matrix()\n  \n  targets &lt;- as.array(df$Ridership)                                      # (Not Standardized) Target\n  \n  list(\n    head(inputs, -delay),                                                # Drop Last Delay(= 12) Samples\n    tail(targets, -delay)                                                # Drop First Delay(= 12) Samples\n  )\n}\n\n코드 설명 함수 df_to_inputs_and_targets()는 함수 timeseries_dataset_from_array()를 이용하여 (Input, Target) Dataset으로 분할하기 전에 Input과 Target을 구분하는 역할을 한다.\n\ninputs &lt;- df[input_data_colnames]\n\n데이터 프레임 df에서 Input(Feature)으로 사용할 열만 선택한다.\ninput_data_colnames는 이전에 정의한 열 이름의 벡터(In Section 16.4)이다.\n\ntargets &lt;- as.array(df$Ridership)\n\n타겟 변수(종속 변수) Ridership을 선택한다.\n이때 타겟 변수는 표준화되지 않은 원본 데이터이다.\n함수 as.array()를 이용하여 Target을 배열로 변환한다.\n\nhead(inputs, -delay)\n\nInput(inputs)의 마지막에서 delay만큼의 샘플을 제거한다.\n필요한 이유: Input에서 Target과 겹칠 가능성이 있는 뒤쪽 데이터를 제거하여 모형 학습에 필요한 과거 시점의 데이터만 포함하도록 한다.\n\n시계열 예측 문제에서는 Input이 항상 예측해야 하는 Target보다 시간적으로 앞서야 한다.\n만약 Input이 전체 시퀀스를 포함하면, 예측 대상인 Target과 겹칠 가능성이 생긴다.\nhead(inputs, -delay)를 이용하면 마지막 delay 만큼의 데이터를 제외해 입력 시퀀스의 끝이 Target보다 항상 과거 시점을 포함되도록 한다.\n\n\ntail(targets, -delay)\n\nTarget(targets)의 첫 delay만큼의 샘플을 제거한다.\nFigure 16.1 와 Figure 16.2 를 보면 알 수 있듯이 첫 번째 (Input, Target) Dataset의 Target 인덱스는 “1+Delay”이다.\n따라서 tail(targets, -delay)를 이용하여 첫 delay만큼의 샘플을 제거한다.\n\n\n\n## Define Generating (Input, Target) Dataset\nmake_dataset &lt;- function(df) {\n  c(inputs, targets) %&lt;-% df_to_inputs_and_targets(df)                   # c(inputs, targets) = c(Standardized Features, Not Standardized Target)\n  \n  # Generating (Input, Target) Dataset\n  timeseries_dataset_from_array(                                         # Returns TF Dataset Object\n    inputs, targets,\n    sampling_rate = sampling_rate,\n    sequence_length = sequence_length,\n    shuffle = FALSE,\n    batch_size = batch_size\n  )\n}\n\n코드 설명 함수 make_dataset()는 데이터 프레임 df을 기반으로 Input과 Target을 구분하고, 이를 딥러닝 기법 적용에 적합한 텐서플로우(TensorFlow) 데이터셋 객체로 변환하는 작업을 수행한다.\n\nc(inputs, targets) %&lt;-% df_to_inputs_and_targets(df)\n\n위에서 정의한 함수 df_to_inputs_and_targets()를 호출하여 데이터 프레임을 Input과 Target으로 분리한다.\ninputs: 모형 학습에 사용할 Input\ntargets: 모형이 예측해야 하는 값\n\n함수 timeseries_dataset_from_array()\n\n분리한 Input과 Target를 기반으로 여러 개의 (Input, Target) Dataset을 생성하여 모형 학습에 사용할 수 있도록 준비한다.\n\n\nResult 첫 번째 배치에 해당하는 행 번호는 다음과 같다.\n\n\n\n\n# Generate (Input, Target) Dataset for Each Dataset\ntrain_dataset &lt;- make_dataset(standard_train_df)\nval_dataset   &lt;- make_dataset(standard_val_df)\ntest_dataset  &lt;- make_dataset(standard_test_df)\n\n\n# Input and Target for TrD\nc(samples, targets) %&lt;-% iter_next(as_iterator(train_dataset))           # iter_next in keras (reticulate)\ncat(\"samples shape: \", format(samples$shape), \"\\n\",                      # samples$shape : (batch_size, sequence_length, #feature)\n    \"targets shape: \", format(targets$shape), \"\\n\", sep = \"\")\n\nsamples shape: (16, 12, 12)\ntargets shape: (16)\n\n# Input and Target for TeD\nc(test_samples, test_targets) %&lt;-% iter_next(as_iterator(test_dataset))   \ntest_targets &lt;- as.numeric(test_targets)",
    "crumbs": [
      "ML & DL",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Deep Learning</span>"
    ]
  },
  {
    "objectID": "DL.html#analysis",
    "href": "DL.html#analysis",
    "title": "16  Deep Learning",
    "section": "16.5 Analysis",
    "text": "16.5 Analysis\n\n# #Feature\nncol_input_data &lt;- length(input_data_colnames)\n\n# CallBack\ncallbacks_list &lt;- list(\n  callback_early_stopping(\n    monitor = \"val_loss\",                                                # Metric (Monitor for Validation) \n    patience = 50                                                        # 50번의 epochs 후에도 loss가 향상되지 않으면 stop!\n  ),\n  callback_model_checkpoint(\n    filepath = \"Amtrack.keras\",                                          \n    monitor = \"val_loss\",                                                # 저장 Metric (Monitor for Validation)\n    save_best_only = TRUE                                                # 가장 좋은 결과를 저장\n  ),\n  callback_reduce_lr_on_plateau(        \n    monitor = \"val_loss\",\n    factor = 0.1,                                                        # 학습률 감소하는 요인: New Learning Rate (LR) = LR * factor\n    patience = 10                                                        # monitor = \"val_loss\"가 10번의 epochs 동안 향상되지 않으면 콜백 실행\n  )\n)\n\n\n16.5.1 Model Definition\n\n16.5.1.1 Deep Neural Network (DNN)\n\nset.seed(100)\n\ninputs &lt;- layer_input(shape = c(sequence_length, ncol_input_data))       \noutputs &lt;- inputs %&gt;%\n  layer_flatten() %&gt;%                                                    # Convert to 1D vector\n  layer_dense(units = 16, activation = \"relu\") %&gt;%\n  layer_dense(units = 1)                                                 # Default: Linear Activation\n\nmodel &lt;- keras_model(inputs, outputs)\n\nsummary(model)\n\nModel: \"model\"\n________________________________________________________________________________________________________________________________________________________________________________________________________\n Layer (type)                                                                             Output Shape                                                                    Param #                       \n========================================================================================================================================================================================================\n input_1 (InputLayer)                                                                     [(None, 12, 12)]                                                                0                             \n flatten (Flatten)                                                                        (None, 144)                                                                     0                             \n dense_1 (Dense)                                                                          (None, 16)                                                                      2320                          \n dense (Dense)                                                                            (None, 1)                                                                       17                            \n========================================================================================================================================================================================================\nTotal params: 2337 (9.13 KB)\nTrainable params: 2337 (9.13 KB)\nNon-trainable params: 0 (0.00 Byte)\n________________________________________________________________________________________________________________________________________________________________________________________________________\n\n\n코드 설명\n\nlayer_input(shape = c(sequence_length, ncol_input_data)): Input 정의\n\nshape: Input의 크기를 정의한다.\n\nsequence_length: 한 번의 입력에서 사용하는 시간 스텝의 수로 Amtrack Dataset에서는 12이다.\nncol_input_data: 각 시점의 Feature 개수이다.\n예를 들어, 입력 데이터가 (10, 3)의 형태라면, 10개의 시간 단계와 3개의 Feature를 포함한다.\nCaution! layer_input(shape = c(sequence_length, 1))은 Feature가 없을 때, 그리고 Feature가 1개 있을 때 두 경우에 모두 사용된다.\n\n\nlayer_flatten(): 1차원 벡터로 변환\n\n예를 들어, (sequence_length, ncol_input_data) 크기의 Input은 sequence_length * ncol_input_data 크기의 1차원 벡터로 변환된다.\n\nlayer_dense(units = 16, activation = \"relu\"): Dense 계층\n\n은닉층으로 16개의 뉴런을 포함한다.\n활성화 함수로 ReLU(Rectified Linear Unit)를 사용한다.\n\nlayer_dense(units = 1)\n\n회귀 문제(연속형 값 예측)를 해결하기 위해 units = 1로 설정한다.\n활성화 함수가 지정되지 않았으므로 선형 활성화 함수(Linear Activation)를 사용한다.\n\nmodel &lt;- keras_model(inputs, outputs): 입력과 출력을 연결하여 딥러닝 모형 정의\n\n\n\n16.5.1.2 Convolutional Neural Network 1D (CNN 1D)\n\nset.seed(100)\n\ninputs &lt;- layer_input(shape = c(sequence_length, ncol_input_data))       \noutputs &lt;- inputs %&gt;%\n  layer_conv_1d(filters = 8, kernel_size = 6, activation = \"relu\") %&gt;%  # kernel_size=Window Length, 6개월 단위의 변화나 트렌드에 초점\n  layer_max_pooling_1d(pool_size = 2) %&gt;%                               # Down-Sampling = Reduce Size\n  layer_conv_1d(filters = 8, kernel_size = 3, activation = \"relu\") %&gt;%  # Due to layer_max_pooling_1d(), kernel_size = 3\n  layer_global_average_pooling_1d() %&gt;%                                 # Average for Each Convolution Feature Map\n  layer_dense(units = 1)                                                # Default: Linear Activation\n\nmodel &lt;- keras_model(inputs, outputs)\n\nsummary(model)\n\nModel: \"model_1\"\n________________________________________________________________________________________________________________________________________________________________________________________________________\n Layer (type)                                                                             Output Shape                                                                    Param #                       \n========================================================================================================================================================================================================\n input_2 (InputLayer)                                                                     [(None, 12, 12)]                                                                0                             \n conv1d_1 (Conv1D)                                                                        (None, 7, 8)                                                                    584                           \n max_pooling1d (MaxPooling1D)                                                             (None, 3, 8)                                                                    0                             \n conv1d (Conv1D)                                                                          (None, 1, 8)                                                                    200                           \n global_average_pooling1d (GlobalAveragePooling1D)                                        (None, 8)                                                                       0                             \n dense_2 (Dense)                                                                          (None, 1)                                                                       9                             \n========================================================================================================================================================================================================\nTotal params: 793 (3.10 KB)\nTrainable params: 793 (3.10 KB)\nNon-trainable params: 0 (0.00 Byte)\n________________________________________________________________________________________________________________________________________________________________________________________________________\n\n\n코드 설명\n\nlayer_conv_1d(filters = 8, kernel_size = 6, activation = \"relu\"): 1D 콘벌루션 계층\n\nfilters: 콘벌루션 필터 개수를 입력한다.\nkernel_size: 모형이 학습할 데이터 패턴의 시간적 범위(시계열 윈도우 크기)를 결정한다(커널 크기: \\(1\\times\\) kernel_size).\n\nAmtrack Dataset에서의 권장 설정:\n\n작은 패턴 탐지: kernel_size = 2 ~ kernel_size = 4\n\n2~4개월 단위의 국소적인(Local) 패턴을 학습하는 데 유용\n\n중간 패턴 탐지: kernel_size = 6\n\n반년 단위의 변화나 트렌드에 초점\n\n전체 시퀀스 탐지: kernel_size = 12\n\n전체 12개월 데이터를 한 번에 학습(권장되지는 않음, 과적합 위험)\n\n\nkernel_size은 sequence_length보다 큰 값을 입력할 수 없다.\n\n\nactivation: 활성화 함수를 입력한다.\n\nlayer_max_pooling_1d(pool_size = 2): 1D Max Pooling 계층 → 시계열 데이터의 차원을 축소\n\npool_size(= Max Pooling Window Length)를 “2”로 지정한다.\nstrides의 경우 옵션 pool_size에 입력한 값이 Default(여기서는 2)이다.\n두 옵션을 통해 해당 계층에서 입력 데이터의 차원을 절반으로 축소한다.\n함수 layer_max_pooling_1d() 다음에 입력한 함수 layer_conv_1d()의 옵션 kernel_size는 절반으로 축소한 “3”으로 지정한다.\n\nlayer_global_average_pooling_1d(): 이전 콘벌루션 계층의 결과를 1차원으로 변환\nlayer_dense(units = 1): Dense 계층\n\n회귀 문제(연속형 값 예측)를 해결하기 위해 units = 1로 설정한다.\n활성화 함수가 지정되지 않았으므로 선형 활성화 함수(Linear Activation)를 사용한다.\n\n\n\n\n16.5.1.3 Long Short-Term Memory (LSTM)\n\n# 1. Simple LSTM\nset.seed(100)\n\ninputs &lt;- layer_input(shape = c(sequence_length, ncol_input_data))      \noutputs &lt;- inputs %&gt;%\n  layer_lstm(units = 16) %&gt;%                                             # units : Dimension of Output Space (Hidden State) (Ref. https://jiwonkoh.tistory.com/188)\n  layer_dense(units = 1)                                                 # Default: Linear Activation\n\nmodel &lt;- keras_model(inputs, outputs)\n\nsummary(model)\n\nModel: \"model_2\"\n________________________________________________________________________________________________________________________________________________________________________________________________________\n Layer (type)                                                                             Output Shape                                                                    Param #                       \n========================================================================================================================================================================================================\n input_3 (InputLayer)                                                                     [(None, 12, 12)]                                                                0                             \n lstm (LSTM)                                                                              (None, 16)                                                                      1856                          \n dense_3 (Dense)                                                                          (None, 1)                                                                       17                            \n========================================================================================================================================================================================================\nTotal params: 1873 (7.32 KB)\nTrainable params: 1873 (7.32 KB)\nNon-trainable params: 0 (0.00 Byte)\n________________________________________________________________________________________________________________________________________________________________________________________________________\n\n\n코드 설명\n\nlayer_lstm(units = 16): LSTM 계층\n\nunits: LSTM 계층이 출력하는 벡터의 차원을 지정한다.\n\nunits = 16은 해당 LSTM 계층은 16차원의 벡터를 출력한다는 의미이다.\n이는 LSTM의 은닉 상태와 셀 상태의 크기를 정의하며, units의 값은 LSTM 계층이 각 타임스텝에서 출력하는 벡터의 차원이 된다.\n더 큰 units 값은 더 복잡한 패턴 학습이 가능하지만 계산 비용 증가한다.\n\n\nlayer_dense(units = 1): Dense 계층 → LSTM 계층의 출력(16차원 벡터)을 단일 값으로 변환\n\n회귀 문제(연속형 값 예측)를 해결하기 위해 units = 1로 설정한다.\n활성화 함수가 지정되지 않았으므로 선형 활성화 함수(Linear Activation)를 사용한다.\n\n\n\n# 2. Simple LSTM based on recurrent_dropout\nset.seed(100)\n\ninputs &lt;- layer_input(shape = c(sequence_length, ncol_input_data))      \noutputs &lt;- inputs %&gt;%\n  layer_lstm(units = 32, recurrent_dropout = 0.25) %&gt;%                   # recurrent_dropout : Dropout Rate of Recurrent Units\n  layer_dropout(0.5) %&gt;%                                                 # Dropout Layer after the LSTM for Regularizing Dense Layer\n  layer_dense(units = 1)                                                 # Default: Linear Activation\n\nmodel &lt;- keras_model(inputs, outputs)\n\nsummary(model)\n\nModel: \"model_3\"\n________________________________________________________________________________________________________________________________________________________________________________________________________\n Layer (type)                                                                             Output Shape                                                                    Param #                       \n========================================================================================================================================================================================================\n input_4 (InputLayer)                                                                     [(None, 12, 12)]                                                                0                             \n lstm_1 (LSTM)                                                                            (None, 32)                                                                      5760                          \n dropout (Dropout)                                                                        (None, 32)                                                                      0                             \n dense_4 (Dense)                                                                          (None, 1)                                                                       33                            \n========================================================================================================================================================================================================\nTotal params: 5793 (22.63 KB)\nTrainable params: 5793 (22.63 KB)\nNon-trainable params: 0 (0.00 Byte)\n________________________________________________________________________________________________________________________________________________________________________________________________________\n\n\n코드 설명\n\nlayer_lstm(units = 32, recurrent_dropout = 0.25): LSTM 계층\n\nunits = 32: LSTM 계층이 출력할 벡터 차원은 32이다.\n\nLSTM이 학습하는 복잡한 패턴의 표현력을 조절한다.\n\n값이 클수록 복잡한 패턴 학습 가능하지만 계산 비용이 증가한다.\n\n\nrecurrent_dropout = 0.25: 순환 상태 업데이트 시, 일부 뉴런을 무작위로 비활성화(Dropout)하여 과적합을 방지한다.\n\n값 0.25는 25%의 유닛을 비활성화함을 의미한다.\n\nRef. A Theoretically Grounded Application of Dropout in Recurrent Neural Networks, Gal and Ghahramani (2016)\n\n\n\n\n\n\n\nRecurrent Dropout (출처: https://arxiv.org/pdf/1603.05118)\n\n\n\n\nlayer_dropout(0.5): 드롭아웃 계층\n\nrate = 0.5: 전체 뉴런의 50%를 무작위로 비활성화하여 과적합을 방지한다.\n\nlayer_dense(units = 1): Dense 계층\n\n회귀 문제(연속형 값 예측)를 해결하기 위해 units = 1로 설정한다.\n활성화 함수가 지정되지 않았으므로 선형 활성화 함수(Linear Activation)를 사용한다.\n\n\n\n# 3. Bidirection LSTM\nset.seed(100)\n\ninputs &lt;- layer_input(shape = c(sequence_length, ncol_input_data))       \noutputs &lt;- inputs %&gt;%\n  bidirectional(layer_lstm(units = 16)) %&gt;%\n  layer_dense(units = 1)                                                 # Default: Linear Activation\n\nmodel &lt;- keras_model(inputs, outputs)\n\nsummary(model)\n\nModel: \"model_4\"\n________________________________________________________________________________________________________________________________________________________________________________________________________\n Layer (type)                                                                             Output Shape                                                                    Param #                       \n========================================================================================================================================================================================================\n input_5 (InputLayer)                                                                     [(None, 12, 12)]                                                                0                             \n bidirectional (Bidirectional)                                                            (None, 32)                                                                      3712                          \n dense_5 (Dense)                                                                          (None, 1)                                                                       33                            \n========================================================================================================================================================================================================\nTotal params: 3745 (14.63 KB)\nTrainable params: 3745 (14.63 KB)\nNon-trainable params: 0 (0.00 Byte)\n________________________________________________________________________________________________________________________________________________________________________________________________________\n\n\n코드 설명\n\nbidirectional(layer_lstm(units = 16)): 양방향 LSTM 계층\n\nbidirectional: LSTM을 Input의 앞방향(Forward)과 뒤방향(Backward)으로 학습시킨다.\n\nlayer_lstm(units = 16)\n\nLSTM 계층의 출력 공간의 차원은 16이다.\n\n양방향 학습으로 인해, 최종 출력은 앞방향 출력(16차원)과 뒤방향 출력(16차원)을 합쳐 32차원의 벡터이다.\n\n\n양방향 구조는 Input의 문맥 정보(앞뒤 관계)를 더 잘 포착할 수 있도록 돕는다.\n\nlayer_dense(units = 1): Dense 계층\n\n회귀 문제(연속형 값 예측)를 해결하기 위해 units = 1로 설정한다.\n활성화 함수가 지정되지 않았으므로 선형 활성화 함수(Linear Activation)를 사용한다.\n\n\n\n\n\n\n\n16.5.1.4 Gated Recurrent Unit (GRU)\n\n# 1. Simple GRU\nset.seed(100)\n\ninputs &lt;- layer_input(shape = c(sequence_length, ncol_input_data))     \noutputs &lt;- inputs %&gt;%\n  layer_gru(units = 32, recurrent_dropout = 0.5, \n            return_sequences = TRUE) %&gt;%                                 # 모든 시점(Time Step)에 대해서 은닉 상태값을 출력\n  layer_gru(units = 32, recurrent_dropout = 0.5) %&gt;%\n  layer_dropout(0.5) %&gt;%\n  layer_dense(units = 1)                                                 # Default: Linear Activation\n\nmodel &lt;- keras_model(inputs, outputs)\n\nsummary(model)\n\nModel: \"model_5\"\n________________________________________________________________________________________________________________________________________________________________________________________________________\n Layer (type)                                                                             Output Shape                                                                    Param #                       \n========================================================================================================================================================================================================\n input_6 (InputLayer)                                                                     [(None, 12, 12)]                                                                0                             \n gru_1 (GRU)                                                                              (None, 12, 32)                                                                  4416                          \n gru (GRU)                                                                                (None, 32)                                                                      6336                          \n dropout_1 (Dropout)                                                                      (None, 32)                                                                      0                             \n dense_6 (Dense)                                                                          (None, 1)                                                                       33                            \n========================================================================================================================================================================================================\nTotal params: 10785 (42.13 KB)\nTrainable params: 10785 (42.13 KB)\nNon-trainable params: 0 (0.00 Byte)\n________________________________________________________________________________________________________________________________________________________________________________________________________\n\n\n코드 설명\n\nlayer_gru(units = 32, recurrent_dropout = 0.5, return_sequences = TRUE): GRU 계층\n\nunits = 32: GRU 계층이 출력할 은닉 상태(Hidden State)의 차원은 32이다.\n\n이는 GRU가 학습하는 표현 공간의 크기를 의미한다.\n\n\nrecurrent_dropout = 0.5: 순환 상태 업데이트 시, 50%의 뉴런을 무작위로 비활성화하여 과적합을 방지한다.\n\nreturn_sequences = TRUE: 모든 시점(Time Step)에 대한 은닉 상태 출력을 반환한다.\n\nGRU와 LSTM 모두 다중 계층으로 쌓을 경우 옵션 return_sequences = TRUE이 필요하다.\n\n\nlayer_dropout(0.5): 드롭아웃 계층\n\nrate = 0.5: 모든 출력 값 중 50%를 무작위로 비활성화하여 과적합을 방지한다.\n\nlayer_dense(units = 1): Dense 계층\n\n회귀 문제(연속형 값 예측)를 해결하기 위해 units = 1로 설정한다.\n활성화 함수가 지정되지 않았으므로 선형 활성화 함수(Linear Activation)를 사용한다.\n\n\n\n# 2. Bidirection GRU\nset.seed(100)\n\ninputs &lt;- layer_input(shape = c(sequence_length, ncol_input_data))       \noutputs &lt;- inputs %&gt;%\n  bidirectional(layer_gru(units = 16)) %&gt;%\n  layer_dense(units = 1)                                                 # Default: Linear Activation\n\nmodel &lt;- keras_model(inputs, outputs)\n\nsummary(model)\n\nModel: \"model_6\"\n________________________________________________________________________________________________________________________________________________________________________________________________________\n Layer (type)                                                                             Output Shape                                                                    Param #                       \n========================================================================================================================================================================================================\n input_7 (InputLayer)                                                                     [(None, 12, 12)]                                                                0                             \n bidirectional_1 (Bidirectional)                                                          (None, 32)                                                                      2880                          \n dense_7 (Dense)                                                                          (None, 1)                                                                       33                            \n========================================================================================================================================================================================================\nTotal params: 2913 (11.38 KB)\nTrainable params: 2913 (11.38 KB)\nNon-trainable params: 0 (0.00 Byte)\n________________________________________________________________________________________________________________________________________________________________________________________________________\n\n\n코드 설명\n\nbidirectional(layer_gru(units = 16)): 양방향 GRU 계층\n\nbidirectional: GRU 계층을 양방향으로 학습시킨다.\n\n앞방향(Forward): 입력 시퀀스를 처음부터 끝까지 처리한다.\n\n뒤방향(Backward): 입력 시퀀스를 끝에서 처음까지 처리한다.\n\n각 방향에서 얻어진 결과를 결합하여 더 풍부한 시퀀스 정보 학습 가능하다.\n\n\nlayer_gru(units = 16)\n\nGRU 계층의 출력 공간 차원은 16이다.\n\n양방향 학습을 적용하면 최종 출력의 차원은 앞방향(16) + 뒤방향(16) = 32이다.\n\n\nlayer_dense(units = 1): Dense 계층 추가\n\n회귀 문제(연속형 값 예측)를 해결하기 위해 units = 1로 설정한다.\n활성화 함수가 지정되지 않았으므로 선형 활성화 함수(Linear Activation)를 사용한다.\n\n\n\n\n16.5.1.5 CNN 1D + GRU\n\nset.seed(100)\n\ninputs &lt;- layer_input(shape = c(sequence_length, ncol_input_data))      \noutputs &lt;- inputs %&gt;%\n  layer_conv_1d(filters = 32, kernel_size = 6, activation = \"relu\") %&gt;%  \n  layer_max_pooling_1d(pool_size = 2) %&gt;%\n  layer_conv_1d(filters = 32, kernel_size = 3, activation = \"relu\") %&gt;%\n  layer_gru(units = 32, recurrent_dropout = 0.5, return_sequences = TRUE) %&gt;%\n  layer_dropout(0.1) %&gt;%\n  layer_dense(units = 1)                                                 # Default: Linear Activation\n\nmodel &lt;- keras_model(inputs, outputs)\n\nsummary(model)\n\nModel: \"model_7\"\n________________________________________________________________________________________________________________________________________________________________________________________________________\n Layer (type)                                                                             Output Shape                                                                    Param #                       \n========================================================================================================================================================================================================\n input_8 (InputLayer)                                                                     [(None, 12, 12)]                                                                0                             \n conv1d_3 (Conv1D)                                                                        (None, 7, 32)                                                                   2336                          \n max_pooling1d_1 (MaxPooling1D)                                                           (None, 3, 32)                                                                   0                             \n conv1d_2 (Conv1D)                                                                        (None, 1, 32)                                                                   3104                          \n gru_3 (GRU)                                                                              (None, 1, 32)                                                                   6336                          \n dropout_2 (Dropout)                                                                      (None, 1, 32)                                                                   0                             \n dense_8 (Dense)                                                                          (None, 1, 1)                                                                    33                            \n========================================================================================================================================================================================================\nTotal params: 11809 (46.13 KB)\nTrainable params: 11809 (46.13 KB)\nNon-trainable params: 0 (0.00 Byte)\n________________________________________________________________________________________________________________________________________________________________________________________________________\n\n\n코드 설명\n\nlayer_conv_1d(filters = 32, kernel_size = 6, activation = \"relu\"): 1D 컨볼루션 계층\n\nfilters: 콘벌루션 필터 개수를 입력한다.\n\n필터 수가 많을수록 더 복잡한 특징을 학습할 수 있지만 계산 비용 증가한다.\n\nkernel_size: 모형이 학습할 데이터 패턴의 시간적 범위(시계열 윈도우 크기)를 결정한다.\n\nactivation: 활성화 함수를 입력한다.\n\nlayer_max_pooling_1d(pool_size = 2): 1D Max Pooling 계층 → 시계열 데이터의 차원을 축소\n\npool_size(= Max Pooling Window Length)를 “2”로 지정한다.\nstrides의 경우 옵션 pool_size에 입력한 값이 Default(여기서는 2)이다.\n두 옵션을 통해 해당 계층에서 입력 데이터의 차원을 절반으로 축소한다.\n함수 layer_max_pooling_1d() 다음에 입력한 함수 layer_conv_1d()의 옵션 kernel_size는 절반으로 축소한 “3”으로 지정한다.\n\nlayer_gru(units = 32, recurrent_dropout = 0.5, return_sequences = TRUE): GRU 계층\n\nunits = 32: GRU 계층의 출력 공간 차원은 32차원이다.\n\n시계열 데이터를 압축된 32차원 벡터로 표현.\n\n\nrecurrent_dropout = 0.5: 순환 상태 업데이트 시 50% 뉴런을 무작위로 비활성화하여 과적합 방지한다.\n\nreturn_sequences = TRUE: 모든 시점(Time Step)에 대한 은닉 상태 출력을 반환한다.\n\n이 출력은 다음 계층(드롭아웃 계층)에서 사용된다.\n\n\nlayer_dropout(0.1): 드롭아웃 계층\n\nrate = 0.1: 전체 뉴런 중 10%를 무작위로 비활성화하여 과적합을 방지한다.\n\nlayer_dense(units = 1): Dense 계층\n\n회귀 문제(연속형 값 예측)를 해결하기 위해 units = 1로 설정한다.\n활성화 함수가 지정되지 않았으므로 선형 활성화 함수(Linear Activation)를 사용한다.\n\n\n\n\n\n16.5.2 Model Compile\n\nmodel %&gt;%\n  compile(optimizer = \"rmsprop\",\n          loss = \"mse\",\n          metrics = \"mae\")\n\n\n\n16.5.3 Model Fit\n\nhistory &lt;- model %&gt;%\n  fit(train_dataset,\n      epochs = 100,\n      validation_data = val_dataset,\n      callbacks = callbacks_list)\n\nEpoch 1/100\n4/4 - 3s - loss: 3015755.5000 - mae: 1729.6298 - val_loss: 3510547.5000 - val_mae: 1867.4125 - lr: 0.0010 - 3s/epoch - 670ms/step\nEpoch 2/100\n4/4 - 0s - loss: 3011951.5000 - mae: 1728.5303 - val_loss: 3506447.2500 - val_mae: 1866.3142 - lr: 0.0010 - 143ms/epoch - 36ms/step\nEpoch 3/100\n4/4 - 0s - loss: 3008031.5000 - mae: 1727.3945 - val_loss: 3502763.7500 - val_mae: 1865.3269 - lr: 0.0010 - 110ms/epoch - 27ms/step\nEpoch 4/100\n4/4 - 0s - loss: 3004926.5000 - mae: 1726.4961 - val_loss: 3499602.5000 - val_mae: 1864.4791 - lr: 0.0010 - 105ms/epoch - 26ms/step\nEpoch 5/100\n4/4 - 0s - loss: 3002021.5000 - mae: 1725.6591 - val_loss: 3496844.7500 - val_mae: 1863.7393 - lr: 0.0010 - 107ms/epoch - 27ms/step\nEpoch 6/100\n4/4 - 0s - loss: 2999773.0000 - mae: 1725.0037 - val_loss: 3494691.7500 - val_mae: 1863.1616 - lr: 0.0010 - 102ms/epoch - 26ms/step\nEpoch 7/100\n4/4 - 0s - loss: 2997919.0000 - mae: 1724.4734 - val_loss: 3492967.7500 - val_mae: 1862.6989 - lr: 0.0010 - 105ms/epoch - 26ms/step\nEpoch 8/100\n4/4 - 0s - loss: 2996537.0000 - mae: 1724.0734 - val_loss: 3491554.7500 - val_mae: 1862.3195 - lr: 0.0010 - 113ms/epoch - 28ms/step\nEpoch 9/100\n4/4 - 0s - loss: 2995356.2500 - mae: 1723.7346 - val_loss: 3490382.0000 - val_mae: 1862.0045 - lr: 0.0010 - 106ms/epoch - 26ms/step\nEpoch 10/100\n4/4 - 0s - loss: 2993795.0000 - mae: 1723.2834 - val_loss: 3489416.7500 - val_mae: 1861.7454 - lr: 0.0010 - 108ms/epoch - 27ms/step\nEpoch 11/100\n4/4 - 0s - loss: 2993752.2500 - mae: 1723.2705 - val_loss: 3488636.0000 - val_mae: 1861.5358 - lr: 0.0010 - 110ms/epoch - 27ms/step\nEpoch 12/100\n4/4 - 0s - loss: 2992527.0000 - mae: 1722.9133 - val_loss: 3487957.7500 - val_mae: 1861.3534 - lr: 0.0010 - 110ms/epoch - 27ms/step\nEpoch 13/100\n4/4 - 0s - loss: 2991723.5000 - mae: 1722.6765 - val_loss: 3487336.5000 - val_mae: 1861.1865 - lr: 0.0010 - 117ms/epoch - 29ms/step\nEpoch 14/100\n4/4 - 0s - loss: 2991444.0000 - mae: 1722.5984 - val_loss: 3486740.2500 - val_mae: 1861.0264 - lr: 0.0010 - 111ms/epoch - 28ms/step\nEpoch 15/100\n4/4 - 0s - loss: 2990621.0000 - mae: 1722.3628 - val_loss: 3486084.5000 - val_mae: 1860.8502 - lr: 0.0010 - 103ms/epoch - 26ms/step\nEpoch 16/100\n4/4 - 0s - loss: 2990892.5000 - mae: 1722.4348 - val_loss: 3485462.0000 - val_mae: 1860.6829 - lr: 0.0010 - 103ms/epoch - 26ms/step\nEpoch 17/100\n4/4 - 0s - loss: 2989982.5000 - mae: 1722.1741 - val_loss: 3484911.5000 - val_mae: 1860.5350 - lr: 0.0010 - 108ms/epoch - 27ms/step\nEpoch 18/100\n4/4 - 0s - loss: 2989754.5000 - mae: 1722.1096 - val_loss: 3484394.7500 - val_mae: 1860.3961 - lr: 0.0010 - 103ms/epoch - 26ms/step\nEpoch 19/100\n4/4 - 0s - loss: 2988716.7500 - mae: 1721.8124 - val_loss: 3483891.0000 - val_mae: 1860.2607 - lr: 0.0010 - 103ms/epoch - 26ms/step\nEpoch 20/100\n4/4 - 0s - loss: 2988231.0000 - mae: 1721.6699 - val_loss: 3483394.7500 - val_mae: 1860.1274 - lr: 0.0010 - 100ms/epoch - 25ms/step\nEpoch 21/100\n4/4 - 0s - loss: 2987860.5000 - mae: 1721.5620 - val_loss: 3482908.2500 - val_mae: 1859.9966 - lr: 0.0010 - 100ms/epoch - 25ms/step\nEpoch 22/100\n4/4 - 0s - loss: 2987233.0000 - mae: 1721.3765 - val_loss: 3482422.5000 - val_mae: 1859.8661 - lr: 0.0010 - 104ms/epoch - 26ms/step\nEpoch 23/100\n4/4 - 0s - loss: 2987370.7500 - mae: 1721.4136 - val_loss: 3481946.0000 - val_mae: 1859.7379 - lr: 0.0010 - 103ms/epoch - 26ms/step\nEpoch 24/100\n4/4 - 0s - loss: 2986856.0000 - mae: 1721.2600 - val_loss: 3481468.2500 - val_mae: 1859.6096 - lr: 0.0010 - 114ms/epoch - 28ms/step\nEpoch 25/100\n4/4 - 0s - loss: 2985938.5000 - mae: 1721.0059 - val_loss: 3480990.5000 - val_mae: 1859.4812 - lr: 0.0010 - 104ms/epoch - 26ms/step\nEpoch 26/100\n4/4 - 0s - loss: 2985030.7500 - mae: 1720.7338 - val_loss: 3480509.0000 - val_mae: 1859.3516 - lr: 0.0010 - 102ms/epoch - 25ms/step\nEpoch 27/100\n4/4 - 0s - loss: 2985316.5000 - mae: 1720.8207 - val_loss: 3480035.7500 - val_mae: 1859.2242 - lr: 0.0010 - 101ms/epoch - 25ms/step\nEpoch 28/100\n4/4 - 0s - loss: 2985155.7500 - mae: 1720.7756 - val_loss: 3479565.0000 - val_mae: 1859.0977 - lr: 0.0010 - 101ms/epoch - 25ms/step\nEpoch 29/100\n4/4 - 0s - loss: 2984509.0000 - mae: 1720.5854 - val_loss: 3479091.5000 - val_mae: 1858.9703 - lr: 0.0010 - 103ms/epoch - 26ms/step\nEpoch 30/100\n4/4 - 0s - loss: 2984135.5000 - mae: 1720.4786 - val_loss: 3478618.2500 - val_mae: 1858.8430 - lr: 0.0010 - 109ms/epoch - 27ms/step\nEpoch 31/100\n4/4 - 0s - loss: 2983686.0000 - mae: 1720.3494 - val_loss: 3478145.2500 - val_mae: 1858.7158 - lr: 0.0010 - 103ms/epoch - 26ms/step\nEpoch 32/100\n4/4 - 0s - loss: 2983551.7500 - mae: 1720.3069 - val_loss: 3477675.0000 - val_mae: 1858.5892 - lr: 0.0010 - 105ms/epoch - 26ms/step\nEpoch 33/100\n4/4 - 0s - loss: 2982203.5000 - mae: 1719.9174 - val_loss: 3477195.2500 - val_mae: 1858.4601 - lr: 0.0010 - 101ms/epoch - 25ms/step\nEpoch 34/100\n4/4 - 0s - loss: 2982147.2500 - mae: 1719.8997 - val_loss: 3476721.7500 - val_mae: 1858.3330 - lr: 0.0010 - 101ms/epoch - 25ms/step\nEpoch 35/100\n4/4 - 0s - loss: 2981973.5000 - mae: 1719.8481 - val_loss: 3476249.7500 - val_mae: 1858.2058 - lr: 0.0010 - 100ms/epoch - 25ms/step\nEpoch 36/100\n4/4 - 0s - loss: 2981239.0000 - mae: 1719.6362 - val_loss: 3475774.0000 - val_mae: 1858.0778 - lr: 0.0010 - 101ms/epoch - 25ms/step\nEpoch 37/100\n4/4 - 0s - loss: 2980859.0000 - mae: 1719.5327 - val_loss: 3475302.0000 - val_mae: 1857.9507 - lr: 0.0010 - 106ms/epoch - 27ms/step\nEpoch 38/100\n4/4 - 0s - loss: 2980679.0000 - mae: 1719.4746 - val_loss: 3474832.2500 - val_mae: 1857.8245 - lr: 0.0010 - 137ms/epoch - 34ms/step\nEpoch 39/100\n4/4 - 0s - loss: 2980071.0000 - mae: 1719.2957 - val_loss: 3474356.0000 - val_mae: 1857.6963 - lr: 0.0010 - 118ms/epoch - 29ms/step\nEpoch 40/100\n4/4 - 0s - loss: 2979003.0000 - mae: 1718.9803 - val_loss: 3473879.0000 - val_mae: 1857.5677 - lr: 0.0010 - 107ms/epoch - 27ms/step\nEpoch 41/100\n4/4 - 0s - loss: 2978961.0000 - mae: 1718.9763 - val_loss: 3473404.7500 - val_mae: 1857.4402 - lr: 0.0010 - 111ms/epoch - 28ms/step\nEpoch 42/100\n4/4 - 0s - loss: 2978741.5000 - mae: 1718.9108 - val_loss: 3472931.5000 - val_mae: 1857.3129 - lr: 0.0010 - 104ms/epoch - 26ms/step\nEpoch 43/100\n4/4 - 0s - loss: 2978480.5000 - mae: 1718.8389 - val_loss: 3472461.2500 - val_mae: 1857.1862 - lr: 0.0010 - 104ms/epoch - 26ms/step\nEpoch 44/100\n4/4 - 0s - loss: 2977611.0000 - mae: 1718.5801 - val_loss: 3471985.2500 - val_mae: 1857.0579 - lr: 0.0010 - 109ms/epoch - 27ms/step\nEpoch 45/100\n4/4 - 0s - loss: 2977508.2500 - mae: 1718.5557 - val_loss: 3471512.7500 - val_mae: 1856.9307 - lr: 0.0010 - 104ms/epoch - 26ms/step\nEpoch 46/100\n4/4 - 0s - loss: 2976562.0000 - mae: 1718.2742 - val_loss: 3471039.2500 - val_mae: 1856.8033 - lr: 0.0010 - 106ms/epoch - 26ms/step\nEpoch 47/100\n4/4 - 0s - loss: 2976689.0000 - mae: 1718.3075 - val_loss: 3470570.0000 - val_mae: 1856.6769 - lr: 0.0010 - 110ms/epoch - 27ms/step\nEpoch 48/100\n4/4 - 0s - loss: 2976037.0000 - mae: 1718.1287 - val_loss: 3470096.2500 - val_mae: 1856.5493 - lr: 0.0010 - 153ms/epoch - 38ms/step\nEpoch 49/100\n4/4 - 0s - loss: 2975215.5000 - mae: 1717.8835 - val_loss: 3469620.5000 - val_mae: 1856.4211 - lr: 0.0010 - 109ms/epoch - 27ms/step\nEpoch 50/100\n4/4 - 0s - loss: 2975328.0000 - mae: 1717.9236 - val_loss: 3469149.5000 - val_mae: 1856.2942 - lr: 0.0010 - 101ms/epoch - 25ms/step\nEpoch 51/100\n4/4 - 0s - loss: 2974362.5000 - mae: 1717.6335 - val_loss: 3468673.7500 - val_mae: 1856.1661 - lr: 0.0010 - 105ms/epoch - 26ms/step\nEpoch 52/100\n4/4 - 0s - loss: 2974627.0000 - mae: 1717.7124 - val_loss: 3468205.0000 - val_mae: 1856.0399 - lr: 0.0010 - 100ms/epoch - 25ms/step\nEpoch 53/100\n4/4 - 0s - loss: 2973422.0000 - mae: 1717.3574 - val_loss: 3467730.0000 - val_mae: 1855.9119 - lr: 0.0010 - 106ms/epoch - 26ms/step\nEpoch 54/100\n4/4 - 0s - loss: 2973426.5000 - mae: 1717.3634 - val_loss: 3467259.0000 - val_mae: 1855.7852 - lr: 0.0010 - 113ms/epoch - 28ms/step\nEpoch 55/100\n4/4 - 0s - loss: 2972886.0000 - mae: 1717.2109 - val_loss: 3466784.7500 - val_mae: 1855.6572 - lr: 0.0010 - 112ms/epoch - 28ms/step\nEpoch 56/100\n4/4 - 0s - loss: 2972549.7500 - mae: 1717.1045 - val_loss: 3466313.7500 - val_mae: 1855.5303 - lr: 0.0010 - 104ms/epoch - 26ms/step\nEpoch 57/100\n4/4 - 0s - loss: 2972050.5000 - mae: 1716.9619 - val_loss: 3465840.2500 - val_mae: 1855.4028 - lr: 0.0010 - 102ms/epoch - 25ms/step\nEpoch 58/100\n4/4 - 0s - loss: 2971238.5000 - mae: 1716.7275 - val_loss: 3465365.2500 - val_mae: 1855.2747 - lr: 0.0010 - 103ms/epoch - 26ms/step\nEpoch 59/100\n4/4 - 0s - loss: 2971871.2500 - mae: 1716.9055 - val_loss: 3464897.0000 - val_mae: 1855.1484 - lr: 0.0010 - 108ms/epoch - 27ms/step\nEpoch 60/100\n4/4 - 0s - loss: 2970549.2500 - mae: 1716.5258 - val_loss: 3464422.7500 - val_mae: 1855.0206 - lr: 0.0010 - 136ms/epoch - 34ms/step\nEpoch 61/100\n4/4 - 0s - loss: 2970675.0000 - mae: 1716.5710 - val_loss: 3463953.0000 - val_mae: 1854.8940 - lr: 0.0010 - 110ms/epoch - 27ms/step\nEpoch 62/100\n4/4 - 0s - loss: 2970028.0000 - mae: 1716.3696 - val_loss: 3463480.2500 - val_mae: 1854.7666 - lr: 0.0010 - 117ms/epoch - 29ms/step\nEpoch 63/100\n4/4 - 0s - loss: 2969632.0000 - mae: 1716.2531 - val_loss: 3463010.0000 - val_mae: 1854.6398 - lr: 0.0010 - 120ms/epoch - 30ms/step\nEpoch 64/100\n4/4 - 0s - loss: 2969028.5000 - mae: 1716.0813 - val_loss: 3462535.7500 - val_mae: 1854.5121 - lr: 0.0010 - 105ms/epoch - 26ms/step\nEpoch 65/100\n4/4 - 0s - loss: 2968761.5000 - mae: 1716.0060 - val_loss: 3462064.7500 - val_mae: 1854.3851 - lr: 0.0010 - 104ms/epoch - 26ms/step\nEpoch 66/100\n4/4 - 0s - loss: 2967757.0000 - mae: 1715.7211 - val_loss: 3461590.0000 - val_mae: 1854.2570 - lr: 0.0010 - 109ms/epoch - 27ms/step\nEpoch 67/100\n4/4 - 0s - loss: 2967677.7500 - mae: 1715.6912 - val_loss: 3461116.5000 - val_mae: 1854.1294 - lr: 0.0010 - 119ms/epoch - 30ms/step\nEpoch 68/100\n4/4 - 0s - loss: 2967094.5000 - mae: 1715.5277 - val_loss: 3460642.7500 - val_mae: 1854.0016 - lr: 0.0010 - 119ms/epoch - 30ms/step\nEpoch 69/100\n4/4 - 0s - loss: 2966265.7500 - mae: 1715.2784 - val_loss: 3460166.0000 - val_mae: 1853.8732 - lr: 0.0010 - 124ms/epoch - 31ms/step\nEpoch 70/100\n4/4 - 0s - loss: 2966430.7500 - mae: 1715.3225 - val_loss: 3459696.0000 - val_mae: 1853.7463 - lr: 0.0010 - 105ms/epoch - 26ms/step\nEpoch 71/100\n4/4 - 0s - loss: 2965965.7500 - mae: 1715.1929 - val_loss: 3459226.0000 - val_mae: 1853.6195 - lr: 0.0010 - 106ms/epoch - 26ms/step\nEpoch 72/100\n4/4 - 0s - loss: 2965601.5000 - mae: 1715.0746 - val_loss: 3458754.7500 - val_mae: 1853.4924 - lr: 0.0010 - 108ms/epoch - 27ms/step\nEpoch 73/100\n4/4 - 0s - loss: 2965912.5000 - mae: 1715.1731 - val_loss: 3458287.0000 - val_mae: 1853.3662 - lr: 0.0010 - 110ms/epoch - 27ms/step\nEpoch 74/100\n4/4 - 0s - loss: 2964489.0000 - mae: 1714.7600 - val_loss: 3457813.2500 - val_mae: 1853.2383 - lr: 0.0010 - 106ms/epoch - 26ms/step\nEpoch 75/100\n4/4 - 0s - loss: 2964205.5000 - mae: 1714.6759 - val_loss: 3457341.0000 - val_mae: 1853.1108 - lr: 0.0010 - 136ms/epoch - 34ms/step\nEpoch 76/100\n4/4 - 0s - loss: 2963915.7500 - mae: 1714.5992 - val_loss: 3456870.0000 - val_mae: 1852.9839 - lr: 0.0010 - 121ms/epoch - 30ms/step\nEpoch 77/100\n4/4 - 0s - loss: 2963873.0000 - mae: 1714.5830 - val_loss: 3456401.0000 - val_mae: 1852.8572 - lr: 0.0010 - 114ms/epoch - 28ms/step\nEpoch 78/100\n4/4 - 0s - loss: 2963063.0000 - mae: 1714.3423 - val_loss: 3455927.5000 - val_mae: 1852.7295 - lr: 0.0010 - 109ms/epoch - 27ms/step\nEpoch 79/100\n4/4 - 0s - loss: 2962893.5000 - mae: 1714.2915 - val_loss: 3455456.0000 - val_mae: 1852.6023 - lr: 0.0010 - 107ms/epoch - 27ms/step\nEpoch 80/100\n4/4 - 0s - loss: 2961861.5000 - mae: 1713.9924 - val_loss: 3454981.5000 - val_mae: 1852.4741 - lr: 0.0010 - 118ms/epoch - 30ms/step\nEpoch 81/100\n4/4 - 0s - loss: 2961676.0000 - mae: 1713.9305 - val_loss: 3454507.5000 - val_mae: 1852.3463 - lr: 0.0010 - 118ms/epoch - 29ms/step\nEpoch 82/100\n4/4 - 0s - loss: 2962104.7500 - mae: 1714.0554 - val_loss: 3454041.0000 - val_mae: 1852.2202 - lr: 0.0010 - 163ms/epoch - 41ms/step\nEpoch 83/100\n4/4 - 0s - loss: 2960754.2500 - mae: 1713.6653 - val_loss: 3453566.5000 - val_mae: 1852.0923 - lr: 0.0010 - 132ms/epoch - 33ms/step\nEpoch 84/100\n4/4 - 0s - loss: 2960101.0000 - mae: 1713.4835 - val_loss: 3453092.5000 - val_mae: 1851.9642 - lr: 0.0010 - 112ms/epoch - 28ms/step\nEpoch 85/100\n4/4 - 0s - loss: 2960013.2500 - mae: 1713.4487 - val_loss: 3452621.2500 - val_mae: 1851.8369 - lr: 0.0010 - 111ms/epoch - 28ms/step\nEpoch 86/100\n4/4 - 0s - loss: 2959677.7500 - mae: 1713.3535 - val_loss: 3452150.2500 - val_mae: 1851.7100 - lr: 0.0010 - 157ms/epoch - 39ms/step\nEpoch 87/100\n4/4 - 0s - loss: 2958939.7500 - mae: 1713.1428 - val_loss: 3451677.7500 - val_mae: 1851.5823 - lr: 0.0010 - 113ms/epoch - 28ms/step\nEpoch 88/100\n4/4 - 0s - loss: 2958942.2500 - mae: 1713.1335 - val_loss: 3451208.7500 - val_mae: 1851.4557 - lr: 0.0010 - 118ms/epoch - 29ms/step\nEpoch 89/100\n4/4 - 0s - loss: 2957843.5000 - mae: 1712.8151 - val_loss: 3450735.2500 - val_mae: 1851.3278 - lr: 0.0010 - 160ms/epoch - 40ms/step\nEpoch 90/100\n4/4 - 0s - loss: 2957929.7500 - mae: 1712.8333 - val_loss: 3450264.7500 - val_mae: 1851.2006 - lr: 0.0010 - 123ms/epoch - 31ms/step\nEpoch 91/100\n4/4 - 0s - loss: 2957277.2500 - mae: 1712.6523 - val_loss: 3449792.2500 - val_mae: 1851.0731 - lr: 0.0010 - 121ms/epoch - 30ms/step\nEpoch 92/100\n4/4 - 0s - loss: 2957049.0000 - mae: 1712.5824 - val_loss: 3449321.0000 - val_mae: 1850.9458 - lr: 0.0010 - 115ms/epoch - 29ms/step\nEpoch 93/100\n4/4 - 0s - loss: 2955694.5000 - mae: 1712.1943 - val_loss: 3448846.0000 - val_mae: 1850.8174 - lr: 0.0010 - 121ms/epoch - 30ms/step\nEpoch 94/100\n4/4 - 0s - loss: 2955342.2500 - mae: 1712.0889 - val_loss: 3448371.2500 - val_mae: 1850.6891 - lr: 0.0010 - 115ms/epoch - 29ms/step\nEpoch 95/100\n4/4 - 0s - loss: 2955005.5000 - mae: 1711.9946 - val_loss: 3447898.7500 - val_mae: 1850.5615 - lr: 0.0010 - 120ms/epoch - 30ms/step\nEpoch 96/100\n4/4 - 0s - loss: 2955957.0000 - mae: 1712.2617 - val_loss: 3447433.5000 - val_mae: 1850.4358 - lr: 0.0010 - 113ms/epoch - 28ms/step\nEpoch 97/100\n4/4 - 0s - loss: 2954982.5000 - mae: 1711.9825 - val_loss: 3446963.7500 - val_mae: 1850.3088 - lr: 0.0010 - 115ms/epoch - 29ms/step\nEpoch 98/100\n4/4 - 0s - loss: 2954086.7500 - mae: 1711.7157 - val_loss: 3446490.0000 - val_mae: 1850.1808 - lr: 0.0010 - 118ms/epoch - 29ms/step\nEpoch 99/100\n4/4 - 0s - loss: 2953425.2500 - mae: 1711.5334 - val_loss: 3446017.7500 - val_mae: 1850.0532 - lr: 0.0010 - 112ms/epoch - 28ms/step\nEpoch 100/100\n4/4 - 0s - loss: 2953116.0000 - mae: 1711.4209 - val_loss: 3445544.7500 - val_mae: 1849.9253 - lr: 0.0010 - 111ms/epoch - 28ms/step\n\n\n\nplot(history, metrics = \"mae\")\n\n\n\n\n\n\n\n\n\nlocal({\n  p &lt;- plot(history, metrics = \"mae\")\n  p$data %&lt;&gt;% .[.$epoch &gt; 1, ]\n  print(p)\n})\n\n\n\n\n\n\n\n\n\n# 훈련된 최종 모형 저장\nsave_model_tf(model, filepath=\"model1.keras\") \n\n\n\n16.5.4 Model Evaluate\n\nsprintf(\"Test MAE: %.2f\", evaluate(model, test_dataset)[\"mae\"])\n\n1/1 - 0s - loss: 3609287.5000 - mae: 1895.1899 - 58ms/epoch - 58ms/step\n\n\n[1] \"Test MAE: 1895.19\"\n\n\n\n\n16.5.5 Prediction\n\n함수 predict()를 이용하여 Test Dataset에 대한 예측을 수행한다.\n\n\n# 훈련된 최종 모형에 대한 예측\npredictions &lt;- model %&gt;% \n  predict(test_dataset)                     # In 3-1. test_dataset: (Input, Target) Dataset으로 분할된 TeD\n\n1/1 - 0s - 344ms/epoch - 344ms/step\n\npredictions\n\n, , 1\n\n          [,1]\n [1,] 18.70679\n [2,] 18.70679\n [3,] 18.70679\n [4,] 18.70679\n [5,] 18.70679\n [6,] 18.70679\n [7,] 18.70679\n [8,] 18.70679\n [9,] 18.70679\n\n\nCaution! 딥러닝 기법을 시계열 데이터에 적용할 때 Training Dataset 뿐만 아니라 Test Dataset도 (Input, Target) Dataset으로 분할한다. 그리고 Test Dataset의 모든 Index에 대해 예측을 수행하는 것이 아니라 Target에 해당하는 Index에 대해서만 예측값을 생성한다.\n\n# Best Model Loading\nmodel1 &lt;- load_model_tf(\"Amtrack.keras\")    # 자동 저장된 Best model Loading\n\n# Best Model에 대한 예측\npredictions1 &lt;- model1 %&gt;% \n  predict(test_dataset)                     # In 3-1. test_dataset: (Input, Target) Dataset으로 분할된 TeD\n\n1/1 - 0s - 327ms/epoch - 327ms/step\n\npredictions1\n\n, , 1\n\n          [,1]\n [1,] 18.70679\n [2,] 18.70679\n [3,] 18.70679\n [4,] 18.70679\n [5,] 18.70679\n [6,] 18.70679\n [7,] 18.70679\n [8,] 18.70679\n [9,] 18.70679\n\n\n\n# Actual Values Corresponding to Prediction Values \nnum_last &lt;- NROW(test_df$Ridership) - NROW(predictions) - delay         \ntest_y &lt;- test_df$Ridership %&gt;%                                          # test_df$Ridership : Target\n  tail(-delay) %&gt;%                                                       # Drop First Delay Samples Because Index of Target Starts from 1+delay            \n  head(-num_last)                                                        # Drop Last 11\n\nCaution! 위에서 언급했듯이 Test Dataset의 모든 Index에 대해 예측을 수행하는 것이 아니라 (Input, Target) Dataset으로 분할하고, Target에 해당하는 Index에 대해서만 예측값을 생성한다. 그래서 함수 predict()을 통해 생성한 예측값에 대응하는 실제값만 남겨두기 위해 위의 코드를 수행한다.\n\nNROW(predictions)\n\n[1] 9\n\nNROW(test_y)\n\n[1] 9\n\n\n\n# Accuracy using MAE\nMAE &lt;- mean( abs(predictions-test_y) )\n\nMAE\n\n[1] 1895.19\n\n\n\n# Accuracy using MSE\nMSE &lt;- mean( (predictions-test_y)^2 )\n\nMSE\n\n[1] 3609287\n\n\n\n# Prediction Result Plot\nplot(predictions, type = \"l\")\nlines( test_y, col=\"blue\" )\n\n\n\n\n\n\n\nplot(test_y, predictions, xlab = \"Observation\", ylab = \"Prediction\")\nabline(a = 0, b = 1, col = \"black\", lty = 2)",
    "crumbs": [
      "ML & DL",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Deep Learning</span>"
    ]
  },
  {
    "objectID": "Imputation.html",
    "href": "Imputation.html",
    "title": "17  Imputation using Kalman Smoothing",
    "section": "",
    "text": "17.1 Structural Time Series Model\n\\[\n\\begin{aligned}\nY_{t}&=Z^{T}_{t}\\alpha_{t}+\\epsilon_{t},~~~~~~~\\epsilon_{t}\\sim N_{m}(0,H_{t}), \\\\\n\\alpha_{t+1}&=T_{t}\\alpha_{t}+R_{t}\\eta_{t},~~~\\eta_{t}\\sim N_{q}(0,Q_{t}),\\\\\n\\alpha_{1} &\\sim N_{p} (\\mu_{1}, P_{1})\n\\end{aligned}\n\\]",
    "crumbs": [
      "Imputation",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Imputation using Kalman Smoothing</span>"
    ]
  },
  {
    "objectID": "Imputation.html#structural-time-series-model",
    "href": "Imputation.html#structural-time-series-model",
    "title": "17  Imputation using Kalman Smoothing",
    "section": "",
    "text": "첫번째는 관측방정식, 두번째는 상태방정식이다.\n\n\\(Y_{t}\\) : 시점 \\(t\\)에서 관측값\n\\(\\alpha_{t}\\) : 시점 \\(t\\)에서 관측할 수 없는 상태 (시계열에서 추세, 계절성 등이 상태가 될 수 있음)\n\n직접 관찰할 수 없지만 시간이 지남에 따라 어떻게 변화하는지 알고 있다고 가정하는 것이 합리적\n시간이 지남에 따라 어떻게 변화하는지 정의\n\n\\(Z_{t}\\), \\(T_{t}\\), \\(R_{t}\\) : 0과 1을 포함하여 알고 있는 값과 미지의 모수를 포함하는 행렬\n\n\\(Z_{t}\\) : \\(p\\times m\\) 결과 행렬 (Output Matirx)\n\\(T_{t}\\) : \\(p\\times p\\) 전이 행렬 (Transition Matrix)\n\\(R_{t}\\) : \\(p\\times q\\) 제어 행렬 (Control Matrix)\n\n\\(\\epsilon_{t}\\), \\(\\eta_{t}\\) : 오차로써, 연속적으로 상관관계가 없으며 또한 모든 기간 동안 서로 상관관계가 없는 것으로 가정한다.\n\n\\(\\epsilon_{t}\\) : \\(m\\times m\\) 분산공분산행렬(Variance-covariance Matrix) \\(H_{t}\\)을 가진 \\(m\\times 1\\) 벡터\n\\(\\eta_{t}\\) : \\(q\\times q\\) 상태확산행렬(State Diffusion Matrix) \\(Q_{t}\\)을 가진 \\(q \\times 1\\) 벡터 (\\(q\\le d\\))\n\n\n상태 \\(\\alpha_{t}\\)를 추정하는 방법은 두 가지가 있다.\n\nKalman Filtering\n\n관측값을 예측할 때 사용\n\nKalman Smoothing\n\n결측값이 있을 때 유용",
    "crumbs": [
      "Imputation",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Imputation using Kalman Smoothing</span>"
    ]
  },
  {
    "objectID": "Imputation.html#kalman-smoothing",
    "href": "Imputation.html#kalman-smoothing",
    "title": "17  Imputation using Kalman Smoothing",
    "section": "17.2 Kalman Smoothing",
    "text": "17.2 Kalman Smoothing\n\n특정 기간 또는 모든 시간동안 주어진 시계열 데이터 \\(y_{1}, \\ldots, y_{T}\\)가 주어졌을 때, 상태 \\(\\alpha_{t}(t&lt;T)\\)를 추정하는 방법\n\\(\\hat{\\alpha}_{t} = E(\\alpha_{t}|y_{1},\\ldots, y_{T})\\)\n\n\\(\\alpha_{t}|y_{1},\\ldots, y_{T}\\)의 사후 분포를 이용하여 계산\n\n정확한 계산식은 Dynamic Linear Models with R (p.62) 또는 Time Series Analysis by State Space Methods (p.96~97) 참고\n\n\n과거, 현재 그리고 미래 데이터를 이용하기 때문에, Kalman Filtering보다 정확",
    "crumbs": [
      "Imputation",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Imputation using Kalman Smoothing</span>"
    ]
  },
  {
    "objectID": "Imputation.html#imputets-package",
    "href": "Imputation.html#imputets-package",
    "title": "17  Imputation using Kalman Smoothing",
    "section": "17.3 imputeTS Package",
    "text": "17.3 imputeTS Package\n\nimputeTS Package은 단변량 시계열 데이터 (Univariate time series)에 결측값을 Imputation하기 위해 개발된 패키지이다.\nna_kalmna()함수로 Kalman Smoothing 방법을 이용한 Imputation을 할 수 있다.\n자세한 옵션은 여기를 참고한다.\n\n\nna_kalman(x, model = \"StructTS\", smooth = TRUE, ...)\n\n\nx : 결측값이 있는 시계열 데이터 또는 수치형 벡터\nmodel : Kalman Smoothing이 수행되는 상태 공간 모형(State Space Model)\n\nauto.arima : auto.arima에 의해 적합된 ARIMA 모형\n\nARIMA 모형은 Structural Time Series Model으로 표현 가능\n\n\nStructTS : 최대 우도(Maximum Likelihood)에 의해 적합된 structural 모형\n\nsmooth : TRUE이면, Kalman Smoothing, FALSE이면 Kalmna Run(Kalman Filtering)\n\n\n17.3.1 Process\n\nna_kalmna()의 Imputation 과정은 다음과 같다.\n\n\n주어진 시계열 데이터의 NA의 위치를 파악한다.\n시계열 데이터를 model에 명시한 함수를 이용하여 적합한다.\n적합된 모형을 이용하여 Kalman Smoothing/Run 방법으로 상태 \\(\\hat{\\alpha}_{t}\\)를 추정한다.\nNA 를 추정된 \\(\\hat{y}_{t}=Z^{T}_{t}\\hat{\\alpha}_{t}\\)로 대체한다.\n\n\n\n17.3.2 StructTS\n\nstats Package에 있는 함수로, 주어진 시계열 데이터를 structural 모형에 적합한다.\n\n최대 우도를 이용해 structural 모형의 모수(상태와 관측값의 분산)를 찾는다.\n\n자세한 옵션은 여기, 함수 내부는 여기를 참조한다.\n\n\nStructTS(x, type = c(\"level\", \"trend\", \"BSM\"), ...)\n\n\nx : 단변량 시계열 데이터\ntype : 생략할 경우, x의 frequency가 1보가 크면, “BSM”, 아니면 Local Linear Trend Model\n\nlevel : Local Level Model\n\n\\(Z^{T}_{t} = 1\\), \\(T_{t}  = 1\\), \\(\\alpha_{t}=\\mu_{t}\\), \\(R_{t} = 1\\), \\(\\eta_{t} = \\xi_{t}\\)일 때, 모형식은 다음과 같다.\n\n\n\n\\[\n\\begin{aligned}\nY_{t} &= \\mu_{t} + \\epsilon_{t},~~~~\\epsilon_{t}\\sim N(0, \\sigma^2_{\\epsilon})\\\\\n\\mu_{t+1} &= \\mu_{t} +  \\xi_{t}, ~~~\\xi_{t}\\sim N(0,\\sigma^2_{\\xi }),\n\\end{aligned}\n\\]\n\n\ntrend : Local Linear Trend Model\n\n\\(Z^{T}_{t} = (1, 0)\\), \\(T_{t}  = \\left[\\begin{matrix}\n                              1 &  1\\\\ 0 &  1\n                        \\end{matrix}\\right]\\), \\(\\alpha_{t}=(\\mu_{t}, \\delta_{t})^{T}\\), \\(R_t=\\left[\\begin{matrix}\n            1 & 0 \\\\ 0 & 1 \\end{matrix}\\right]\\), \\(\\eta_{t}=(\\xi_{t},\\zeta_{t})^{T}\\)일 때, 모형식은 다음과 같다.\n\n\n\n\\[\n\\begin{aligned}\nY_{t} &= \\mu_{t} + \\epsilon_{t},~~~~~~~~~~\\epsilon_{t}\\sim N(0, \\sigma^2_{\\epsilon})\\\\\n\\mu_{t+1} &= \\mu_{t} + \\delta_{t} + \\xi_{t}, ~~~\\xi_{t}\\sim N(0,\\sigma^2_{\\xi }),\\\\\n\\delta_{t+1} &= \\delta_{t} + \\zeta_{t}, ~~~~~~~~~~~~\\zeta_{t}\\sim N(0,\\sigma^2_{\\zeta}),\n\\end{aligned}\n\\]\n\n\nBSM : Basic Structural Model로써, Local Linear Trend + Seasonal Component\n\n\\(Z^{T}_{t} = (1,0,1,\\ldots, 0)\\), \\(T_{t} = \\left[\\begin{smallmatrix} 1 & 1 & \\\\\n0 & 1 & \\\\ &   & -1 & - 1 & \\cdots & -1 & -1 \\\\\n&   & 1 & 0 & \\cdots &0& 0\\\\\n&   & 0 & 1 & \\cdots & 0 &0 \\\\\n&   & \\vdots &\\vdots &\\vdots &\\vdots &\\vdots &\\\\\n&   & 0 & 0 & \\cdots & 1 & 0\n\\end{smallmatrix}\\right]\\), \\(\\alpha_{t} = (\\mu_{t}, \\delta_{t}, \\tau_{t}, \\ldots, \\tau_{t-S+2})^{T}\\), \\(R_{t}=\\left[\\begin{smallmatrix}1 & 0 \\\\\n0 & 1 \\\\\n&  & 1 \\\\\n& &  0 \\\\\n& &  \\vdots \\\\\n& &  0 \\\\\n\\end{smallmatrix}\\right]\\), \\(\\eta_{t}=(\\xi_{t}, \\zeta_{t},\\omega_{t})^{T}\\)일 때, 모형식은 다음과 같다.\n\n\n\n\\[\n\\begin{aligned}\nY_{t} &= \\mu_{t} + \\tau_{t}  + \\epsilon_{t},~~~~\\epsilon_{t}\\sim N(0, \\sigma^2_{\\epsilon})\\\\\n\\mu_{t+1} &= \\mu_{t} + \\delta_{t} + \\xi_{t}, ~~~~~~~~~\\xi_{t}\\sim N(0,\\sigma^2_{\\xi }),\\\\\n\\delta_{t+1} &= \\delta_{t} + \\zeta_{t}, ~~~~~~~~~~~~~~~~~~~~~\\zeta_{t}\\sim N(0,\\sigma^2_{\\zeta})\\\\\n\\tau_{t+1}&=-\\sum_{s=1}^{S-1} \\tau_{t+1-s} + \\omega_{t}, ~~~~~~~~~~\\omega_{t}\\sim N(0,\\sigma^2_{\\omega })\n\\end{aligned}\n\\]",
    "crumbs": [
      "Imputation",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Imputation using Kalman Smoothing</span>"
    ]
  },
  {
    "objectID": "Imputation.html#application",
    "href": "Imputation.html#application",
    "title": "17  Imputation using Kalman Smoothing",
    "section": "17.4 Application",
    "text": "17.4 Application\n\n17.4.1 데이터 불러오기\n\npacman::p_load(\"dplyr\", \n               \"xts\", \n               \"ggplot2\", \n               \"imputeTS\")\n\n# In Mac\n# guess_encoding(\"Amtrak.csv\")\n# Amtrak.data &lt;- read.csv(\"Amtrak.csv\", fileEncoding=\"EUC-KR\")\n\nAmtrak.data  &lt;- read.csv(\".../Amtrak.csv\")\n\nAmtrak.data %&gt;%\n  as_tibble\n\n\n\n# A tibble: 159 × 2\n   Month      Ridership\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01/01/1991     1709.\n 2 01/02/1991     1621.\n 3 01/03/1991     1973.\n 4 01/04/1991     1812.\n 5 01/05/1991     1975.\n 6 01/06/1991     1862.\n 7 01/07/1991     1940.\n 8 01/08/1991     2013.\n 9 01/09/1991     1596.\n10 01/10/1991     1725.\n# ℹ 149 more rows\n\n\n\n\n17.4.2 데이터 전처리\n\n# Convert to ts for Target\nridership.ts &lt;- ts(Amtrak.data$Ridership, \n                   start = c(1991, 2),            # 시계열의 시작 연도 / c(1991, 2) : 1991년 2월 -&gt; 첫 번째 시계열은 제거했기 때문\n                   frequency = 12)                # 주기 / 월별 시계열로 1년에 12번 관측\n\n\n# 시계열 그림\nplot(ridership.ts, \n     xlab = \"Time\", ylab = \"Ridership (in 000s)\",\n     ylim = c(1300, 2300))\n\n\n\n\n\n\n\n\nCaution! CSV 파일로 불러온 데이터를 살펴보면 승객 수를 포함하는 변수 Ridership가 수치형임을 알 수 있다. 시계열 데이터 분석을 위해 함수 ts()를 이용하여 해당 변수를 시계열 객체로 변환해야 한다.\nResult! 시계열 그림을 살펴보면 Amtrak 데이터는 U자 형태의 추세를 발견할 수 있으며, 여름(7월과 8월) 동안에 승객이 급증하는 뚜렷한 계절변동도 볼 수 있다.\n\n\n17.4.3 결측값 생성\n\n# NA 생성\nset.seed(100)\nloc &lt;- sample(1:length(ridership.ts), 5)    # Randomly Location\n\nridership.ts.NA &lt;- ridership.ts\nridership.ts.NA[loc] &lt;- NA\n\n# NA 갯수와 위치 \nxts(ridership.ts.NA, order = as.Date(ridership.ts.NA))\n\n               [,1]\n1991-02-01 1708.917\n1991-03-01 1620.586\n1991-04-01 1972.715\n1991-05-01       NA\n1991-06-01 1974.964\n1991-07-01 1862.356\n1991-08-01 1939.860\n1991-09-01 2013.264\n1991-10-01 1595.657\n1991-11-01 1724.924\n1991-12-01 1675.667\n1992-01-01 1813.863\n1992-02-01 1614.827\n1992-03-01 1557.088\n1992-04-01 1891.223\n1992-05-01 1955.981\n1992-06-01 1884.714\n1992-07-01 1623.042\n1992-08-01 1903.309\n1992-09-01 1996.712\n1992-10-01 1703.897\n1992-11-01 1810.000\n1992-12-01 1861.601\n1993-01-01 1875.122\n1993-02-01 1705.259\n1993-03-01 1618.535\n1993-04-01 1836.709\n1993-05-01 1957.043\n1993-06-01 1917.185\n1993-07-01 1882.398\n1993-08-01 1933.009\n1993-09-01 1996.167\n1993-10-01 1672.841\n1993-11-01 1752.827\n1993-12-01 1720.377\n1994-01-01 1734.292\n1994-02-01 1563.365\n1994-03-01 1573.959\n1994-04-01 1902.639\n1994-05-01 1833.888\n1994-06-01 1831.049\n1994-07-01 1775.755\n1994-08-01 1867.508\n1994-09-01 1906.608\n1994-10-01 1685.632\n1994-11-01 1778.546\n1994-12-01 1775.995\n1995-01-01 1783.350\n1995-02-01 1548.415\n1995-03-01 1496.925\n1995-04-01 1798.316\n1995-05-01 1732.895\n1995-06-01 1772.345\n1995-07-01 1761.207\n1995-08-01       NA\n1995-09-01 1874.820\n1995-10-01 1571.309\n1995-11-01 1646.948\n1995-12-01 1672.631\n1996-01-01 1656.845\n1996-02-01 1381.758\n1996-03-01 1360.852\n1996-04-01 1558.575\n1996-05-01 1608.420\n1996-06-01 1696.696\n1996-07-01 1693.183\n1996-08-01 1835.516\n1996-09-01 1942.573\n1996-10-01 1551.401\n1996-11-01 1686.508\n1996-12-01 1576.204\n1997-01-01 1700.433\n1997-02-01 1396.588\n1997-03-01 1371.690\n1997-04-01 1707.522\n1997-05-01 1654.604\n1997-06-01 1762.903\n1997-07-01 1775.800\n1997-08-01 1934.219\n1997-09-01 2008.055\n1997-10-01 1615.924\n1997-11-01 1773.910\n1997-12-01 1732.368\n1998-01-01 1796.626\n1998-02-01 1570.330\n1998-03-01 1412.691\n1998-04-01 1754.641\n1998-05-01 1824.932\n1998-06-01 1843.289\n1998-07-01 1825.964\n1998-08-01 1968.172\n1998-09-01 1921.645\n1998-10-01 1669.597\n1998-11-01 1791.474\n1998-12-01 1816.714\n1999-01-01 1846.754\n1999-02-01 1599.427\n1999-03-01 1548.804\n1999-04-01 1832.333\n1999-05-01 1839.720\n1999-06-01 1846.498\n1999-07-01       NA\n1999-08-01 1965.743\n1999-09-01 1949.002\n1999-10-01 1607.373\n1999-11-01 1803.664\n1999-12-01 1850.309\n2000-01-01 1836.435\n2000-02-01 1541.660\n2000-03-01 1616.928\n2000-04-01 1919.538\n2000-05-01       NA\n2000-06-01 1992.301\n2000-07-01 2009.763\n2000-08-01 2053.996\n2000-09-01 2097.471\n2000-10-01 1823.706\n2000-11-01 1976.997\n2000-12-01 1981.408\n2001-01-01 2000.153\n2001-02-01 1683.148\n2001-03-01 1663.404\n2001-04-01 2007.928\n2001-05-01 2023.792\n2001-06-01 2047.008\n2001-07-01 2072.913\n2001-08-01 2126.717\n2001-09-01 2202.638\n2001-10-01 1707.693\n2001-11-01 1950.716\n2001-12-01 1973.614\n2002-01-01 1984.729\n2002-02-01 1759.629\n2002-03-01 1770.595\n2002-04-01 2019.912\n2002-05-01 2048.398\n2002-06-01 2068.763\n2002-07-01 1994.267\n2002-08-01 2075.258\n2002-09-01 2026.560\n2002-10-01 1734.155\n2002-11-01 1916.771\n2002-12-01 1858.345\n2003-01-01 1996.352\n2003-02-01 1778.033\n2003-03-01 1749.489\n2003-04-01 2066.466\n2003-05-01 2098.899\n2003-06-01 2104.911\n2003-07-01 2129.671\n2003-08-01       NA\n2003-09-01 2174.360\n2003-10-01 1931.406\n2003-11-01 2121.470\n2003-12-01 2076.054\n2004-01-01 2140.677\n2004-02-01 1831.508\n2004-03-01 1838.006\n2004-04-01 2132.446\n\nas.Date(ridership.ts.NA)\n\n  [1] \"1991-02-01\" \"1991-03-01\" \"1991-04-01\" \"1991-05-01\" \"1991-06-01\" \"1991-07-01\" \"1991-08-01\" \"1991-09-01\" \"1991-10-01\" \"1991-11-01\" \"1991-12-01\" \"1992-01-01\" \"1992-02-01\" \"1992-03-01\" \"1992-04-01\"\n [16] \"1992-05-01\" \"1992-06-01\" \"1992-07-01\" \"1992-08-01\" \"1992-09-01\" \"1992-10-01\" \"1992-11-01\" \"1992-12-01\" \"1993-01-01\" \"1993-02-01\" \"1993-03-01\" \"1993-04-01\" \"1993-05-01\" \"1993-06-01\" \"1993-07-01\"\n [31] \"1993-08-01\" \"1993-09-01\" \"1993-10-01\" \"1993-11-01\" \"1993-12-01\" \"1994-01-01\" \"1994-02-01\" \"1994-03-01\" \"1994-04-01\" \"1994-05-01\" \"1994-06-01\" \"1994-07-01\" \"1994-08-01\" \"1994-09-01\" \"1994-10-01\"\n [46] \"1994-11-01\" \"1994-12-01\" \"1995-01-01\" \"1995-02-01\" \"1995-03-01\" \"1995-04-01\" \"1995-05-01\" \"1995-06-01\" \"1995-07-01\" \"1995-08-01\" \"1995-09-01\" \"1995-10-01\" \"1995-11-01\" \"1995-12-01\" \"1996-01-01\"\n [61] \"1996-02-01\" \"1996-03-01\" \"1996-04-01\" \"1996-05-01\" \"1996-06-01\" \"1996-07-01\" \"1996-08-01\" \"1996-09-01\" \"1996-10-01\" \"1996-11-01\" \"1996-12-01\" \"1997-01-01\" \"1997-02-01\" \"1997-03-01\" \"1997-04-01\"\n [76] \"1997-05-01\" \"1997-06-01\" \"1997-07-01\" \"1997-08-01\" \"1997-09-01\" \"1997-10-01\" \"1997-11-01\" \"1997-12-01\" \"1998-01-01\" \"1998-02-01\" \"1998-03-01\" \"1998-04-01\" \"1998-05-01\" \"1998-06-01\" \"1998-07-01\"\n [91] \"1998-08-01\" \"1998-09-01\" \"1998-10-01\" \"1998-11-01\" \"1998-12-01\" \"1999-01-01\" \"1999-02-01\" \"1999-03-01\" \"1999-04-01\" \"1999-05-01\" \"1999-06-01\" \"1999-07-01\" \"1999-08-01\" \"1999-09-01\" \"1999-10-01\"\n[106] \"1999-11-01\" \"1999-12-01\" \"2000-01-01\" \"2000-02-01\" \"2000-03-01\" \"2000-04-01\" \"2000-05-01\" \"2000-06-01\" \"2000-07-01\" \"2000-08-01\" \"2000-09-01\" \"2000-10-01\" \"2000-11-01\" \"2000-12-01\" \"2001-01-01\"\n[121] \"2001-02-01\" \"2001-03-01\" \"2001-04-01\" \"2001-05-01\" \"2001-06-01\" \"2001-07-01\" \"2001-08-01\" \"2001-09-01\" \"2001-10-01\" \"2001-11-01\" \"2001-12-01\" \"2002-01-01\" \"2002-02-01\" \"2002-03-01\" \"2002-04-01\"\n[136] \"2002-05-01\" \"2002-06-01\" \"2002-07-01\" \"2002-08-01\" \"2002-09-01\" \"2002-10-01\" \"2002-11-01\" \"2002-12-01\" \"2003-01-01\" \"2003-02-01\" \"2003-03-01\" \"2003-04-01\" \"2003-05-01\" \"2003-06-01\" \"2003-07-01\"\n[151] \"2003-08-01\" \"2003-09-01\" \"2003-10-01\" \"2003-11-01\" \"2003-12-01\" \"2004-01-01\" \"2004-02-01\" \"2004-03-01\" \"2004-04-01\"\n\nggplot_na_distribution(as.numeric(ridership.ts.NA), \n                       x_axis_labels = as.Date(ridership.ts.NA), subtitle = \"\") +\n  ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))\n\n\n\n\n\n\n\n# ggplot_na_distribution(as.numeric(ridership.ts), \n#                        x_axis_labels = as.Date(Amtrak.data$Month, format = \"%m/%d/%Y\"))\n\n\n\n17.4.4 Imputation\n\n# 1. Using Basic Structural Model (Local Linear Trend + Seasonal) Due to frequency of ridership.ts.NA\nKalman.Imp &lt;- na_kalman(ridership.ts.NA)  \n\n# Imputation 확인\nKalman.Imp[loc]\n\n[1] 1849.782 1945.737 2221.376 1930.777 1817.434\n\nggplot_na_imputations(ridership.ts.NA, Kalman.Imp, x_axis_labels = as.Date(ridership.ts.NA))\n\n\n\n\n\n\n\n# 실제값과 비교\nggplot_na_imputations(ridership.ts.NA, Kalman.Imp, ridership.ts)\n\n\n\n\n\n\n\n# 2. Using Local Linear Trend\nKalman.Imp &lt;- na_kalman(ridership.ts.NA, type=\"trend\")  \n\n# Imputation 확인\nKalman.Imp[loc]\n\n[1] 1810.990 1874.212 2021.916 1768.566 1692.744\n\nggplot_na_imputations(ridership.ts.NA, Kalman.Imp, x_axis_labels = as.Date(ridership.ts.NA))\n\n\n\n\n\n\n\n# 실제값과 비교\nggplot_na_imputations(ridership.ts.NA, Kalman.Imp, ridership.ts)\n\n\n\n\n\n\n\n# 3. Auto.arima\nKalman.Imp.arima &lt;- na_kalman(ridership.ts.NA, model = \"auto.arima\")  \n\n# Imputation 확인\nKalman.Imp.arima[loc]\n\n[1] 1848.001 1952.100 2190.084 1990.073 1855.564\n\nggplot_na_imputations(ridership.ts.NA, Kalman.Imp.arima, x_axis_labels = as.Date(ridership.ts.NA))\n\n\n\n\n\n\n\n# 실제값과 비교\nggplot_na_imputations(ridership.ts.NA, Kalman.Imp.arima, ridership.ts)",
    "crumbs": [
      "Imputation",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Imputation using Kalman Smoothing</span>"
    ]
  }
]